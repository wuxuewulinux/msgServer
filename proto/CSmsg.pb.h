// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSmsg.proto

#ifndef PROTOBUF_CSmsg_2eproto__INCLUDED
#define PROTOBUF_CSmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "DBmsg.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSmsg_2eproto();
void protobuf_AssignDesc_CSmsg_2eproto();
void protobuf_ShutdownFile_CSmsg_2eproto();

class CSLoginReq;
class CSLoginRsp;
class CSRegisterReq;
class CSRegisterRsp;
class CSQuitReq;
class CSRegisterLoginReqParam;
class CSRegisterLoginRspParam;
class CSRegisterLoginReq;
class CSRegisterLoginRsp;
class CSBagFetchReq;
class CSBagGridInfo;
class CSBagBagInfo;
class CSBagFetchRsp;
class CSBagUseReq;
class CSItemInfo;
class CSItemInfoList;
class CSBagUseRsp;
class CSBagReqParam;
class CSBagRspParam;
class CSBagReq;
class CSBagRsp;
class CSDecorateBagFetchReq;
class CSDecorateBagGridInfo;
class CSDecorateBagInfo;
class CSDecorateBagFetchRsp;
class CSDecorateBagShowSetReq;
class CSDecorateBagVIPFetchReq;
class CSDecorateBagVIPItem;
class CSDecorateBagVIPList;
class CSDecorateBagVIPFetchRsp;
class CSDecorateBagReqParam;
class CSDecorateBagRspParam;
class CSDecorateBagReq;
class CSDecorateBagRsp;
class FriendList;
class CSMsgRegisterSuccessReq;
class CSMsgLoginSuccessReq;
class CSMsgQuitReq;
class CSMsgRoleInfo;
class CSMsgRoleInfoList;
class CSMsgLoginSuccessRsp;
class CSMsgAskAddFriendReq;
class CSMsgAskAddFriendRsp;
class CSMsgSuccessAddFriendReq;
class CSMsgSuccessAddFriendRsp;
class CSMsgDeleteFriendReq;
class CSMsgDeleteFriendRsp;
class CSMsgSendChatReq;
class CSMsgSendChatRsp;
class CSMsgFindNameReq;
class CSMsgFindNameRsp;
class CSMsgChangeStatusReq;
class CSMsgChangeStatusRsp;
class CSMsgConnectSuccessReq;
class CSChatReqParam;
class CSChatRspParam;
class CSChatReq;
class CSChatRsp;
class CSMateFetchReq;
class CSQuitMateFetchReq;
class CSNotButtonMateFetchReq;
class CSSuccessButtonMateFetchReq;
class CSShowHeroVipInfo;
class CSShowHeroInfo;
class CSShowHeroInfoList;
class CSFeiJiBagList;
class CSZhaDanBagList;
class CSFeiJiDiPanBagList;
class CSFeiJiSkillOneBagList;
class CSFeiJiSkillTwoBagList;
class CSEnterHeroShowRsp;
class CSEnterHeroShowBagReq;
class CSSendUserHeroShowRsp;
class CSShowZhaDanBagReq;
class CSShowZhaDanBagRsp;
class CSMateReqParam;
class CSMateRspParam;
class CSMateReq;
class CSMateRsp;
class CSMsgBody;
class CSMsgHead;
class CSMsg;

enum CSRegisterLoginCmd {
  CSRegisterLoginCmd_Register = 1,
  CSRegisterLoginCmd_Login = 2,
  CSRegisterLoginCmd_Quit = 3
};
bool CSRegisterLoginCmd_IsValid(int value);
const CSRegisterLoginCmd CSRegisterLoginCmd_MIN = CSRegisterLoginCmd_Register;
const CSRegisterLoginCmd CSRegisterLoginCmd_MAX = CSRegisterLoginCmd_Quit;
const int CSRegisterLoginCmd_ARRAYSIZE = CSRegisterLoginCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSRegisterLoginCmd_descriptor();
inline const ::std::string& CSRegisterLoginCmd_Name(CSRegisterLoginCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSRegisterLoginCmd_descriptor(), value);
}
inline bool CSRegisterLoginCmd_Parse(
    const ::std::string& name, CSRegisterLoginCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSRegisterLoginCmd>(
    CSRegisterLoginCmd_descriptor(), name, value);
}
enum CSBagCmd {
  CSBagCmd_Fetch = 1,
  CSBagCmd_Use = 2
};
bool CSBagCmd_IsValid(int value);
const CSBagCmd CSBagCmd_MIN = CSBagCmd_Fetch;
const CSBagCmd CSBagCmd_MAX = CSBagCmd_Use;
const int CSBagCmd_ARRAYSIZE = CSBagCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSBagCmd_descriptor();
inline const ::std::string& CSBagCmd_Name(CSBagCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSBagCmd_descriptor(), value);
}
inline bool CSBagCmd_Parse(
    const ::std::string& name, CSBagCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSBagCmd>(
    CSBagCmd_descriptor(), name, value);
}
enum CSDecorateBagCmd {
  CSDecorateBagCmd_Fetch = 1,
  CSDecorateBagCmd_ShowSet = 2,
  CSDecorateBagCmd_VipFetch = 3
};
bool CSDecorateBagCmd_IsValid(int value);
const CSDecorateBagCmd CSDecorateBagCmd_MIN = CSDecorateBagCmd_Fetch;
const CSDecorateBagCmd CSDecorateBagCmd_MAX = CSDecorateBagCmd_VipFetch;
const int CSDecorateBagCmd_ARRAYSIZE = CSDecorateBagCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSDecorateBagCmd_descriptor();
inline const ::std::string& CSDecorateBagCmd_Name(CSDecorateBagCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSDecorateBagCmd_descriptor(), value);
}
inline bool CSDecorateBagCmd_Parse(
    const ::std::string& name, CSDecorateBagCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSDecorateBagCmd>(
    CSDecorateBagCmd_descriptor(), name, value);
}
enum CSChatCmd {
  CSMsgServer_RegisterSuccess = 1,
  CSMsgServer_LoginSuccess = 2,
  CSMsgServer_Quit = 3,
  CSMsgServer_FriendLine = 4,
  CSMsgServer_AskAddFriend = 5,
  CSMsgServer_SuccessAddFriend = 6,
  CSMsgServer_DeleteFriend = 7,
  CSMsgServer_SendChat = 8,
  CSMsgServer_FindName = 9,
  CSMsgServer_ChangeStatus = 10,
  CSMsgServer_ConnectSuccess = 11
};
bool CSChatCmd_IsValid(int value);
const CSChatCmd CSChatCmd_MIN = CSMsgServer_RegisterSuccess;
const CSChatCmd CSChatCmd_MAX = CSMsgServer_ConnectSuccess;
const int CSChatCmd_ARRAYSIZE = CSChatCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSChatCmd_descriptor();
inline const ::std::string& CSChatCmd_Name(CSChatCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSChatCmd_descriptor(), value);
}
inline bool CSChatCmd_Parse(
    const ::std::string& name, CSChatCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSChatCmd>(
    CSChatCmd_descriptor(), name, value);
}
enum CSMateCmd {
  CSMateCmd_MateFetch = 1,
  CSMateCmd_MateNotSuccess = 2,
  CSMateCmd_MateNotUser = 3,
  CSMateCmd_QuitMateFetch = 4,
  CSMateCmd_NotButtonMateFetch = 5,
  CSMateCmd_SuccessButtonMateFetch = 6,
  CSMateCmd_EnterHeroShow = 7,
  CSMateCmd_EnterHeroShowBag = 8,
  CSMateCmd_SendUserHeroShow = 9,
  CSMateCmd_ShowZhaDanBag = 10
};
bool CSMateCmd_IsValid(int value);
const CSMateCmd CSMateCmd_MIN = CSMateCmd_MateFetch;
const CSMateCmd CSMateCmd_MAX = CSMateCmd_ShowZhaDanBag;
const int CSMateCmd_ARRAYSIZE = CSMateCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSMateCmd_descriptor();
inline const ::std::string& CSMateCmd_Name(CSMateCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSMateCmd_descriptor(), value);
}
inline bool CSMateCmd_Parse(
    const ::std::string& name, CSMateCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSMateCmd>(
    CSMateCmd_descriptor(), name, value);
}
enum CSMsgID {
  CS_MSGID_MIN = 0,
  CS_MSGID_RegisterLogin = 1,
  CS_MSGID_BAG = 2,
  CS_MSGID_DecorateBAG = 3,
  CS_MSGID_Chat = 4,
  CS_MSGID_Mate = 5,
  CS_MSGID_MAX = 6
};
bool CSMsgID_IsValid(int value);
const CSMsgID CSMsgID_MIN = CS_MSGID_MIN;
const CSMsgID CSMsgID_MAX = CS_MSGID_MAX;
const int CSMsgID_ARRAYSIZE = CSMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSMsgID_descriptor();
inline const ::std::string& CSMsgID_Name(CSMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSMsgID_descriptor(), value);
}
inline bool CSMsgID_Parse(
    const ::std::string& name, CSMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSMsgID>(
    CSMsgID_descriptor(), name, value);
}
// ===================================================================

class CSLoginReq : public ::google::protobuf::Message {
 public:
  CSLoginReq();
  virtual ~CSLoginReq();

  CSLoginReq(const CSLoginReq& from);

  inline CSLoginReq& operator=(const CSLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLoginReq& default_instance();

  void Swap(CSLoginReq* other);

  // implements Message ----------------------------------------------

  CSLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLoginReq& from);
  void MergeFrom(const CSLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:CSLoginReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class CSLoginRsp : public ::google::protobuf::Message {
 public:
  CSLoginRsp();
  virtual ~CSLoginRsp();

  CSLoginRsp(const CSLoginRsp& from);

  inline CSLoginRsp& operator=(const CSLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLoginRsp& default_instance();

  void Swap(CSLoginRsp* other);

  // implements Message ----------------------------------------------

  CSLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLoginRsp& from);
  void MergeFrom(const CSLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional .DBRoleInfo Role = 2;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 2;
  inline const ::DBRoleInfo& role() const;
  inline ::DBRoleInfo* mutable_role();
  inline ::DBRoleInfo* release_role();
  inline void set_allocated_role(::DBRoleInfo* role);

  // @@protoc_insertion_point(class_scope:CSLoginRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBRoleInfo* role_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterReq : public ::google::protobuf::Message {
 public:
  CSRegisterReq();
  virtual ~CSRegisterReq();

  CSRegisterReq(const CSRegisterReq& from);

  inline CSRegisterReq& operator=(const CSRegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterReq& default_instance();

  void Swap(CSRegisterReq* other);

  // implements Message ----------------------------------------------

  CSRegisterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterReq& from);
  void MergeFrom(const CSRegisterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSRegisterReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterRsp : public ::google::protobuf::Message {
 public:
  CSRegisterRsp();
  virtual ~CSRegisterRsp();

  CSRegisterRsp(const CSRegisterRsp& from);

  inline CSRegisterRsp& operator=(const CSRegisterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterRsp& default_instance();

  void Swap(CSRegisterRsp* other);

  // implements Message ----------------------------------------------

  CSRegisterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterRsp& from);
  void MergeFrom(const CSRegisterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSRegisterRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQuitReq : public ::google::protobuf::Message {
 public:
  CSQuitReq();
  virtual ~CSQuitReq();

  CSQuitReq(const CSQuitReq& from);

  inline CSQuitReq& operator=(const CSQuitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQuitReq& default_instance();

  void Swap(CSQuitReq* other);

  // implements Message ----------------------------------------------

  CSQuitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQuitReq& from);
  void MergeFrom(const CSQuitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pad = 1;
  inline bool has_pad() const;
  inline void clear_pad();
  static const int kPadFieldNumber = 1;
  inline ::google::protobuf::uint32 pad() const;
  inline void set_pad(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSQuitReq)
 private:
  inline void set_has_pad();
  inline void clear_has_pad();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pad_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSQuitReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterLoginReqParam : public ::google::protobuf::Message {
 public:
  CSRegisterLoginReqParam();
  virtual ~CSRegisterLoginReqParam();

  CSRegisterLoginReqParam(const CSRegisterLoginReqParam& from);

  inline CSRegisterLoginReqParam& operator=(const CSRegisterLoginReqParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterLoginReqParam& default_instance();

  void Swap(CSRegisterLoginReqParam* other);

  // implements Message ----------------------------------------------

  CSRegisterLoginReqParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterLoginReqParam& from);
  void MergeFrom(const CSRegisterLoginReqParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSLoginReq LoginReq = 1;
  inline bool has_loginreq() const;
  inline void clear_loginreq();
  static const int kLoginReqFieldNumber = 1;
  inline const ::CSLoginReq& loginreq() const;
  inline ::CSLoginReq* mutable_loginreq();
  inline ::CSLoginReq* release_loginreq();
  inline void set_allocated_loginreq(::CSLoginReq* loginreq);

  // optional .CSRegisterReq RegisterReq = 2;
  inline bool has_registerreq() const;
  inline void clear_registerreq();
  static const int kRegisterReqFieldNumber = 2;
  inline const ::CSRegisterReq& registerreq() const;
  inline ::CSRegisterReq* mutable_registerreq();
  inline ::CSRegisterReq* release_registerreq();
  inline void set_allocated_registerreq(::CSRegisterReq* registerreq);

  // optional .CSQuitReq QuitReq = 3;
  inline bool has_quitreq() const;
  inline void clear_quitreq();
  static const int kQuitReqFieldNumber = 3;
  inline const ::CSQuitReq& quitreq() const;
  inline ::CSQuitReq* mutable_quitreq();
  inline ::CSQuitReq* release_quitreq();
  inline void set_allocated_quitreq(::CSQuitReq* quitreq);

  // @@protoc_insertion_point(class_scope:CSRegisterLoginReqParam)
 private:
  inline void set_has_loginreq();
  inline void clear_has_loginreq();
  inline void set_has_registerreq();
  inline void clear_has_registerreq();
  inline void set_has_quitreq();
  inline void clear_has_quitreq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSLoginReq* loginreq_;
  ::CSRegisterReq* registerreq_;
  ::CSQuitReq* quitreq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterLoginReqParam* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterLoginRspParam : public ::google::protobuf::Message {
 public:
  CSRegisterLoginRspParam();
  virtual ~CSRegisterLoginRspParam();

  CSRegisterLoginRspParam(const CSRegisterLoginRspParam& from);

  inline CSRegisterLoginRspParam& operator=(const CSRegisterLoginRspParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterLoginRspParam& default_instance();

  void Swap(CSRegisterLoginRspParam* other);

  // implements Message ----------------------------------------------

  CSRegisterLoginRspParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterLoginRspParam& from);
  void MergeFrom(const CSRegisterLoginRspParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSLoginRsp LoginRsp = 1;
  inline bool has_loginrsp() const;
  inline void clear_loginrsp();
  static const int kLoginRspFieldNumber = 1;
  inline const ::CSLoginRsp& loginrsp() const;
  inline ::CSLoginRsp* mutable_loginrsp();
  inline ::CSLoginRsp* release_loginrsp();
  inline void set_allocated_loginrsp(::CSLoginRsp* loginrsp);

  // optional .CSRegisterRsp RegisterRsp = 2;
  inline bool has_registerrsp() const;
  inline void clear_registerrsp();
  static const int kRegisterRspFieldNumber = 2;
  inline const ::CSRegisterRsp& registerrsp() const;
  inline ::CSRegisterRsp* mutable_registerrsp();
  inline ::CSRegisterRsp* release_registerrsp();
  inline void set_allocated_registerrsp(::CSRegisterRsp* registerrsp);

  // @@protoc_insertion_point(class_scope:CSRegisterLoginRspParam)
 private:
  inline void set_has_loginrsp();
  inline void clear_has_loginrsp();
  inline void set_has_registerrsp();
  inline void clear_has_registerrsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSLoginRsp* loginrsp_;
  ::CSRegisterRsp* registerrsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterLoginRspParam* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterLoginReq : public ::google::protobuf::Message {
 public:
  CSRegisterLoginReq();
  virtual ~CSRegisterLoginReq();

  CSRegisterLoginReq(const CSRegisterLoginReq& from);

  inline CSRegisterLoginReq& operator=(const CSRegisterLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterLoginReq& default_instance();

  void Swap(CSRegisterLoginReq* other);

  // implements Message ----------------------------------------------

  CSRegisterLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterLoginReq& from);
  void MergeFrom(const CSRegisterLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSRegisterLoginCmd cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::CSRegisterLoginCmd cmd() const;
  inline void set_cmd(::CSRegisterLoginCmd value);

  // optional .CSRegisterLoginReqParam reqParam = 2;
  inline bool has_reqparam() const;
  inline void clear_reqparam();
  static const int kReqParamFieldNumber = 2;
  inline const ::CSRegisterLoginReqParam& reqparam() const;
  inline ::CSRegisterLoginReqParam* mutable_reqparam();
  inline ::CSRegisterLoginReqParam* release_reqparam();
  inline void set_allocated_reqparam(::CSRegisterLoginReqParam* reqparam);

  // @@protoc_insertion_point(class_scope:CSRegisterLoginReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_reqparam();
  inline void clear_has_reqparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSRegisterLoginReqParam* reqparam_;
  int cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRegisterLoginRsp : public ::google::protobuf::Message {
 public:
  CSRegisterLoginRsp();
  virtual ~CSRegisterLoginRsp();

  CSRegisterLoginRsp(const CSRegisterLoginRsp& from);

  inline CSRegisterLoginRsp& operator=(const CSRegisterLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRegisterLoginRsp& default_instance();

  void Swap(CSRegisterLoginRsp* other);

  // implements Message ----------------------------------------------

  CSRegisterLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRegisterLoginRsp& from);
  void MergeFrom(const CSRegisterLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .CSRegisterLoginCmd cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::CSRegisterLoginCmd cmd() const;
  inline void set_cmd(::CSRegisterLoginCmd value);

  // optional .CSRegisterLoginRspParam rspParam = 3;
  inline bool has_rspparam() const;
  inline void clear_rspparam();
  static const int kRspParamFieldNumber = 3;
  inline const ::CSRegisterLoginRspParam& rspparam() const;
  inline ::CSRegisterLoginRspParam* mutable_rspparam();
  inline ::CSRegisterLoginRspParam* release_rspparam();
  inline void set_allocated_rspparam(::CSRegisterLoginRspParam* rspparam);

  // @@protoc_insertion_point(class_scope:CSRegisterLoginRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_rspparam();
  inline void clear_has_rspparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int cmd_;
  ::CSRegisterLoginRspParam* rspparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSRegisterLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBagFetchReq : public ::google::protobuf::Message {
 public:
  CSBagFetchReq();
  virtual ~CSBagFetchReq();

  CSBagFetchReq(const CSBagFetchReq& from);

  inline CSBagFetchReq& operator=(const CSBagFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagFetchReq& default_instance();

  void Swap(CSBagFetchReq* other);

  // implements Message ----------------------------------------------

  CSBagFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagFetchReq& from);
  void MergeFrom(const CSBagFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pad = 1;
  inline bool has_pad() const;
  inline void clear_pad();
  static const int kPadFieldNumber = 1;
  inline ::google::protobuf::uint32 pad() const;
  inline void set_pad(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSBagFetchReq)
 private:
  inline void set_has_pad();
  inline void clear_has_pad();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pad_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBagGridInfo : public ::google::protobuf::Message {
 public:
  CSBagGridInfo();
  virtual ~CSBagGridInfo();

  CSBagGridInfo(const CSBagGridInfo& from);

  inline CSBagGridInfo& operator=(const CSBagGridInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagGridInfo& default_instance();

  void Swap(CSBagGridInfo* other);

  // implements Message ----------------------------------------------

  CSBagGridInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagGridInfo& from);
  void MergeFrom(const CSBagGridInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSBagGridInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagGridInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSBagBagInfo : public ::google::protobuf::Message {
 public:
  CSBagBagInfo();
  virtual ~CSBagBagInfo();

  CSBagBagInfo(const CSBagBagInfo& from);

  inline CSBagBagInfo& operator=(const CSBagBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagBagInfo& default_instance();

  void Swap(CSBagBagInfo* other);

  // implements Message ----------------------------------------------

  CSBagBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagBagInfo& from);
  void MergeFrom(const CSBagBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSBagGridInfo GridInfo = 1;
  inline int gridinfo_size() const;
  inline void clear_gridinfo();
  static const int kGridInfoFieldNumber = 1;
  inline const ::CSBagGridInfo& gridinfo(int index) const;
  inline ::CSBagGridInfo* mutable_gridinfo(int index);
  inline ::CSBagGridInfo* add_gridinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSBagGridInfo >&
      gridinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSBagGridInfo >*
      mutable_gridinfo();

  // @@protoc_insertion_point(class_scope:CSBagBagInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSBagGridInfo > gridinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSBagFetchRsp : public ::google::protobuf::Message {
 public:
  CSBagFetchRsp();
  virtual ~CSBagFetchRsp();

  CSBagFetchRsp(const CSBagFetchRsp& from);

  inline CSBagFetchRsp& operator=(const CSBagFetchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagFetchRsp& default_instance();

  void Swap(CSBagFetchRsp* other);

  // implements Message ----------------------------------------------

  CSBagFetchRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagFetchRsp& from);
  void MergeFrom(const CSBagFetchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSBagBagInfo BagInfo = 1;
  inline bool has_baginfo() const;
  inline void clear_baginfo();
  static const int kBagInfoFieldNumber = 1;
  inline const ::CSBagBagInfo& baginfo() const;
  inline ::CSBagBagInfo* mutable_baginfo();
  inline ::CSBagBagInfo* release_baginfo();
  inline void set_allocated_baginfo(::CSBagBagInfo* baginfo);

  // @@protoc_insertion_point(class_scope:CSBagFetchRsp)
 private:
  inline void set_has_baginfo();
  inline void clear_has_baginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSBagBagInfo* baginfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagFetchRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBagUseReq : public ::google::protobuf::Message {
 public:
  CSBagUseReq();
  virtual ~CSBagUseReq();

  CSBagUseReq(const CSBagUseReq& from);

  inline CSBagUseReq& operator=(const CSBagUseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagUseReq& default_instance();

  void Swap(CSBagUseReq* other);

  // implements Message ----------------------------------------------

  CSBagUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagUseReq& from);
  void MergeFrom(const CSBagUseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 ItemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);

  // optional uint32 PickedId = 3;
  inline bool has_pickedid() const;
  inline void clear_pickedid();
  static const int kPickedIdFieldNumber = 3;
  inline ::google::protobuf::uint32 pickedid() const;
  inline void set_pickedid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSBagUseReq)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_pickedid();
  inline void clear_has_pickedid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 pickedid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagUseReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemInfo : public ::google::protobuf::Message {
 public:
  CSItemInfo();
  virtual ~CSItemInfo();

  CSItemInfo(const CSItemInfo& from);

  inline CSItemInfo& operator=(const CSItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemInfo& default_instance();

  void Swap(CSItemInfo* other);

  // implements Message ----------------------------------------------

  CSItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemInfo& from);
  void MergeFrom(const CSItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSItemInfoList : public ::google::protobuf::Message {
 public:
  CSItemInfoList();
  virtual ~CSItemInfoList();

  CSItemInfoList(const CSItemInfoList& from);

  inline CSItemInfoList& operator=(const CSItemInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemInfoList& default_instance();

  void Swap(CSItemInfoList* other);

  // implements Message ----------------------------------------------

  CSItemInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemInfoList& from);
  void MergeFrom(const CSItemInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSItemInfo ItemInfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 1;
  inline const ::CSItemInfo& iteminfo(int index) const;
  inline ::CSItemInfo* mutable_iteminfo(int index);
  inline ::CSItemInfo* add_iteminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_iteminfo();

  // @@protoc_insertion_point(class_scope:CSItemInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > iteminfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSItemInfoList* default_instance_;
};
// -------------------------------------------------------------------

class CSBagUseRsp : public ::google::protobuf::Message {
 public:
  CSBagUseRsp();
  virtual ~CSBagUseRsp();

  CSBagUseRsp(const CSBagUseRsp& from);

  inline CSBagUseRsp& operator=(const CSBagUseRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagUseRsp& default_instance();

  void Swap(CSBagUseRsp* other);

  // implements Message ----------------------------------------------

  CSBagUseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagUseRsp& from);
  void MergeFrom(const CSBagUseRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSItemInfoList ItemInfoList = 1;
  inline bool has_iteminfolist() const;
  inline void clear_iteminfolist();
  static const int kItemInfoListFieldNumber = 1;
  inline const ::CSItemInfoList& iteminfolist() const;
  inline ::CSItemInfoList* mutable_iteminfolist();
  inline ::CSItemInfoList* release_iteminfolist();
  inline void set_allocated_iteminfolist(::CSItemInfoList* iteminfolist);

  // @@protoc_insertion_point(class_scope:CSBagUseRsp)
 private:
  inline void set_has_iteminfolist();
  inline void clear_has_iteminfolist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSItemInfoList* iteminfolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagUseRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBagReqParam : public ::google::protobuf::Message {
 public:
  CSBagReqParam();
  virtual ~CSBagReqParam();

  CSBagReqParam(const CSBagReqParam& from);

  inline CSBagReqParam& operator=(const CSBagReqParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagReqParam& default_instance();

  void Swap(CSBagReqParam* other);

  // implements Message ----------------------------------------------

  CSBagReqParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagReqParam& from);
  void MergeFrom(const CSBagReqParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSBagFetchReq FetchReq = 1;
  inline bool has_fetchreq() const;
  inline void clear_fetchreq();
  static const int kFetchReqFieldNumber = 1;
  inline const ::CSBagFetchReq& fetchreq() const;
  inline ::CSBagFetchReq* mutable_fetchreq();
  inline ::CSBagFetchReq* release_fetchreq();
  inline void set_allocated_fetchreq(::CSBagFetchReq* fetchreq);

  // optional .CSBagUseReq UseReq = 2;
  inline bool has_usereq() const;
  inline void clear_usereq();
  static const int kUseReqFieldNumber = 2;
  inline const ::CSBagUseReq& usereq() const;
  inline ::CSBagUseReq* mutable_usereq();
  inline ::CSBagUseReq* release_usereq();
  inline void set_allocated_usereq(::CSBagUseReq* usereq);

  // @@protoc_insertion_point(class_scope:CSBagReqParam)
 private:
  inline void set_has_fetchreq();
  inline void clear_has_fetchreq();
  inline void set_has_usereq();
  inline void clear_has_usereq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSBagFetchReq* fetchreq_;
  ::CSBagUseReq* usereq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagReqParam* default_instance_;
};
// -------------------------------------------------------------------

class CSBagRspParam : public ::google::protobuf::Message {
 public:
  CSBagRspParam();
  virtual ~CSBagRspParam();

  CSBagRspParam(const CSBagRspParam& from);

  inline CSBagRspParam& operator=(const CSBagRspParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagRspParam& default_instance();

  void Swap(CSBagRspParam* other);

  // implements Message ----------------------------------------------

  CSBagRspParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagRspParam& from);
  void MergeFrom(const CSBagRspParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSBagFetchRsp FetchRsp = 1;
  inline bool has_fetchrsp() const;
  inline void clear_fetchrsp();
  static const int kFetchRspFieldNumber = 1;
  inline const ::CSBagFetchRsp& fetchrsp() const;
  inline ::CSBagFetchRsp* mutable_fetchrsp();
  inline ::CSBagFetchRsp* release_fetchrsp();
  inline void set_allocated_fetchrsp(::CSBagFetchRsp* fetchrsp);

  // optional .CSBagUseRsp UseRsp = 2;
  inline bool has_usersp() const;
  inline void clear_usersp();
  static const int kUseRspFieldNumber = 2;
  inline const ::CSBagUseRsp& usersp() const;
  inline ::CSBagUseRsp* mutable_usersp();
  inline ::CSBagUseRsp* release_usersp();
  inline void set_allocated_usersp(::CSBagUseRsp* usersp);

  // @@protoc_insertion_point(class_scope:CSBagRspParam)
 private:
  inline void set_has_fetchrsp();
  inline void clear_has_fetchrsp();
  inline void set_has_usersp();
  inline void clear_has_usersp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSBagFetchRsp* fetchrsp_;
  ::CSBagUseRsp* usersp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagRspParam* default_instance_;
};
// -------------------------------------------------------------------

class CSBagReq : public ::google::protobuf::Message {
 public:
  CSBagReq();
  virtual ~CSBagReq();

  CSBagReq(const CSBagReq& from);

  inline CSBagReq& operator=(const CSBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagReq& default_instance();

  void Swap(CSBagReq* other);

  // implements Message ----------------------------------------------

  CSBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagReq& from);
  void MergeFrom(const CSBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSBagCmd cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::CSBagCmd cmd() const;
  inline void set_cmd(::CSBagCmd value);

  // optional .CSBagReqParam reqParam = 2;
  inline bool has_reqparam() const;
  inline void clear_reqparam();
  static const int kReqParamFieldNumber = 2;
  inline const ::CSBagReqParam& reqparam() const;
  inline ::CSBagReqParam* mutable_reqparam();
  inline ::CSBagReqParam* release_reqparam();
  inline void set_allocated_reqparam(::CSBagReqParam* reqparam);

  // @@protoc_insertion_point(class_scope:CSBagReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_reqparam();
  inline void clear_has_reqparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSBagReqParam* reqparam_;
  int cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBagRsp : public ::google::protobuf::Message {
 public:
  CSBagRsp();
  virtual ~CSBagRsp();

  CSBagRsp(const CSBagRsp& from);

  inline CSBagRsp& operator=(const CSBagRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBagRsp& default_instance();

  void Swap(CSBagRsp* other);

  // implements Message ----------------------------------------------

  CSBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBagRsp& from);
  void MergeFrom(const CSBagRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .CSBagCmd cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::CSBagCmd cmd() const;
  inline void set_cmd(::CSBagCmd value);

  // optional .CSBagRspParam rspParam = 3;
  inline bool has_rspparam() const;
  inline void clear_rspparam();
  static const int kRspParamFieldNumber = 3;
  inline const ::CSBagRspParam& rspparam() const;
  inline ::CSBagRspParam* mutable_rspparam();
  inline ::CSBagRspParam* release_rspparam();
  inline void set_allocated_rspparam(::CSBagRspParam* rspparam);

  // @@protoc_insertion_point(class_scope:CSBagRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_rspparam();
  inline void clear_has_rspparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int cmd_;
  ::CSBagRspParam* rspparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagFetchReq : public ::google::protobuf::Message {
 public:
  CSDecorateBagFetchReq();
  virtual ~CSDecorateBagFetchReq();

  CSDecorateBagFetchReq(const CSDecorateBagFetchReq& from);

  inline CSDecorateBagFetchReq& operator=(const CSDecorateBagFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagFetchReq& default_instance();

  void Swap(CSDecorateBagFetchReq* other);

  // implements Message ----------------------------------------------

  CSDecorateBagFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagFetchReq& from);
  void MergeFrom(const CSDecorateBagFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDecorateBagFetchReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagGridInfo : public ::google::protobuf::Message {
 public:
  CSDecorateBagGridInfo();
  virtual ~CSDecorateBagGridInfo();

  CSDecorateBagGridInfo(const CSDecorateBagGridInfo& from);

  inline CSDecorateBagGridInfo& operator=(const CSDecorateBagGridInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagGridInfo& default_instance();

  void Swap(CSDecorateBagGridInfo* other);

  // implements Message ----------------------------------------------

  CSDecorateBagGridInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagGridInfo& from);
  void MergeFrom(const CSDecorateBagGridInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ItemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 EndTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSDecorateBagGridInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagGridInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagInfo : public ::google::protobuf::Message {
 public:
  CSDecorateBagInfo();
  virtual ~CSDecorateBagInfo();

  CSDecorateBagInfo(const CSDecorateBagInfo& from);

  inline CSDecorateBagInfo& operator=(const CSDecorateBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagInfo& default_instance();

  void Swap(CSDecorateBagInfo* other);

  // implements Message ----------------------------------------------

  CSDecorateBagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagInfo& from);
  void MergeFrom(const CSDecorateBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSDecorateBagGridInfo DecorateGridInfo = 1;
  inline int decorategridinfo_size() const;
  inline void clear_decorategridinfo();
  static const int kDecorateGridInfoFieldNumber = 1;
  inline const ::CSDecorateBagGridInfo& decorategridinfo(int index) const;
  inline ::CSDecorateBagGridInfo* mutable_decorategridinfo(int index);
  inline ::CSDecorateBagGridInfo* add_decorategridinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSDecorateBagGridInfo >&
      decorategridinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSDecorateBagGridInfo >*
      mutable_decorategridinfo();

  // @@protoc_insertion_point(class_scope:CSDecorateBagInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSDecorateBagGridInfo > decorategridinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagFetchRsp : public ::google::protobuf::Message {
 public:
  CSDecorateBagFetchRsp();
  virtual ~CSDecorateBagFetchRsp();

  CSDecorateBagFetchRsp(const CSDecorateBagFetchRsp& from);

  inline CSDecorateBagFetchRsp& operator=(const CSDecorateBagFetchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagFetchRsp& default_instance();

  void Swap(CSDecorateBagFetchRsp* other);

  // implements Message ----------------------------------------------

  CSDecorateBagFetchRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagFetchRsp& from);
  void MergeFrom(const CSDecorateBagFetchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .CSDecorateBagInfo DecorateBagInfo = 3;
  inline bool has_decoratebaginfo() const;
  inline void clear_decoratebaginfo();
  static const int kDecorateBagInfoFieldNumber = 3;
  inline const ::CSDecorateBagInfo& decoratebaginfo() const;
  inline ::CSDecorateBagInfo* mutable_decoratebaginfo();
  inline ::CSDecorateBagInfo* release_decoratebaginfo();
  inline void set_allocated_decoratebaginfo(::CSDecorateBagInfo* decoratebaginfo);

  // @@protoc_insertion_point(class_scope:CSDecorateBagFetchRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_decoratebaginfo();
  inline void clear_has_decoratebaginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::CSDecorateBagInfo* decoratebaginfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagFetchRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagShowSetReq : public ::google::protobuf::Message {
 public:
  CSDecorateBagShowSetReq();
  virtual ~CSDecorateBagShowSetReq();

  CSDecorateBagShowSetReq(const CSDecorateBagShowSetReq& from);

  inline CSDecorateBagShowSetReq& operator=(const CSDecorateBagShowSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagShowSetReq& default_instance();

  void Swap(CSDecorateBagShowSetReq* other);

  // implements Message ----------------------------------------------

  CSDecorateBagShowSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagShowSetReq& from);
  void MergeFrom(const CSDecorateBagShowSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDecorateBagShowSetReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagShowSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagVIPFetchReq : public ::google::protobuf::Message {
 public:
  CSDecorateBagVIPFetchReq();
  virtual ~CSDecorateBagVIPFetchReq();

  CSDecorateBagVIPFetchReq(const CSDecorateBagVIPFetchReq& from);

  inline CSDecorateBagVIPFetchReq& operator=(const CSDecorateBagVIPFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagVIPFetchReq& default_instance();

  void Swap(CSDecorateBagVIPFetchReq* other);

  // implements Message ----------------------------------------------

  CSDecorateBagVIPFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagVIPFetchReq& from);
  void MergeFrom(const CSDecorateBagVIPFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDecorateBagVIPFetchReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagVIPFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagVIPItem : public ::google::protobuf::Message {
 public:
  CSDecorateBagVIPItem();
  virtual ~CSDecorateBagVIPItem();

  CSDecorateBagVIPItem(const CSDecorateBagVIPItem& from);

  inline CSDecorateBagVIPItem& operator=(const CSDecorateBagVIPItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagVIPItem& default_instance();

  void Swap(CSDecorateBagVIPItem* other);

  // implements Message ----------------------------------------------

  CSDecorateBagVIPItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagVIPItem& from);
  void MergeFrom(const CSDecorateBagVIPItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 VipGrade = 1;
  inline bool has_vipgrade() const;
  inline void clear_vipgrade();
  static const int kVipGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 vipgrade() const;
  inline void set_vipgrade(::google::protobuf::uint32 value);

  // optional uint32 VipExper = 2;
  inline bool has_vipexper() const;
  inline void clear_vipexper();
  static const int kVipExperFieldNumber = 2;
  inline ::google::protobuf::uint32 vipexper() const;
  inline void set_vipexper(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDecorateBagVIPItem)
 private:
  inline void set_has_vipgrade();
  inline void clear_has_vipgrade();
  inline void set_has_vipexper();
  inline void clear_has_vipexper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 vipgrade_;
  ::google::protobuf::uint32 vipexper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagVIPItem* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagVIPList : public ::google::protobuf::Message {
 public:
  CSDecorateBagVIPList();
  virtual ~CSDecorateBagVIPList();

  CSDecorateBagVIPList(const CSDecorateBagVIPList& from);

  inline CSDecorateBagVIPList& operator=(const CSDecorateBagVIPList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagVIPList& default_instance();

  void Swap(CSDecorateBagVIPList* other);

  // implements Message ----------------------------------------------

  CSDecorateBagVIPList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagVIPList& from);
  void MergeFrom(const CSDecorateBagVIPList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSDecorateBagVIPItem VIPItemList = 1;
  inline int vipitemlist_size() const;
  inline void clear_vipitemlist();
  static const int kVIPItemListFieldNumber = 1;
  inline const ::CSDecorateBagVIPItem& vipitemlist(int index) const;
  inline ::CSDecorateBagVIPItem* mutable_vipitemlist(int index);
  inline ::CSDecorateBagVIPItem* add_vipitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::CSDecorateBagVIPItem >&
      vipitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSDecorateBagVIPItem >*
      mutable_vipitemlist();

  // @@protoc_insertion_point(class_scope:CSDecorateBagVIPList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSDecorateBagVIPItem > vipitemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagVIPList* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagVIPFetchRsp : public ::google::protobuf::Message {
 public:
  CSDecorateBagVIPFetchRsp();
  virtual ~CSDecorateBagVIPFetchRsp();

  CSDecorateBagVIPFetchRsp(const CSDecorateBagVIPFetchRsp& from);

  inline CSDecorateBagVIPFetchRsp& operator=(const CSDecorateBagVIPFetchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagVIPFetchRsp& default_instance();

  void Swap(CSDecorateBagVIPFetchRsp* other);

  // implements Message ----------------------------------------------

  CSDecorateBagVIPFetchRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagVIPFetchRsp& from);
  void MergeFrom(const CSDecorateBagVIPFetchRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .CSDecorateBagInfo DecorateBagInfo = 3;
  inline bool has_decoratebaginfo() const;
  inline void clear_decoratebaginfo();
  static const int kDecorateBagInfoFieldNumber = 3;
  inline const ::CSDecorateBagInfo& decoratebaginfo() const;
  inline ::CSDecorateBagInfo* mutable_decoratebaginfo();
  inline ::CSDecorateBagInfo* release_decoratebaginfo();
  inline void set_allocated_decoratebaginfo(::CSDecorateBagInfo* decoratebaginfo);

  // optional .CSDecorateBagVIPList VipList = 4;
  inline bool has_viplist() const;
  inline void clear_viplist();
  static const int kVipListFieldNumber = 4;
  inline const ::CSDecorateBagVIPList& viplist() const;
  inline ::CSDecorateBagVIPList* mutable_viplist();
  inline ::CSDecorateBagVIPList* release_viplist();
  inline void set_allocated_viplist(::CSDecorateBagVIPList* viplist);

  // @@protoc_insertion_point(class_scope:CSDecorateBagVIPFetchRsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_decoratebaginfo();
  inline void clear_has_decoratebaginfo();
  inline void set_has_viplist();
  inline void clear_has_viplist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::CSDecorateBagInfo* decoratebaginfo_;
  ::CSDecorateBagVIPList* viplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagVIPFetchRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagReqParam : public ::google::protobuf::Message {
 public:
  CSDecorateBagReqParam();
  virtual ~CSDecorateBagReqParam();

  CSDecorateBagReqParam(const CSDecorateBagReqParam& from);

  inline CSDecorateBagReqParam& operator=(const CSDecorateBagReqParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagReqParam& default_instance();

  void Swap(CSDecorateBagReqParam* other);

  // implements Message ----------------------------------------------

  CSDecorateBagReqParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagReqParam& from);
  void MergeFrom(const CSDecorateBagReqParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSDecorateBagFetchReq FetchReq = 1;
  inline bool has_fetchreq() const;
  inline void clear_fetchreq();
  static const int kFetchReqFieldNumber = 1;
  inline const ::CSDecorateBagFetchReq& fetchreq() const;
  inline ::CSDecorateBagFetchReq* mutable_fetchreq();
  inline ::CSDecorateBagFetchReq* release_fetchreq();
  inline void set_allocated_fetchreq(::CSDecorateBagFetchReq* fetchreq);

  // optional .CSDecorateBagShowSetReq ShowSetReq = 2;
  inline bool has_showsetreq() const;
  inline void clear_showsetreq();
  static const int kShowSetReqFieldNumber = 2;
  inline const ::CSDecorateBagShowSetReq& showsetreq() const;
  inline ::CSDecorateBagShowSetReq* mutable_showsetreq();
  inline ::CSDecorateBagShowSetReq* release_showsetreq();
  inline void set_allocated_showsetreq(::CSDecorateBagShowSetReq* showsetreq);

  // optional .CSDecorateBagVIPFetchReq VIPFetchReq = 3;
  inline bool has_vipfetchreq() const;
  inline void clear_vipfetchreq();
  static const int kVIPFetchReqFieldNumber = 3;
  inline const ::CSDecorateBagVIPFetchReq& vipfetchreq() const;
  inline ::CSDecorateBagVIPFetchReq* mutable_vipfetchreq();
  inline ::CSDecorateBagVIPFetchReq* release_vipfetchreq();
  inline void set_allocated_vipfetchreq(::CSDecorateBagVIPFetchReq* vipfetchreq);

  // @@protoc_insertion_point(class_scope:CSDecorateBagReqParam)
 private:
  inline void set_has_fetchreq();
  inline void clear_has_fetchreq();
  inline void set_has_showsetreq();
  inline void clear_has_showsetreq();
  inline void set_has_vipfetchreq();
  inline void clear_has_vipfetchreq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSDecorateBagFetchReq* fetchreq_;
  ::CSDecorateBagShowSetReq* showsetreq_;
  ::CSDecorateBagVIPFetchReq* vipfetchreq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagReqParam* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagRspParam : public ::google::protobuf::Message {
 public:
  CSDecorateBagRspParam();
  virtual ~CSDecorateBagRspParam();

  CSDecorateBagRspParam(const CSDecorateBagRspParam& from);

  inline CSDecorateBagRspParam& operator=(const CSDecorateBagRspParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagRspParam& default_instance();

  void Swap(CSDecorateBagRspParam* other);

  // implements Message ----------------------------------------------

  CSDecorateBagRspParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagRspParam& from);
  void MergeFrom(const CSDecorateBagRspParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSDecorateBagFetchRsp FetchRsp = 1;
  inline bool has_fetchrsp() const;
  inline void clear_fetchrsp();
  static const int kFetchRspFieldNumber = 1;
  inline const ::CSDecorateBagFetchRsp& fetchrsp() const;
  inline ::CSDecorateBagFetchRsp* mutable_fetchrsp();
  inline ::CSDecorateBagFetchRsp* release_fetchrsp();
  inline void set_allocated_fetchrsp(::CSDecorateBagFetchRsp* fetchrsp);

  // optional .CSDecorateBagVIPFetchRsp VIPFetchRsp = 2;
  inline bool has_vipfetchrsp() const;
  inline void clear_vipfetchrsp();
  static const int kVIPFetchRspFieldNumber = 2;
  inline const ::CSDecorateBagVIPFetchRsp& vipfetchrsp() const;
  inline ::CSDecorateBagVIPFetchRsp* mutable_vipfetchrsp();
  inline ::CSDecorateBagVIPFetchRsp* release_vipfetchrsp();
  inline void set_allocated_vipfetchrsp(::CSDecorateBagVIPFetchRsp* vipfetchrsp);

  // @@protoc_insertion_point(class_scope:CSDecorateBagRspParam)
 private:
  inline void set_has_fetchrsp();
  inline void clear_has_fetchrsp();
  inline void set_has_vipfetchrsp();
  inline void clear_has_vipfetchrsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSDecorateBagFetchRsp* fetchrsp_;
  ::CSDecorateBagVIPFetchRsp* vipfetchrsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagRspParam* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagReq : public ::google::protobuf::Message {
 public:
  CSDecorateBagReq();
  virtual ~CSDecorateBagReq();

  CSDecorateBagReq(const CSDecorateBagReq& from);

  inline CSDecorateBagReq& operator=(const CSDecorateBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagReq& default_instance();

  void Swap(CSDecorateBagReq* other);

  // implements Message ----------------------------------------------

  CSDecorateBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagReq& from);
  void MergeFrom(const CSDecorateBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSDecorateBagCmd cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::CSDecorateBagCmd cmd() const;
  inline void set_cmd(::CSDecorateBagCmd value);

  // optional .CSDecorateBagReqParam reqParam = 2;
  inline bool has_reqparam() const;
  inline void clear_reqparam();
  static const int kReqParamFieldNumber = 2;
  inline const ::CSDecorateBagReqParam& reqparam() const;
  inline ::CSDecorateBagReqParam* mutable_reqparam();
  inline ::CSDecorateBagReqParam* release_reqparam();
  inline void set_allocated_reqparam(::CSDecorateBagReqParam* reqparam);

  // @@protoc_insertion_point(class_scope:CSDecorateBagReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_reqparam();
  inline void clear_has_reqparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSDecorateBagReqParam* reqparam_;
  int cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDecorateBagRsp : public ::google::protobuf::Message {
 public:
  CSDecorateBagRsp();
  virtual ~CSDecorateBagRsp();

  CSDecorateBagRsp(const CSDecorateBagRsp& from);

  inline CSDecorateBagRsp& operator=(const CSDecorateBagRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDecorateBagRsp& default_instance();

  void Swap(CSDecorateBagRsp* other);

  // implements Message ----------------------------------------------

  CSDecorateBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDecorateBagRsp& from);
  void MergeFrom(const CSDecorateBagRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .CSDecorateBagCmd cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::CSDecorateBagCmd cmd() const;
  inline void set_cmd(::CSDecorateBagCmd value);

  // optional .CSDecorateBagRspParam rspParam = 3;
  inline bool has_rspparam() const;
  inline void clear_rspparam();
  static const int kRspParamFieldNumber = 3;
  inline const ::CSDecorateBagRspParam& rspparam() const;
  inline ::CSDecorateBagRspParam* mutable_rspparam();
  inline ::CSDecorateBagRspParam* release_rspparam();
  inline void set_allocated_rspparam(::CSDecorateBagRspParam* rspparam);

  // @@protoc_insertion_point(class_scope:CSDecorateBagRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_rspparam();
  inline void clear_has_rspparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int cmd_;
  ::CSDecorateBagRspParam* rspparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSDecorateBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class FriendList : public ::google::protobuf::Message {
 public:
  FriendList();
  virtual ~FriendList();

  FriendList(const FriendList& from);

  inline FriendList& operator=(const FriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendList& default_instance();

  void Swap(FriendList* other);

  // implements Message ----------------------------------------------

  FriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendList& from);
  void MergeFrom(const FriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 FriendUid = 1;
  inline int frienduid_size() const;
  inline void clear_frienduid();
  static const int kFriendUidFieldNumber = 1;
  inline ::google::protobuf::uint64 frienduid(int index) const;
  inline void set_frienduid(int index, ::google::protobuf::uint64 value);
  inline void add_frienduid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      frienduid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_frienduid();

  // @@protoc_insertion_point(class_scope:FriendList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > frienduid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static FriendList* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgRegisterSuccessReq : public ::google::protobuf::Message {
 public:
  CSMsgRegisterSuccessReq();
  virtual ~CSMsgRegisterSuccessReq();

  CSMsgRegisterSuccessReq(const CSMsgRegisterSuccessReq& from);

  inline CSMsgRegisterSuccessReq& operator=(const CSMsgRegisterSuccessReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgRegisterSuccessReq& default_instance();

  void Swap(CSMsgRegisterSuccessReq* other);

  // implements Message ----------------------------------------------

  CSMsgRegisterSuccessReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgRegisterSuccessReq& from);
  void MergeFrom(const CSMsgRegisterSuccessReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSMsgRegisterSuccessReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgRegisterSuccessReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgLoginSuccessReq : public ::google::protobuf::Message {
 public:
  CSMsgLoginSuccessReq();
  virtual ~CSMsgLoginSuccessReq();

  CSMsgLoginSuccessReq(const CSMsgLoginSuccessReq& from);

  inline CSMsgLoginSuccessReq& operator=(const CSMsgLoginSuccessReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgLoginSuccessReq& default_instance();

  void Swap(CSMsgLoginSuccessReq* other);

  // implements Message ----------------------------------------------

  CSMsgLoginSuccessReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgLoginSuccessReq& from);
  void MergeFrom(const CSMsgLoginSuccessReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgLoginSuccessReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgLoginSuccessReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgQuitReq : public ::google::protobuf::Message {
 public:
  CSMsgQuitReq();
  virtual ~CSMsgQuitReq();

  CSMsgQuitReq(const CSMsgQuitReq& from);

  inline CSMsgQuitReq& operator=(const CSMsgQuitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgQuitReq& default_instance();

  void Swap(CSMsgQuitReq* other);

  // implements Message ----------------------------------------------

  CSMsgQuitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgQuitReq& from);
  void MergeFrom(const CSMsgQuitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgQuitReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgQuitReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgRoleInfo : public ::google::protobuf::Message {
 public:
  CSMsgRoleInfo();
  virtual ~CSMsgRoleInfo();

  CSMsgRoleInfo(const CSMsgRoleInfo& from);

  inline CSMsgRoleInfo& operator=(const CSMsgRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgRoleInfo& default_instance();

  void Swap(CSMsgRoleInfo* other);

  // implements Message ----------------------------------------------

  CSMsgRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgRoleInfo& from);
  void MergeFrom(const CSMsgRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 Grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);

  // optional uint32 Rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 Status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 Vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::uint32 vip() const;
  inline void set_vip(::google::protobuf::uint32 value);

  // optional uint32 Head = 6;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 6;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);

  // optional uint32 ChatFrame = 7;
  inline bool has_chatframe() const;
  inline void clear_chatframe();
  static const int kChatFrameFieldNumber = 7;
  inline ::google::protobuf::uint32 chatframe() const;
  inline void set_chatframe(::google::protobuf::uint32 value);

  // optional string Name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSMsgRoleInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_chatframe();
  inline void clear_has_chatframe();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 vip_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 chatframe_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgRoleInfoList : public ::google::protobuf::Message {
 public:
  CSMsgRoleInfoList();
  virtual ~CSMsgRoleInfoList();

  CSMsgRoleInfoList(const CSMsgRoleInfoList& from);

  inline CSMsgRoleInfoList& operator=(const CSMsgRoleInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgRoleInfoList& default_instance();

  void Swap(CSMsgRoleInfoList* other);

  // implements Message ----------------------------------------------

  CSMsgRoleInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgRoleInfoList& from);
  void MergeFrom(const CSMsgRoleInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSMsgRoleInfo RoleInfo = 1;
  inline int roleinfo_size() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 1;
  inline const ::CSMsgRoleInfo& roleinfo(int index) const;
  inline ::CSMsgRoleInfo* mutable_roleinfo(int index);
  inline ::CSMsgRoleInfo* add_roleinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMsgRoleInfo >&
      roleinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMsgRoleInfo >*
      mutable_roleinfo();

  // @@protoc_insertion_point(class_scope:CSMsgRoleInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSMsgRoleInfo > roleinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgRoleInfoList* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgLoginSuccessRsp : public ::google::protobuf::Message {
 public:
  CSMsgLoginSuccessRsp();
  virtual ~CSMsgLoginSuccessRsp();

  CSMsgLoginSuccessRsp(const CSMsgLoginSuccessRsp& from);

  inline CSMsgLoginSuccessRsp& operator=(const CSMsgLoginSuccessRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgLoginSuccessRsp& default_instance();

  void Swap(CSMsgLoginSuccessRsp* other);

  // implements Message ----------------------------------------------

  CSMsgLoginSuccessRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgLoginSuccessRsp& from);
  void MergeFrom(const CSMsgLoginSuccessRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgRoleInfoList FriendList = 1;
  inline bool has_friendlist() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::CSMsgRoleInfoList& friendlist() const;
  inline ::CSMsgRoleInfoList* mutable_friendlist();
  inline ::CSMsgRoleInfoList* release_friendlist();
  inline void set_allocated_friendlist(::CSMsgRoleInfoList* friendlist);

  // @@protoc_insertion_point(class_scope:CSMsgLoginSuccessRsp)
 private:
  inline void set_has_friendlist();
  inline void clear_has_friendlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgRoleInfoList* friendlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgLoginSuccessRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgAskAddFriendReq : public ::google::protobuf::Message {
 public:
  CSMsgAskAddFriendReq();
  virtual ~CSMsgAskAddFriendReq();

  CSMsgAskAddFriendReq(const CSMsgAskAddFriendReq& from);

  inline CSMsgAskAddFriendReq& operator=(const CSMsgAskAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgAskAddFriendReq& default_instance();

  void Swap(CSMsgAskAddFriendReq* other);

  // implements Message ----------------------------------------------

  CSMsgAskAddFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgAskAddFriendReq& from);
  void MergeFrom(const CSMsgAskAddFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 Uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgAskAddFriendReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgAskAddFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgAskAddFriendRsp : public ::google::protobuf::Message {
 public:
  CSMsgAskAddFriendRsp();
  virtual ~CSMsgAskAddFriendRsp();

  CSMsgAskAddFriendRsp(const CSMsgAskAddFriendRsp& from);

  inline CSMsgAskAddFriendRsp& operator=(const CSMsgAskAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgAskAddFriendRsp& default_instance();

  void Swap(CSMsgAskAddFriendRsp* other);

  // implements Message ----------------------------------------------

  CSMsgAskAddFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgAskAddFriendRsp& from);
  void MergeFrom(const CSMsgAskAddFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string FriendName = 2;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendNameFieldNumber = 2;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // @@protoc_insertion_point(class_scope:CSMsgAskAddFriendRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_friendname();
  inline void clear_has_friendname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* friendname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgAskAddFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgSuccessAddFriendReq : public ::google::protobuf::Message {
 public:
  CSMsgSuccessAddFriendReq();
  virtual ~CSMsgSuccessAddFriendReq();

  CSMsgSuccessAddFriendReq(const CSMsgSuccessAddFriendReq& from);

  inline CSMsgSuccessAddFriendReq& operator=(const CSMsgSuccessAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgSuccessAddFriendReq& default_instance();

  void Swap(CSMsgSuccessAddFriendReq* other);

  // implements Message ----------------------------------------------

  CSMsgSuccessAddFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgSuccessAddFriendReq& from);
  void MergeFrom(const CSMsgSuccessAddFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid1 = 1;
  inline bool has_uid1() const;
  inline void clear_uid1();
  static const int kUid1FieldNumber = 1;
  inline ::google::protobuf::uint64 uid1() const;
  inline void set_uid1(::google::protobuf::uint64 value);

  // optional uint64 Uid2 = 2;
  inline bool has_uid2() const;
  inline void clear_uid2();
  static const int kUid2FieldNumber = 2;
  inline ::google::protobuf::uint64 uid2() const;
  inline void set_uid2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgSuccessAddFriendReq)
 private:
  inline void set_has_uid1();
  inline void clear_has_uid1();
  inline void set_has_uid2();
  inline void clear_has_uid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid1_;
  ::google::protobuf::uint64 uid2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgSuccessAddFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgSuccessAddFriendRsp : public ::google::protobuf::Message {
 public:
  CSMsgSuccessAddFriendRsp();
  virtual ~CSMsgSuccessAddFriendRsp();

  CSMsgSuccessAddFriendRsp(const CSMsgSuccessAddFriendRsp& from);

  inline CSMsgSuccessAddFriendRsp& operator=(const CSMsgSuccessAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgSuccessAddFriendRsp& default_instance();

  void Swap(CSMsgSuccessAddFriendRsp* other);

  // implements Message ----------------------------------------------

  CSMsgSuccessAddFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgSuccessAddFriendRsp& from);
  void MergeFrom(const CSMsgSuccessAddFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgRoleInfo FriendRoleInfo = 1;
  inline bool has_friendroleinfo() const;
  inline void clear_friendroleinfo();
  static const int kFriendRoleInfoFieldNumber = 1;
  inline const ::CSMsgRoleInfo& friendroleinfo() const;
  inline ::CSMsgRoleInfo* mutable_friendroleinfo();
  inline ::CSMsgRoleInfo* release_friendroleinfo();
  inline void set_allocated_friendroleinfo(::CSMsgRoleInfo* friendroleinfo);

  // @@protoc_insertion_point(class_scope:CSMsgSuccessAddFriendRsp)
 private:
  inline void set_has_friendroleinfo();
  inline void clear_has_friendroleinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgRoleInfo* friendroleinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgSuccessAddFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgDeleteFriendReq : public ::google::protobuf::Message {
 public:
  CSMsgDeleteFriendReq();
  virtual ~CSMsgDeleteFriendReq();

  CSMsgDeleteFriendReq(const CSMsgDeleteFriendReq& from);

  inline CSMsgDeleteFriendReq& operator=(const CSMsgDeleteFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgDeleteFriendReq& default_instance();

  void Swap(CSMsgDeleteFriendReq* other);

  // implements Message ----------------------------------------------

  CSMsgDeleteFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgDeleteFriendReq& from);
  void MergeFrom(const CSMsgDeleteFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid1 = 1;
  inline bool has_uid1() const;
  inline void clear_uid1();
  static const int kUid1FieldNumber = 1;
  inline ::google::protobuf::uint64 uid1() const;
  inline void set_uid1(::google::protobuf::uint64 value);

  // optional uint64 Uid2 = 2;
  inline bool has_uid2() const;
  inline void clear_uid2();
  static const int kUid2FieldNumber = 2;
  inline ::google::protobuf::uint64 uid2() const;
  inline void set_uid2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgDeleteFriendReq)
 private:
  inline void set_has_uid1();
  inline void clear_has_uid1();
  inline void set_has_uid2();
  inline void clear_has_uid2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid1_;
  ::google::protobuf::uint64 uid2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgDeleteFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgDeleteFriendRsp : public ::google::protobuf::Message {
 public:
  CSMsgDeleteFriendRsp();
  virtual ~CSMsgDeleteFriendRsp();

  CSMsgDeleteFriendRsp(const CSMsgDeleteFriendRsp& from);

  inline CSMsgDeleteFriendRsp& operator=(const CSMsgDeleteFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgDeleteFriendRsp& default_instance();

  void Swap(CSMsgDeleteFriendRsp* other);

  // implements Message ----------------------------------------------

  CSMsgDeleteFriendRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgDeleteFriendRsp& from);
  void MergeFrom(const CSMsgDeleteFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgDeleteFriendRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgDeleteFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgSendChatReq : public ::google::protobuf::Message {
 public:
  CSMsgSendChatReq();
  virtual ~CSMsgSendChatReq();

  CSMsgSendChatReq(const CSMsgSendChatReq& from);

  inline CSMsgSendChatReq& operator=(const CSMsgSendChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgSendChatReq& default_instance();

  void Swap(CSMsgSendChatReq* other);

  // implements Message ----------------------------------------------

  CSMsgSendChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgSendChatReq& from);
  void MergeFrom(const CSMsgSendChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid1 = 1;
  inline bool has_uid1() const;
  inline void clear_uid1();
  static const int kUid1FieldNumber = 1;
  inline ::google::protobuf::uint64 uid1() const;
  inline void set_uid1(::google::protobuf::uint64 value);

  // optional uint64 Uid2 = 2;
  inline bool has_uid2() const;
  inline void clear_uid2();
  static const int kUid2FieldNumber = 2;
  inline ::google::protobuf::uint64 uid2() const;
  inline void set_uid2(::google::protobuf::uint64 value);

  // optional string information = 3;
  inline bool has_information() const;
  inline void clear_information();
  static const int kInformationFieldNumber = 3;
  inline const ::std::string& information() const;
  inline void set_information(const ::std::string& value);
  inline void set_information(const char* value);
  inline void set_information(const char* value, size_t size);
  inline ::std::string* mutable_information();
  inline ::std::string* release_information();
  inline void set_allocated_information(::std::string* information);

  // @@protoc_insertion_point(class_scope:CSMsgSendChatReq)
 private:
  inline void set_has_uid1();
  inline void clear_has_uid1();
  inline void set_has_uid2();
  inline void clear_has_uid2();
  inline void set_has_information();
  inline void clear_has_information();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid1_;
  ::google::protobuf::uint64 uid2_;
  ::std::string* information_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgSendChatReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgSendChatRsp : public ::google::protobuf::Message {
 public:
  CSMsgSendChatRsp();
  virtual ~CSMsgSendChatRsp();

  CSMsgSendChatRsp(const CSMsgSendChatRsp& from);

  inline CSMsgSendChatRsp& operator=(const CSMsgSendChatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgSendChatRsp& default_instance();

  void Swap(CSMsgSendChatRsp* other);

  // implements Message ----------------------------------------------

  CSMsgSendChatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgSendChatRsp& from);
  void MergeFrom(const CSMsgSendChatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional string information = 2;
  inline bool has_information() const;
  inline void clear_information();
  static const int kInformationFieldNumber = 2;
  inline const ::std::string& information() const;
  inline void set_information(const ::std::string& value);
  inline void set_information(const char* value);
  inline void set_information(const char* value, size_t size);
  inline ::std::string* mutable_information();
  inline ::std::string* release_information();
  inline void set_allocated_information(::std::string* information);

  // @@protoc_insertion_point(class_scope:CSMsgSendChatRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_information();
  inline void clear_has_information();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* information_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgSendChatRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgFindNameReq : public ::google::protobuf::Message {
 public:
  CSMsgFindNameReq();
  virtual ~CSMsgFindNameReq();

  CSMsgFindNameReq(const CSMsgFindNameReq& from);

  inline CSMsgFindNameReq& operator=(const CSMsgFindNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgFindNameReq& default_instance();

  void Swap(CSMsgFindNameReq* other);

  // implements Message ----------------------------------------------

  CSMsgFindNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgFindNameReq& from);
  void MergeFrom(const CSMsgFindNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSMsgFindNameReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgFindNameReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgFindNameRsp : public ::google::protobuf::Message {
 public:
  CSMsgFindNameRsp();
  virtual ~CSMsgFindNameRsp();

  CSMsgFindNameRsp(const CSMsgFindNameRsp& from);

  inline CSMsgFindNameRsp& operator=(const CSMsgFindNameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgFindNameRsp& default_instance();

  void Swap(CSMsgFindNameRsp* other);

  // implements Message ----------------------------------------------

  CSMsgFindNameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgFindNameRsp& from);
  void MergeFrom(const CSMsgFindNameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgRoleInfo RoleInfo = 1;
  inline bool has_roleinfo() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 1;
  inline const ::CSMsgRoleInfo& roleinfo() const;
  inline ::CSMsgRoleInfo* mutable_roleinfo();
  inline ::CSMsgRoleInfo* release_roleinfo();
  inline void set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo);

  // @@protoc_insertion_point(class_scope:CSMsgFindNameRsp)
 private:
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgRoleInfo* roleinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgFindNameRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgChangeStatusReq : public ::google::protobuf::Message {
 public:
  CSMsgChangeStatusReq();
  virtual ~CSMsgChangeStatusReq();

  CSMsgChangeStatusReq(const CSMsgChangeStatusReq& from);

  inline CSMsgChangeStatusReq& operator=(const CSMsgChangeStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgChangeStatusReq& default_instance();

  void Swap(CSMsgChangeStatusReq* other);

  // implements Message ----------------------------------------------

  CSMsgChangeStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgChangeStatusReq& from);
  void MergeFrom(const CSMsgChangeStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint64 Uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgChangeStatusReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgChangeStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgChangeStatusRsp : public ::google::protobuf::Message {
 public:
  CSMsgChangeStatusRsp();
  virtual ~CSMsgChangeStatusRsp();

  CSMsgChangeStatusRsp(const CSMsgChangeStatusRsp& from);

  inline CSMsgChangeStatusRsp& operator=(const CSMsgChangeStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgChangeStatusRsp& default_instance();

  void Swap(CSMsgChangeStatusRsp* other);

  // implements Message ----------------------------------------------

  CSMsgChangeStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgChangeStatusRsp& from);
  void MergeFrom(const CSMsgChangeStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgRoleInfo RoleInfo = 1;
  inline bool has_roleinfo() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 1;
  inline const ::CSMsgRoleInfo& roleinfo() const;
  inline ::CSMsgRoleInfo* mutable_roleinfo();
  inline ::CSMsgRoleInfo* release_roleinfo();
  inline void set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo);

  // @@protoc_insertion_point(class_scope:CSMsgChangeStatusRsp)
 private:
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgRoleInfo* roleinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgChangeStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgConnectSuccessReq : public ::google::protobuf::Message {
 public:
  CSMsgConnectSuccessReq();
  virtual ~CSMsgConnectSuccessReq();

  CSMsgConnectSuccessReq(const CSMsgConnectSuccessReq& from);

  inline CSMsgConnectSuccessReq& operator=(const CSMsgConnectSuccessReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgConnectSuccessReq& default_instance();

  void Swap(CSMsgConnectSuccessReq* other);

  // implements Message ----------------------------------------------

  CSMsgConnectSuccessReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgConnectSuccessReq& from);
  void MergeFrom(const CSMsgConnectSuccessReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMsgConnectSuccessReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgConnectSuccessReq* default_instance_;
};
// -------------------------------------------------------------------

class CSChatReqParam : public ::google::protobuf::Message {
 public:
  CSChatReqParam();
  virtual ~CSChatReqParam();

  CSChatReqParam(const CSChatReqParam& from);

  inline CSChatReqParam& operator=(const CSChatReqParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChatReqParam& default_instance();

  void Swap(CSChatReqParam* other);

  // implements Message ----------------------------------------------

  CSChatReqParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChatReqParam& from);
  void MergeFrom(const CSChatReqParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgRegisterSuccessReq RegisterSuccessReq = 1;
  inline bool has_registersuccessreq() const;
  inline void clear_registersuccessreq();
  static const int kRegisterSuccessReqFieldNumber = 1;
  inline const ::CSMsgRegisterSuccessReq& registersuccessreq() const;
  inline ::CSMsgRegisterSuccessReq* mutable_registersuccessreq();
  inline ::CSMsgRegisterSuccessReq* release_registersuccessreq();
  inline void set_allocated_registersuccessreq(::CSMsgRegisterSuccessReq* registersuccessreq);

  // optional .CSMsgLoginSuccessReq LoginSuccessReq = 2;
  inline bool has_loginsuccessreq() const;
  inline void clear_loginsuccessreq();
  static const int kLoginSuccessReqFieldNumber = 2;
  inline const ::CSMsgLoginSuccessReq& loginsuccessreq() const;
  inline ::CSMsgLoginSuccessReq* mutable_loginsuccessreq();
  inline ::CSMsgLoginSuccessReq* release_loginsuccessreq();
  inline void set_allocated_loginsuccessreq(::CSMsgLoginSuccessReq* loginsuccessreq);

  // optional .CSMsgQuitReq MsgQuitReq = 3;
  inline bool has_msgquitreq() const;
  inline void clear_msgquitreq();
  static const int kMsgQuitReqFieldNumber = 3;
  inline const ::CSMsgQuitReq& msgquitreq() const;
  inline ::CSMsgQuitReq* mutable_msgquitreq();
  inline ::CSMsgQuitReq* release_msgquitreq();
  inline void set_allocated_msgquitreq(::CSMsgQuitReq* msgquitreq);

  // optional .CSMsgAskAddFriendReq AskAddFriendReq = 4;
  inline bool has_askaddfriendreq() const;
  inline void clear_askaddfriendreq();
  static const int kAskAddFriendReqFieldNumber = 4;
  inline const ::CSMsgAskAddFriendReq& askaddfriendreq() const;
  inline ::CSMsgAskAddFriendReq* mutable_askaddfriendreq();
  inline ::CSMsgAskAddFriendReq* release_askaddfriendreq();
  inline void set_allocated_askaddfriendreq(::CSMsgAskAddFriendReq* askaddfriendreq);

  // optional .CSMsgSuccessAddFriendReq SuccessAddFriendReq = 5;
  inline bool has_successaddfriendreq() const;
  inline void clear_successaddfriendreq();
  static const int kSuccessAddFriendReqFieldNumber = 5;
  inline const ::CSMsgSuccessAddFriendReq& successaddfriendreq() const;
  inline ::CSMsgSuccessAddFriendReq* mutable_successaddfriendreq();
  inline ::CSMsgSuccessAddFriendReq* release_successaddfriendreq();
  inline void set_allocated_successaddfriendreq(::CSMsgSuccessAddFriendReq* successaddfriendreq);

  // optional .CSMsgDeleteFriendReq DeleteFriendReq = 6;
  inline bool has_deletefriendreq() const;
  inline void clear_deletefriendreq();
  static const int kDeleteFriendReqFieldNumber = 6;
  inline const ::CSMsgDeleteFriendReq& deletefriendreq() const;
  inline ::CSMsgDeleteFriendReq* mutable_deletefriendreq();
  inline ::CSMsgDeleteFriendReq* release_deletefriendreq();
  inline void set_allocated_deletefriendreq(::CSMsgDeleteFriendReq* deletefriendreq);

  // optional .CSMsgSendChatReq SendChatReq = 7;
  inline bool has_sendchatreq() const;
  inline void clear_sendchatreq();
  static const int kSendChatReqFieldNumber = 7;
  inline const ::CSMsgSendChatReq& sendchatreq() const;
  inline ::CSMsgSendChatReq* mutable_sendchatreq();
  inline ::CSMsgSendChatReq* release_sendchatreq();
  inline void set_allocated_sendchatreq(::CSMsgSendChatReq* sendchatreq);

  // optional .CSMsgFindNameReq FindNameReq = 8;
  inline bool has_findnamereq() const;
  inline void clear_findnamereq();
  static const int kFindNameReqFieldNumber = 8;
  inline const ::CSMsgFindNameReq& findnamereq() const;
  inline ::CSMsgFindNameReq* mutable_findnamereq();
  inline ::CSMsgFindNameReq* release_findnamereq();
  inline void set_allocated_findnamereq(::CSMsgFindNameReq* findnamereq);

  // optional .CSMsgChangeStatusReq ChangeStatusReq = 9;
  inline bool has_changestatusreq() const;
  inline void clear_changestatusreq();
  static const int kChangeStatusReqFieldNumber = 9;
  inline const ::CSMsgChangeStatusReq& changestatusreq() const;
  inline ::CSMsgChangeStatusReq* mutable_changestatusreq();
  inline ::CSMsgChangeStatusReq* release_changestatusreq();
  inline void set_allocated_changestatusreq(::CSMsgChangeStatusReq* changestatusreq);

  // optional .CSMsgConnectSuccessReq ConnectSuccessReq = 10;
  inline bool has_connectsuccessreq() const;
  inline void clear_connectsuccessreq();
  static const int kConnectSuccessReqFieldNumber = 10;
  inline const ::CSMsgConnectSuccessReq& connectsuccessreq() const;
  inline ::CSMsgConnectSuccessReq* mutable_connectsuccessreq();
  inline ::CSMsgConnectSuccessReq* release_connectsuccessreq();
  inline void set_allocated_connectsuccessreq(::CSMsgConnectSuccessReq* connectsuccessreq);

  // @@protoc_insertion_point(class_scope:CSChatReqParam)
 private:
  inline void set_has_registersuccessreq();
  inline void clear_has_registersuccessreq();
  inline void set_has_loginsuccessreq();
  inline void clear_has_loginsuccessreq();
  inline void set_has_msgquitreq();
  inline void clear_has_msgquitreq();
  inline void set_has_askaddfriendreq();
  inline void clear_has_askaddfriendreq();
  inline void set_has_successaddfriendreq();
  inline void clear_has_successaddfriendreq();
  inline void set_has_deletefriendreq();
  inline void clear_has_deletefriendreq();
  inline void set_has_sendchatreq();
  inline void clear_has_sendchatreq();
  inline void set_has_findnamereq();
  inline void clear_has_findnamereq();
  inline void set_has_changestatusreq();
  inline void clear_has_changestatusreq();
  inline void set_has_connectsuccessreq();
  inline void clear_has_connectsuccessreq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgRegisterSuccessReq* registersuccessreq_;
  ::CSMsgLoginSuccessReq* loginsuccessreq_;
  ::CSMsgQuitReq* msgquitreq_;
  ::CSMsgAskAddFriendReq* askaddfriendreq_;
  ::CSMsgSuccessAddFriendReq* successaddfriendreq_;
  ::CSMsgDeleteFriendReq* deletefriendreq_;
  ::CSMsgSendChatReq* sendchatreq_;
  ::CSMsgFindNameReq* findnamereq_;
  ::CSMsgChangeStatusReq* changestatusreq_;
  ::CSMsgConnectSuccessReq* connectsuccessreq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSChatReqParam* default_instance_;
};
// -------------------------------------------------------------------

class CSChatRspParam : public ::google::protobuf::Message {
 public:
  CSChatRspParam();
  virtual ~CSChatRspParam();

  CSChatRspParam(const CSChatRspParam& from);

  inline CSChatRspParam& operator=(const CSChatRspParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChatRspParam& default_instance();

  void Swap(CSChatRspParam* other);

  // implements Message ----------------------------------------------

  CSChatRspParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChatRspParam& from);
  void MergeFrom(const CSChatRspParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMsgLoginSuccessRsp MsgLoginSuccess = 1;
  inline bool has_msgloginsuccess() const;
  inline void clear_msgloginsuccess();
  static const int kMsgLoginSuccessFieldNumber = 1;
  inline const ::CSMsgLoginSuccessRsp& msgloginsuccess() const;
  inline ::CSMsgLoginSuccessRsp* mutable_msgloginsuccess();
  inline ::CSMsgLoginSuccessRsp* release_msgloginsuccess();
  inline void set_allocated_msgloginsuccess(::CSMsgLoginSuccessRsp* msgloginsuccess);

  // optional .CSMsgRoleInfo RoleInfo = 2;
  inline bool has_roleinfo() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 2;
  inline const ::CSMsgRoleInfo& roleinfo() const;
  inline ::CSMsgRoleInfo* mutable_roleinfo();
  inline ::CSMsgRoleInfo* release_roleinfo();
  inline void set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo);

  // optional .CSMsgRoleInfo RoleQuit = 3;
  inline bool has_rolequit() const;
  inline void clear_rolequit();
  static const int kRoleQuitFieldNumber = 3;
  inline const ::CSMsgRoleInfo& rolequit() const;
  inline ::CSMsgRoleInfo* mutable_rolequit();
  inline ::CSMsgRoleInfo* release_rolequit();
  inline void set_allocated_rolequit(::CSMsgRoleInfo* rolequit);

  // optional .CSMsgAskAddFriendRsp AskAddFriendRsp = 4;
  inline bool has_askaddfriendrsp() const;
  inline void clear_askaddfriendrsp();
  static const int kAskAddFriendRspFieldNumber = 4;
  inline const ::CSMsgAskAddFriendRsp& askaddfriendrsp() const;
  inline ::CSMsgAskAddFriendRsp* mutable_askaddfriendrsp();
  inline ::CSMsgAskAddFriendRsp* release_askaddfriendrsp();
  inline void set_allocated_askaddfriendrsp(::CSMsgAskAddFriendRsp* askaddfriendrsp);

  // optional .CSMsgSuccessAddFriendRsp SuccessAddFriendRsp = 5;
  inline bool has_successaddfriendrsp() const;
  inline void clear_successaddfriendrsp();
  static const int kSuccessAddFriendRspFieldNumber = 5;
  inline const ::CSMsgSuccessAddFriendRsp& successaddfriendrsp() const;
  inline ::CSMsgSuccessAddFriendRsp* mutable_successaddfriendrsp();
  inline ::CSMsgSuccessAddFriendRsp* release_successaddfriendrsp();
  inline void set_allocated_successaddfriendrsp(::CSMsgSuccessAddFriendRsp* successaddfriendrsp);

  // optional .CSMsgDeleteFriendRsp DeleteFriendRsp = 6;
  inline bool has_deletefriendrsp() const;
  inline void clear_deletefriendrsp();
  static const int kDeleteFriendRspFieldNumber = 6;
  inline const ::CSMsgDeleteFriendRsp& deletefriendrsp() const;
  inline ::CSMsgDeleteFriendRsp* mutable_deletefriendrsp();
  inline ::CSMsgDeleteFriendRsp* release_deletefriendrsp();
  inline void set_allocated_deletefriendrsp(::CSMsgDeleteFriendRsp* deletefriendrsp);

  // optional .CSMsgSendChatRsp SendChatRsp = 7;
  inline bool has_sendchatrsp() const;
  inline void clear_sendchatrsp();
  static const int kSendChatRspFieldNumber = 7;
  inline const ::CSMsgSendChatRsp& sendchatrsp() const;
  inline ::CSMsgSendChatRsp* mutable_sendchatrsp();
  inline ::CSMsgSendChatRsp* release_sendchatrsp();
  inline void set_allocated_sendchatrsp(::CSMsgSendChatRsp* sendchatrsp);

  // optional .CSMsgFindNameRsp FindNameRsp = 8;
  inline bool has_findnamersp() const;
  inline void clear_findnamersp();
  static const int kFindNameRspFieldNumber = 8;
  inline const ::CSMsgFindNameRsp& findnamersp() const;
  inline ::CSMsgFindNameRsp* mutable_findnamersp();
  inline ::CSMsgFindNameRsp* release_findnamersp();
  inline void set_allocated_findnamersp(::CSMsgFindNameRsp* findnamersp);

  // optional .CSMsgChangeStatusRsp ChangeStatusRsp = 9;
  inline bool has_changestatusrsp() const;
  inline void clear_changestatusrsp();
  static const int kChangeStatusRspFieldNumber = 9;
  inline const ::CSMsgChangeStatusRsp& changestatusrsp() const;
  inline ::CSMsgChangeStatusRsp* mutable_changestatusrsp();
  inline ::CSMsgChangeStatusRsp* release_changestatusrsp();
  inline void set_allocated_changestatusrsp(::CSMsgChangeStatusRsp* changestatusrsp);

  // @@protoc_insertion_point(class_scope:CSChatRspParam)
 private:
  inline void set_has_msgloginsuccess();
  inline void clear_has_msgloginsuccess();
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();
  inline void set_has_rolequit();
  inline void clear_has_rolequit();
  inline void set_has_askaddfriendrsp();
  inline void clear_has_askaddfriendrsp();
  inline void set_has_successaddfriendrsp();
  inline void clear_has_successaddfriendrsp();
  inline void set_has_deletefriendrsp();
  inline void clear_has_deletefriendrsp();
  inline void set_has_sendchatrsp();
  inline void clear_has_sendchatrsp();
  inline void set_has_findnamersp();
  inline void clear_has_findnamersp();
  inline void set_has_changestatusrsp();
  inline void clear_has_changestatusrsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgLoginSuccessRsp* msgloginsuccess_;
  ::CSMsgRoleInfo* roleinfo_;
  ::CSMsgRoleInfo* rolequit_;
  ::CSMsgAskAddFriendRsp* askaddfriendrsp_;
  ::CSMsgSuccessAddFriendRsp* successaddfriendrsp_;
  ::CSMsgDeleteFriendRsp* deletefriendrsp_;
  ::CSMsgSendChatRsp* sendchatrsp_;
  ::CSMsgFindNameRsp* findnamersp_;
  ::CSMsgChangeStatusRsp* changestatusrsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSChatRspParam* default_instance_;
};
// -------------------------------------------------------------------

class CSChatReq : public ::google::protobuf::Message {
 public:
  CSChatReq();
  virtual ~CSChatReq();

  CSChatReq(const CSChatReq& from);

  inline CSChatReq& operator=(const CSChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChatReq& default_instance();

  void Swap(CSChatReq* other);

  // implements Message ----------------------------------------------

  CSChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChatReq& from);
  void MergeFrom(const CSChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSChatCmd cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::CSChatCmd cmd() const;
  inline void set_cmd(::CSChatCmd value);

  // optional .CSChatReqParam reqParam = 2;
  inline bool has_reqparam() const;
  inline void clear_reqparam();
  static const int kReqParamFieldNumber = 2;
  inline const ::CSChatReqParam& reqparam() const;
  inline ::CSChatReqParam* mutable_reqparam();
  inline ::CSChatReqParam* release_reqparam();
  inline void set_allocated_reqparam(::CSChatReqParam* reqparam);

  // @@protoc_insertion_point(class_scope:CSChatReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_reqparam();
  inline void clear_has_reqparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSChatReqParam* reqparam_;
  int cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSChatReq* default_instance_;
};
// -------------------------------------------------------------------

class CSChatRsp : public ::google::protobuf::Message {
 public:
  CSChatRsp();
  virtual ~CSChatRsp();

  CSChatRsp(const CSChatRsp& from);

  inline CSChatRsp& operator=(const CSChatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSChatRsp& default_instance();

  void Swap(CSChatRsp* other);

  // implements Message ----------------------------------------------

  CSChatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSChatRsp& from);
  void MergeFrom(const CSChatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .CSChatCmd cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::CSChatCmd cmd() const;
  inline void set_cmd(::CSChatCmd value);

  // optional .CSChatRspParam rspParam = 3;
  inline bool has_rspparam() const;
  inline void clear_rspparam();
  static const int kRspParamFieldNumber = 3;
  inline const ::CSChatRspParam& rspparam() const;
  inline ::CSChatRspParam* mutable_rspparam();
  inline ::CSChatRspParam* release_rspparam();
  inline void set_allocated_rspparam(::CSChatRspParam* rspparam);

  // @@protoc_insertion_point(class_scope:CSChatRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_rspparam();
  inline void clear_has_rspparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int cmd_;
  ::CSChatRspParam* rspparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSChatRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMateFetchReq : public ::google::protobuf::Message {
 public:
  CSMateFetchReq();
  virtual ~CSMateFetchReq();

  CSMateFetchReq(const CSMateFetchReq& from);

  inline CSMateFetchReq& operator=(const CSMateFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMateFetchReq& default_instance();

  void Swap(CSMateFetchReq* other);

  // implements Message ----------------------------------------------

  CSMateFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMateFetchReq& from);
  void MergeFrom(const CSMateFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSMateFetchReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMateFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQuitMateFetchReq : public ::google::protobuf::Message {
 public:
  CSQuitMateFetchReq();
  virtual ~CSQuitMateFetchReq();

  CSQuitMateFetchReq(const CSQuitMateFetchReq& from);

  inline CSQuitMateFetchReq& operator=(const CSQuitMateFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQuitMateFetchReq& default_instance();

  void Swap(CSQuitMateFetchReq* other);

  // implements Message ----------------------------------------------

  CSQuitMateFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQuitMateFetchReq& from);
  void MergeFrom(const CSQuitMateFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSQuitMateFetchReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSQuitMateFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNotButtonMateFetchReq : public ::google::protobuf::Message {
 public:
  CSNotButtonMateFetchReq();
  virtual ~CSNotButtonMateFetchReq();

  CSNotButtonMateFetchReq(const CSNotButtonMateFetchReq& from);

  inline CSNotButtonMateFetchReq& operator=(const CSNotButtonMateFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotButtonMateFetchReq& default_instance();

  void Swap(CSNotButtonMateFetchReq* other);

  // implements Message ----------------------------------------------

  CSNotButtonMateFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotButtonMateFetchReq& from);
  void MergeFrom(const CSNotButtonMateFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSNotButtonMateFetchReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSNotButtonMateFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSuccessButtonMateFetchReq : public ::google::protobuf::Message {
 public:
  CSSuccessButtonMateFetchReq();
  virtual ~CSSuccessButtonMateFetchReq();

  CSSuccessButtonMateFetchReq(const CSSuccessButtonMateFetchReq& from);

  inline CSSuccessButtonMateFetchReq& operator=(const CSSuccessButtonMateFetchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSuccessButtonMateFetchReq& default_instance();

  void Swap(CSSuccessButtonMateFetchReq* other);

  // implements Message ----------------------------------------------

  CSSuccessButtonMateFetchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSuccessButtonMateFetchReq& from);
  void MergeFrom(const CSSuccessButtonMateFetchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSSuccessButtonMateFetchReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSSuccessButtonMateFetchReq* default_instance_;
};
// -------------------------------------------------------------------

class CSShowHeroVipInfo : public ::google::protobuf::Message {
 public:
  CSShowHeroVipInfo();
  virtual ~CSShowHeroVipInfo();

  CSShowHeroVipInfo(const CSShowHeroVipInfo& from);

  inline CSShowHeroVipInfo& operator=(const CSShowHeroVipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowHeroVipInfo& default_instance();

  void Swap(CSShowHeroVipInfo* other);

  // implements Message ----------------------------------------------

  CSShowHeroVipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowHeroVipInfo& from);
  void MergeFrom(const CSShowHeroVipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 VipId = 1;
  inline bool has_vipid() const;
  inline void clear_vipid();
  static const int kVipIdFieldNumber = 1;
  inline ::google::protobuf::uint32 vipid() const;
  inline void set_vipid(::google::protobuf::uint32 value);

  // optional uint32 VipGrade = 2;
  inline bool has_vipgrade() const;
  inline void clear_vipgrade();
  static const int kVipGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 vipgrade() const;
  inline void set_vipgrade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSShowHeroVipInfo)
 private:
  inline void set_has_vipid();
  inline void clear_has_vipid();
  inline void set_has_vipgrade();
  inline void clear_has_vipgrade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 vipid_;
  ::google::protobuf::uint32 vipgrade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSShowHeroVipInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSShowHeroInfo : public ::google::protobuf::Message {
 public:
  CSShowHeroInfo();
  virtual ~CSShowHeroInfo();

  CSShowHeroInfo(const CSShowHeroInfo& from);

  inline CSShowHeroInfo& operator=(const CSShowHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowHeroInfo& default_instance();

  void Swap(CSShowHeroInfo* other);

  // implements Message ----------------------------------------------

  CSShowHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowHeroInfo& from);
  void MergeFrom(const CSShowHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 VipID = 2;
  inline bool has_vipid() const;
  inline void clear_vipid();
  static const int kVipIDFieldNumber = 2;
  inline ::google::protobuf::uint32 vipid() const;
  inline void set_vipid(::google::protobuf::uint32 value);

  // optional uint32 VipGrade = 3;
  inline bool has_vipgrade() const;
  inline void clear_vipgrade();
  static const int kVipGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 vipgrade() const;
  inline void set_vipgrade(::google::protobuf::uint32 value);

  // optional uint32 RoleGrade = 4;
  inline bool has_rolegrade() const;
  inline void clear_rolegrade();
  static const int kRoleGradeFieldNumber = 4;
  inline ::google::protobuf::uint32 rolegrade() const;
  inline void set_rolegrade(::google::protobuf::uint32 value);

  // optional uint32 RoleRank = 5;
  inline bool has_rolerank() const;
  inline void clear_rolerank();
  static const int kRoleRankFieldNumber = 5;
  inline ::google::protobuf::uint32 rolerank() const;
  inline void set_rolerank(::google::protobuf::uint32 value);

  // optional uint32 RoleHeadType = 6;
  inline bool has_roleheadtype() const;
  inline void clear_roleheadtype();
  static const int kRoleHeadTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 roleheadtype() const;
  inline void set_roleheadtype(::google::protobuf::uint32 value);

  // optional string Name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSShowHeroInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_vipid();
  inline void clear_has_vipid();
  inline void set_has_vipgrade();
  inline void clear_has_vipgrade();
  inline void set_has_rolegrade();
  inline void clear_has_rolegrade();
  inline void set_has_rolerank();
  inline void clear_has_rolerank();
  inline void set_has_roleheadtype();
  inline void clear_has_roleheadtype();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 vipid_;
  ::google::protobuf::uint32 vipgrade_;
  ::google::protobuf::uint32 rolegrade_;
  ::google::protobuf::uint32 rolerank_;
  ::std::string* name_;
  ::google::protobuf::uint32 roleheadtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSShowHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSShowHeroInfoList : public ::google::protobuf::Message {
 public:
  CSShowHeroInfoList();
  virtual ~CSShowHeroInfoList();

  CSShowHeroInfoList(const CSShowHeroInfoList& from);

  inline CSShowHeroInfoList& operator=(const CSShowHeroInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowHeroInfoList& default_instance();

  void Swap(CSShowHeroInfoList* other);

  // implements Message ----------------------------------------------

  CSShowHeroInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowHeroInfoList& from);
  void MergeFrom(const CSShowHeroInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSShowHeroInfo HeroInfoList = 1;
  inline int heroinfolist_size() const;
  inline void clear_heroinfolist();
  static const int kHeroInfoListFieldNumber = 1;
  inline const ::CSShowHeroInfo& heroinfolist(int index) const;
  inline ::CSShowHeroInfo* mutable_heroinfolist(int index);
  inline ::CSShowHeroInfo* add_heroinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::CSShowHeroInfo >&
      heroinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSShowHeroInfo >*
      mutable_heroinfolist();

  // @@protoc_insertion_point(class_scope:CSShowHeroInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSShowHeroInfo > heroinfolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSShowHeroInfoList* default_instance_;
};
// -------------------------------------------------------------------

class CSFeiJiBagList : public ::google::protobuf::Message {
 public:
  CSFeiJiBagList();
  virtual ~CSFeiJiBagList();

  CSFeiJiBagList(const CSFeiJiBagList& from);

  inline CSFeiJiBagList& operator=(const CSFeiJiBagList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFeiJiBagList& default_instance();

  void Swap(CSFeiJiBagList* other);

  // implements Message ----------------------------------------------

  CSFeiJiBagList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFeiJiBagList& from);
  void MergeFrom(const CSFeiJiBagList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FeiJi = 1;
  inline int feiji_size() const;
  inline void clear_feiji();
  static const int kFeiJiFieldNumber = 1;
  inline ::google::protobuf::uint32 feiji(int index) const;
  inline void set_feiji(int index, ::google::protobuf::uint32 value);
  inline void add_feiji(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      feiji() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_feiji();

  // @@protoc_insertion_point(class_scope:CSFeiJiBagList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > feiji_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSFeiJiBagList* default_instance_;
};
// -------------------------------------------------------------------

class CSZhaDanBagList : public ::google::protobuf::Message {
 public:
  CSZhaDanBagList();
  virtual ~CSZhaDanBagList();

  CSZhaDanBagList(const CSZhaDanBagList& from);

  inline CSZhaDanBagList& operator=(const CSZhaDanBagList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSZhaDanBagList& default_instance();

  void Swap(CSZhaDanBagList* other);

  // implements Message ----------------------------------------------

  CSZhaDanBagList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSZhaDanBagList& from);
  void MergeFrom(const CSZhaDanBagList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ZhaDan = 1;
  inline int zhadan_size() const;
  inline void clear_zhadan();
  static const int kZhaDanFieldNumber = 1;
  inline ::google::protobuf::uint32 zhadan(int index) const;
  inline void set_zhadan(int index, ::google::protobuf::uint32 value);
  inline void add_zhadan(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      zhadan() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_zhadan();

  // @@protoc_insertion_point(class_scope:CSZhaDanBagList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > zhadan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSZhaDanBagList* default_instance_;
};
// -------------------------------------------------------------------

class CSFeiJiDiPanBagList : public ::google::protobuf::Message {
 public:
  CSFeiJiDiPanBagList();
  virtual ~CSFeiJiDiPanBagList();

  CSFeiJiDiPanBagList(const CSFeiJiDiPanBagList& from);

  inline CSFeiJiDiPanBagList& operator=(const CSFeiJiDiPanBagList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFeiJiDiPanBagList& default_instance();

  void Swap(CSFeiJiDiPanBagList* other);

  // implements Message ----------------------------------------------

  CSFeiJiDiPanBagList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFeiJiDiPanBagList& from);
  void MergeFrom(const CSFeiJiDiPanBagList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FeiJiDiPan = 1;
  inline int feijidipan_size() const;
  inline void clear_feijidipan();
  static const int kFeiJiDiPanFieldNumber = 1;
  inline ::google::protobuf::uint32 feijidipan(int index) const;
  inline void set_feijidipan(int index, ::google::protobuf::uint32 value);
  inline void add_feijidipan(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      feijidipan() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_feijidipan();

  // @@protoc_insertion_point(class_scope:CSFeiJiDiPanBagList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > feijidipan_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSFeiJiDiPanBagList* default_instance_;
};
// -------------------------------------------------------------------

class CSFeiJiSkillOneBagList : public ::google::protobuf::Message {
 public:
  CSFeiJiSkillOneBagList();
  virtual ~CSFeiJiSkillOneBagList();

  CSFeiJiSkillOneBagList(const CSFeiJiSkillOneBagList& from);

  inline CSFeiJiSkillOneBagList& operator=(const CSFeiJiSkillOneBagList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFeiJiSkillOneBagList& default_instance();

  void Swap(CSFeiJiSkillOneBagList* other);

  // implements Message ----------------------------------------------

  CSFeiJiSkillOneBagList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFeiJiSkillOneBagList& from);
  void MergeFrom(const CSFeiJiSkillOneBagList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FeiJiSkillOne = 1;
  inline int feijiskillone_size() const;
  inline void clear_feijiskillone();
  static const int kFeiJiSkillOneFieldNumber = 1;
  inline ::google::protobuf::uint32 feijiskillone(int index) const;
  inline void set_feijiskillone(int index, ::google::protobuf::uint32 value);
  inline void add_feijiskillone(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      feijiskillone() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_feijiskillone();

  // @@protoc_insertion_point(class_scope:CSFeiJiSkillOneBagList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > feijiskillone_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSFeiJiSkillOneBagList* default_instance_;
};
// -------------------------------------------------------------------

class CSFeiJiSkillTwoBagList : public ::google::protobuf::Message {
 public:
  CSFeiJiSkillTwoBagList();
  virtual ~CSFeiJiSkillTwoBagList();

  CSFeiJiSkillTwoBagList(const CSFeiJiSkillTwoBagList& from);

  inline CSFeiJiSkillTwoBagList& operator=(const CSFeiJiSkillTwoBagList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSFeiJiSkillTwoBagList& default_instance();

  void Swap(CSFeiJiSkillTwoBagList* other);

  // implements Message ----------------------------------------------

  CSFeiJiSkillTwoBagList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSFeiJiSkillTwoBagList& from);
  void MergeFrom(const CSFeiJiSkillTwoBagList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FeiJiSkillTwo = 1;
  inline int feijiskilltwo_size() const;
  inline void clear_feijiskilltwo();
  static const int kFeiJiSkillTwoFieldNumber = 1;
  inline ::google::protobuf::uint32 feijiskilltwo(int index) const;
  inline void set_feijiskilltwo(int index, ::google::protobuf::uint32 value);
  inline void add_feijiskilltwo(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      feijiskilltwo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_feijiskilltwo();

  // @@protoc_insertion_point(class_scope:CSFeiJiSkillTwoBagList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > feijiskilltwo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSFeiJiSkillTwoBagList* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterHeroShowRsp : public ::google::protobuf::Message {
 public:
  CSEnterHeroShowRsp();
  virtual ~CSEnterHeroShowRsp();

  CSEnterHeroShowRsp(const CSEnterHeroShowRsp& from);

  inline CSEnterHeroShowRsp& operator=(const CSEnterHeroShowRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterHeroShowRsp& default_instance();

  void Swap(CSEnterHeroShowRsp* other);

  // implements Message ----------------------------------------------

  CSEnterHeroShowRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterHeroShowRsp& from);
  void MergeFrom(const CSEnterHeroShowRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSShowHeroVipInfo ShowHeroVipInfo = 1;
  inline bool has_showherovipinfo() const;
  inline void clear_showherovipinfo();
  static const int kShowHeroVipInfoFieldNumber = 1;
  inline const ::CSShowHeroVipInfo& showherovipinfo() const;
  inline ::CSShowHeroVipInfo* mutable_showherovipinfo();
  inline ::CSShowHeroVipInfo* release_showherovipinfo();
  inline void set_allocated_showherovipinfo(::CSShowHeroVipInfo* showherovipinfo);

  // optional .CSShowHeroInfoList HeroShow = 2;
  inline bool has_heroshow() const;
  inline void clear_heroshow();
  static const int kHeroShowFieldNumber = 2;
  inline const ::CSShowHeroInfoList& heroshow() const;
  inline ::CSShowHeroInfoList* mutable_heroshow();
  inline ::CSShowHeroInfoList* release_heroshow();
  inline void set_allocated_heroshow(::CSShowHeroInfoList* heroshow);

  // optional .CSFeiJiBagList FeiJiBagList = 3;
  inline bool has_feijibaglist() const;
  inline void clear_feijibaglist();
  static const int kFeiJiBagListFieldNumber = 3;
  inline const ::CSFeiJiBagList& feijibaglist() const;
  inline ::CSFeiJiBagList* mutable_feijibaglist();
  inline ::CSFeiJiBagList* release_feijibaglist();
  inline void set_allocated_feijibaglist(::CSFeiJiBagList* feijibaglist);

  // optional .CSZhaDanBagList ZhaDanBagList = 4;
  inline bool has_zhadanbaglist() const;
  inline void clear_zhadanbaglist();
  static const int kZhaDanBagListFieldNumber = 4;
  inline const ::CSZhaDanBagList& zhadanbaglist() const;
  inline ::CSZhaDanBagList* mutable_zhadanbaglist();
  inline ::CSZhaDanBagList* release_zhadanbaglist();
  inline void set_allocated_zhadanbaglist(::CSZhaDanBagList* zhadanbaglist);

  // optional .CSFeiJiDiPanBagList FeiJiDiPanBagList = 5;
  inline bool has_feijidipanbaglist() const;
  inline void clear_feijidipanbaglist();
  static const int kFeiJiDiPanBagListFieldNumber = 5;
  inline const ::CSFeiJiDiPanBagList& feijidipanbaglist() const;
  inline ::CSFeiJiDiPanBagList* mutable_feijidipanbaglist();
  inline ::CSFeiJiDiPanBagList* release_feijidipanbaglist();
  inline void set_allocated_feijidipanbaglist(::CSFeiJiDiPanBagList* feijidipanbaglist);

  // optional .CSFeiJiSkillOneBagList FeiJiSkillOneBagList = 6;
  inline bool has_feijiskillonebaglist() const;
  inline void clear_feijiskillonebaglist();
  static const int kFeiJiSkillOneBagListFieldNumber = 6;
  inline const ::CSFeiJiSkillOneBagList& feijiskillonebaglist() const;
  inline ::CSFeiJiSkillOneBagList* mutable_feijiskillonebaglist();
  inline ::CSFeiJiSkillOneBagList* release_feijiskillonebaglist();
  inline void set_allocated_feijiskillonebaglist(::CSFeiJiSkillOneBagList* feijiskillonebaglist);

  // optional .CSFeiJiSkillTwoBagList FeiJiSkillTwoBagList = 7;
  inline bool has_feijiskilltwobaglist() const;
  inline void clear_feijiskilltwobaglist();
  static const int kFeiJiSkillTwoBagListFieldNumber = 7;
  inline const ::CSFeiJiSkillTwoBagList& feijiskilltwobaglist() const;
  inline ::CSFeiJiSkillTwoBagList* mutable_feijiskilltwobaglist();
  inline ::CSFeiJiSkillTwoBagList* release_feijiskilltwobaglist();
  inline void set_allocated_feijiskilltwobaglist(::CSFeiJiSkillTwoBagList* feijiskilltwobaglist);

  // @@protoc_insertion_point(class_scope:CSEnterHeroShowRsp)
 private:
  inline void set_has_showherovipinfo();
  inline void clear_has_showherovipinfo();
  inline void set_has_heroshow();
  inline void clear_has_heroshow();
  inline void set_has_feijibaglist();
  inline void clear_has_feijibaglist();
  inline void set_has_zhadanbaglist();
  inline void clear_has_zhadanbaglist();
  inline void set_has_feijidipanbaglist();
  inline void clear_has_feijidipanbaglist();
  inline void set_has_feijiskillonebaglist();
  inline void clear_has_feijiskillonebaglist();
  inline void set_has_feijiskilltwobaglist();
  inline void clear_has_feijiskilltwobaglist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSShowHeroVipInfo* showherovipinfo_;
  ::CSShowHeroInfoList* heroshow_;
  ::CSFeiJiBagList* feijibaglist_;
  ::CSZhaDanBagList* zhadanbaglist_;
  ::CSFeiJiDiPanBagList* feijidipanbaglist_;
  ::CSFeiJiSkillOneBagList* feijiskillonebaglist_;
  ::CSFeiJiSkillTwoBagList* feijiskilltwobaglist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSEnterHeroShowRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterHeroShowBagReq : public ::google::protobuf::Message {
 public:
  CSEnterHeroShowBagReq();
  virtual ~CSEnterHeroShowBagReq();

  CSEnterHeroShowBagReq(const CSEnterHeroShowBagReq& from);

  inline CSEnterHeroShowBagReq& operator=(const CSEnterHeroShowBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterHeroShowBagReq& default_instance();

  void Swap(CSEnterHeroShowBagReq* other);

  // implements Message ----------------------------------------------

  CSEnterHeroShowBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterHeroShowBagReq& from);
  void MergeFrom(const CSEnterHeroShowBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 DecorateBagType = 2;
  inline bool has_decoratebagtype() const;
  inline void clear_decoratebagtype();
  static const int kDecorateBagTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 decoratebagtype() const;
  inline void set_decoratebagtype(::google::protobuf::uint32 value);

  // optional uint32 Id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEnterHeroShowBagReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_decoratebagtype();
  inline void clear_has_decoratebagtype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 decoratebagtype_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSEnterHeroShowBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSendUserHeroShowRsp : public ::google::protobuf::Message {
 public:
  CSSendUserHeroShowRsp();
  virtual ~CSSendUserHeroShowRsp();

  CSSendUserHeroShowRsp(const CSSendUserHeroShowRsp& from);

  inline CSSendUserHeroShowRsp& operator=(const CSSendUserHeroShowRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSendUserHeroShowRsp& default_instance();

  void Swap(CSSendUserHeroShowRsp* other);

  // implements Message ----------------------------------------------

  CSSendUserHeroShowRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSendUserHeroShowRsp& from);
  void MergeFrom(const CSSendUserHeroShowRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 ZhadanId = 2;
  inline bool has_zhadanid() const;
  inline void clear_zhadanid();
  static const int kZhadanIdFieldNumber = 2;
  inline ::google::protobuf::uint32 zhadanid() const;
  inline void set_zhadanid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSendUserHeroShowRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_zhadanid();
  inline void clear_has_zhadanid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 zhadanid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSSendUserHeroShowRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSShowZhaDanBagReq : public ::google::protobuf::Message {
 public:
  CSShowZhaDanBagReq();
  virtual ~CSShowZhaDanBagReq();

  CSShowZhaDanBagReq(const CSShowZhaDanBagReq& from);

  inline CSShowZhaDanBagReq& operator=(const CSShowZhaDanBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowZhaDanBagReq& default_instance();

  void Swap(CSShowZhaDanBagReq* other);

  // implements Message ----------------------------------------------

  CSShowZhaDanBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowZhaDanBagReq& from);
  void MergeFrom(const CSShowZhaDanBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint32 ZhadanId = 2;
  inline bool has_zhadanid() const;
  inline void clear_zhadanid();
  static const int kZhadanIdFieldNumber = 2;
  inline ::google::protobuf::uint32 zhadanid() const;
  inline void set_zhadanid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSShowZhaDanBagReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_zhadanid();
  inline void clear_has_zhadanid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 zhadanid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSShowZhaDanBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSShowZhaDanBagRsp : public ::google::protobuf::Message {
 public:
  CSShowZhaDanBagRsp();
  virtual ~CSShowZhaDanBagRsp();

  CSShowZhaDanBagRsp(const CSShowZhaDanBagRsp& from);

  inline CSShowZhaDanBagRsp& operator=(const CSShowZhaDanBagRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSShowZhaDanBagRsp& default_instance();

  void Swap(CSShowZhaDanBagRsp* other);

  // implements Message ----------------------------------------------

  CSShowZhaDanBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSShowZhaDanBagRsp& from);
  void MergeFrom(const CSShowZhaDanBagRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ZhadanId = 1;
  inline bool has_zhadanid() const;
  inline void clear_zhadanid();
  static const int kZhadanIdFieldNumber = 1;
  inline ::google::protobuf::uint32 zhadanid() const;
  inline void set_zhadanid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSShowZhaDanBagRsp)
 private:
  inline void set_has_zhadanid();
  inline void clear_has_zhadanid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 zhadanid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSShowZhaDanBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMateReqParam : public ::google::protobuf::Message {
 public:
  CSMateReqParam();
  virtual ~CSMateReqParam();

  CSMateReqParam(const CSMateReqParam& from);

  inline CSMateReqParam& operator=(const CSMateReqParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMateReqParam& default_instance();

  void Swap(CSMateReqParam* other);

  // implements Message ----------------------------------------------

  CSMateReqParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMateReqParam& from);
  void MergeFrom(const CSMateReqParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSMateFetchReq MateFetchReq = 1;
  inline bool has_matefetchreq() const;
  inline void clear_matefetchreq();
  static const int kMateFetchReqFieldNumber = 1;
  inline const ::CSMateFetchReq& matefetchreq() const;
  inline ::CSMateFetchReq* mutable_matefetchreq();
  inline ::CSMateFetchReq* release_matefetchreq();
  inline void set_allocated_matefetchreq(::CSMateFetchReq* matefetchreq);

  // optional .CSQuitMateFetchReq QuitMateFetchReq = 2;
  inline bool has_quitmatefetchreq() const;
  inline void clear_quitmatefetchreq();
  static const int kQuitMateFetchReqFieldNumber = 2;
  inline const ::CSQuitMateFetchReq& quitmatefetchreq() const;
  inline ::CSQuitMateFetchReq* mutable_quitmatefetchreq();
  inline ::CSQuitMateFetchReq* release_quitmatefetchreq();
  inline void set_allocated_quitmatefetchreq(::CSQuitMateFetchReq* quitmatefetchreq);

  // optional .CSNotButtonMateFetchReq NotButtonMateFetchReq = 3;
  inline bool has_notbuttonmatefetchreq() const;
  inline void clear_notbuttonmatefetchreq();
  static const int kNotButtonMateFetchReqFieldNumber = 3;
  inline const ::CSNotButtonMateFetchReq& notbuttonmatefetchreq() const;
  inline ::CSNotButtonMateFetchReq* mutable_notbuttonmatefetchreq();
  inline ::CSNotButtonMateFetchReq* release_notbuttonmatefetchreq();
  inline void set_allocated_notbuttonmatefetchreq(::CSNotButtonMateFetchReq* notbuttonmatefetchreq);

  // optional .CSSuccessButtonMateFetchReq SuccessButtonMateFetchReq = 4;
  inline bool has_successbuttonmatefetchreq() const;
  inline void clear_successbuttonmatefetchreq();
  static const int kSuccessButtonMateFetchReqFieldNumber = 4;
  inline const ::CSSuccessButtonMateFetchReq& successbuttonmatefetchreq() const;
  inline ::CSSuccessButtonMateFetchReq* mutable_successbuttonmatefetchreq();
  inline ::CSSuccessButtonMateFetchReq* release_successbuttonmatefetchreq();
  inline void set_allocated_successbuttonmatefetchreq(::CSSuccessButtonMateFetchReq* successbuttonmatefetchreq);

  // optional .CSEnterHeroShowBagReq EnterHeroShowBagReq = 5;
  inline bool has_enterheroshowbagreq() const;
  inline void clear_enterheroshowbagreq();
  static const int kEnterHeroShowBagReqFieldNumber = 5;
  inline const ::CSEnterHeroShowBagReq& enterheroshowbagreq() const;
  inline ::CSEnterHeroShowBagReq* mutable_enterheroshowbagreq();
  inline ::CSEnterHeroShowBagReq* release_enterheroshowbagreq();
  inline void set_allocated_enterheroshowbagreq(::CSEnterHeroShowBagReq* enterheroshowbagreq);

  // optional .CSShowZhaDanBagReq ShowZhaDanBagReq = 6;
  inline bool has_showzhadanbagreq() const;
  inline void clear_showzhadanbagreq();
  static const int kShowZhaDanBagReqFieldNumber = 6;
  inline const ::CSShowZhaDanBagReq& showzhadanbagreq() const;
  inline ::CSShowZhaDanBagReq* mutable_showzhadanbagreq();
  inline ::CSShowZhaDanBagReq* release_showzhadanbagreq();
  inline void set_allocated_showzhadanbagreq(::CSShowZhaDanBagReq* showzhadanbagreq);

  // @@protoc_insertion_point(class_scope:CSMateReqParam)
 private:
  inline void set_has_matefetchreq();
  inline void clear_has_matefetchreq();
  inline void set_has_quitmatefetchreq();
  inline void clear_has_quitmatefetchreq();
  inline void set_has_notbuttonmatefetchreq();
  inline void clear_has_notbuttonmatefetchreq();
  inline void set_has_successbuttonmatefetchreq();
  inline void clear_has_successbuttonmatefetchreq();
  inline void set_has_enterheroshowbagreq();
  inline void clear_has_enterheroshowbagreq();
  inline void set_has_showzhadanbagreq();
  inline void clear_has_showzhadanbagreq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMateFetchReq* matefetchreq_;
  ::CSQuitMateFetchReq* quitmatefetchreq_;
  ::CSNotButtonMateFetchReq* notbuttonmatefetchreq_;
  ::CSSuccessButtonMateFetchReq* successbuttonmatefetchreq_;
  ::CSEnterHeroShowBagReq* enterheroshowbagreq_;
  ::CSShowZhaDanBagReq* showzhadanbagreq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMateReqParam* default_instance_;
};
// -------------------------------------------------------------------

class CSMateRspParam : public ::google::protobuf::Message {
 public:
  CSMateRspParam();
  virtual ~CSMateRspParam();

  CSMateRspParam(const CSMateRspParam& from);

  inline CSMateRspParam& operator=(const CSMateRspParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMateRspParam& default_instance();

  void Swap(CSMateRspParam* other);

  // implements Message ----------------------------------------------

  CSMateRspParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMateRspParam& from);
  void MergeFrom(const CSMateRspParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSEnterHeroShowRsp EnterHeroShowRsp = 1;
  inline bool has_enterheroshowrsp() const;
  inline void clear_enterheroshowrsp();
  static const int kEnterHeroShowRspFieldNumber = 1;
  inline const ::CSEnterHeroShowRsp& enterheroshowrsp() const;
  inline ::CSEnterHeroShowRsp* mutable_enterheroshowrsp();
  inline ::CSEnterHeroShowRsp* release_enterheroshowrsp();
  inline void set_allocated_enterheroshowrsp(::CSEnterHeroShowRsp* enterheroshowrsp);

  // optional .CSSendUserHeroShowRsp SendUserHeroShowRsp = 2;
  inline bool has_senduserheroshowrsp() const;
  inline void clear_senduserheroshowrsp();
  static const int kSendUserHeroShowRspFieldNumber = 2;
  inline const ::CSSendUserHeroShowRsp& senduserheroshowrsp() const;
  inline ::CSSendUserHeroShowRsp* mutable_senduserheroshowrsp();
  inline ::CSSendUserHeroShowRsp* release_senduserheroshowrsp();
  inline void set_allocated_senduserheroshowrsp(::CSSendUserHeroShowRsp* senduserheroshowrsp);

  // optional .CSShowZhaDanBagRsp ShowZhaDanBagRsp = 3;
  inline bool has_showzhadanbagrsp() const;
  inline void clear_showzhadanbagrsp();
  static const int kShowZhaDanBagRspFieldNumber = 3;
  inline const ::CSShowZhaDanBagRsp& showzhadanbagrsp() const;
  inline ::CSShowZhaDanBagRsp* mutable_showzhadanbagrsp();
  inline ::CSShowZhaDanBagRsp* release_showzhadanbagrsp();
  inline void set_allocated_showzhadanbagrsp(::CSShowZhaDanBagRsp* showzhadanbagrsp);

  // @@protoc_insertion_point(class_scope:CSMateRspParam)
 private:
  inline void set_has_enterheroshowrsp();
  inline void clear_has_enterheroshowrsp();
  inline void set_has_senduserheroshowrsp();
  inline void clear_has_senduserheroshowrsp();
  inline void set_has_showzhadanbagrsp();
  inline void clear_has_showzhadanbagrsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSEnterHeroShowRsp* enterheroshowrsp_;
  ::CSSendUserHeroShowRsp* senduserheroshowrsp_;
  ::CSShowZhaDanBagRsp* showzhadanbagrsp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMateRspParam* default_instance_;
};
// -------------------------------------------------------------------

class CSMateReq : public ::google::protobuf::Message {
 public:
  CSMateReq();
  virtual ~CSMateReq();

  CSMateReq(const CSMateReq& from);

  inline CSMateReq& operator=(const CSMateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMateReq& default_instance();

  void Swap(CSMateReq* other);

  // implements Message ----------------------------------------------

  CSMateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMateReq& from);
  void MergeFrom(const CSMateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSMateCmd cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::CSMateCmd cmd() const;
  inline void set_cmd(::CSMateCmd value);

  // optional .CSMateReqParam reqParam = 2;
  inline bool has_reqparam() const;
  inline void clear_reqparam();
  static const int kReqParamFieldNumber = 2;
  inline const ::CSMateReqParam& reqparam() const;
  inline ::CSMateReqParam* mutable_reqparam();
  inline ::CSMateReqParam* release_reqparam();
  inline void set_allocated_reqparam(::CSMateReqParam* reqparam);

  // @@protoc_insertion_point(class_scope:CSMateReq)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_reqparam();
  inline void clear_has_reqparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMateReqParam* reqparam_;
  int cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMateReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMateRsp : public ::google::protobuf::Message {
 public:
  CSMateRsp();
  virtual ~CSMateRsp();

  CSMateRsp(const CSMateRsp& from);

  inline CSMateRsp& operator=(const CSMateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMateRsp& default_instance();

  void Swap(CSMateRsp* other);

  // implements Message ----------------------------------------------

  CSMateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMateRsp& from);
  void MergeFrom(const CSMateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .CSMateCmd cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::CSMateCmd cmd() const;
  inline void set_cmd(::CSMateCmd value);

  // optional .CSMateRspParam rspParam = 3;
  inline bool has_rspparam() const;
  inline void clear_rspparam();
  static const int kRspParamFieldNumber = 3;
  inline const ::CSMateRspParam& rspparam() const;
  inline ::CSMateRspParam* mutable_rspparam();
  inline ::CSMateRspParam* release_rspparam();
  inline void set_allocated_rspparam(::CSMateRspParam* rspparam);

  // @@protoc_insertion_point(class_scope:CSMateRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_rspparam();
  inline void clear_has_rspparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int cmd_;
  ::CSMateRspParam* rspparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMateRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgBody : public ::google::protobuf::Message {
 public:
  CSMsgBody();
  virtual ~CSMsgBody();

  CSMsgBody(const CSMsgBody& from);

  inline CSMsgBody& operator=(const CSMsgBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgBody& default_instance();

  void Swap(CSMsgBody* other);

  // implements Message ----------------------------------------------

  CSMsgBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgBody& from);
  void MergeFrom(const CSMsgBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSRegisterLoginReq RegisterLoginReq = 1;
  inline bool has_registerloginreq() const;
  inline void clear_registerloginreq();
  static const int kRegisterLoginReqFieldNumber = 1;
  inline const ::CSRegisterLoginReq& registerloginreq() const;
  inline ::CSRegisterLoginReq* mutable_registerloginreq();
  inline ::CSRegisterLoginReq* release_registerloginreq();
  inline void set_allocated_registerloginreq(::CSRegisterLoginReq* registerloginreq);

  // optional .CSRegisterLoginRsp RegisterLoginRsp = 2;
  inline bool has_registerloginrsp() const;
  inline void clear_registerloginrsp();
  static const int kRegisterLoginRspFieldNumber = 2;
  inline const ::CSRegisterLoginRsp& registerloginrsp() const;
  inline ::CSRegisterLoginRsp* mutable_registerloginrsp();
  inline ::CSRegisterLoginRsp* release_registerloginrsp();
  inline void set_allocated_registerloginrsp(::CSRegisterLoginRsp* registerloginrsp);

  // optional .CSBagReq BagReq = 3;
  inline bool has_bagreq() const;
  inline void clear_bagreq();
  static const int kBagReqFieldNumber = 3;
  inline const ::CSBagReq& bagreq() const;
  inline ::CSBagReq* mutable_bagreq();
  inline ::CSBagReq* release_bagreq();
  inline void set_allocated_bagreq(::CSBagReq* bagreq);

  // optional .CSBagRsp BagRsp = 4;
  inline bool has_bagrsp() const;
  inline void clear_bagrsp();
  static const int kBagRspFieldNumber = 4;
  inline const ::CSBagRsp& bagrsp() const;
  inline ::CSBagRsp* mutable_bagrsp();
  inline ::CSBagRsp* release_bagrsp();
  inline void set_allocated_bagrsp(::CSBagRsp* bagrsp);

  // optional .CSDecorateBagReq DecorateBagReq = 5;
  inline bool has_decoratebagreq() const;
  inline void clear_decoratebagreq();
  static const int kDecorateBagReqFieldNumber = 5;
  inline const ::CSDecorateBagReq& decoratebagreq() const;
  inline ::CSDecorateBagReq* mutable_decoratebagreq();
  inline ::CSDecorateBagReq* release_decoratebagreq();
  inline void set_allocated_decoratebagreq(::CSDecorateBagReq* decoratebagreq);

  // optional .CSDecorateBagRsp DecorateBagRsp = 6;
  inline bool has_decoratebagrsp() const;
  inline void clear_decoratebagrsp();
  static const int kDecorateBagRspFieldNumber = 6;
  inline const ::CSDecorateBagRsp& decoratebagrsp() const;
  inline ::CSDecorateBagRsp* mutable_decoratebagrsp();
  inline ::CSDecorateBagRsp* release_decoratebagrsp();
  inline void set_allocated_decoratebagrsp(::CSDecorateBagRsp* decoratebagrsp);

  // optional .CSChatReq ChatReq = 7;
  inline bool has_chatreq() const;
  inline void clear_chatreq();
  static const int kChatReqFieldNumber = 7;
  inline const ::CSChatReq& chatreq() const;
  inline ::CSChatReq* mutable_chatreq();
  inline ::CSChatReq* release_chatreq();
  inline void set_allocated_chatreq(::CSChatReq* chatreq);

  // optional .CSChatRsp ChatRsp = 8;
  inline bool has_chatrsp() const;
  inline void clear_chatrsp();
  static const int kChatRspFieldNumber = 8;
  inline const ::CSChatRsp& chatrsp() const;
  inline ::CSChatRsp* mutable_chatrsp();
  inline ::CSChatRsp* release_chatrsp();
  inline void set_allocated_chatrsp(::CSChatRsp* chatrsp);

  // optional .CSMateReq MateReq = 9;
  inline bool has_matereq() const;
  inline void clear_matereq();
  static const int kMateReqFieldNumber = 9;
  inline const ::CSMateReq& matereq() const;
  inline ::CSMateReq* mutable_matereq();
  inline ::CSMateReq* release_matereq();
  inline void set_allocated_matereq(::CSMateReq* matereq);

  // optional .CSMateRsp Matersp = 10;
  inline bool has_matersp() const;
  inline void clear_matersp();
  static const int kMaterspFieldNumber = 10;
  inline const ::CSMateRsp& matersp() const;
  inline ::CSMateRsp* mutable_matersp();
  inline ::CSMateRsp* release_matersp();
  inline void set_allocated_matersp(::CSMateRsp* matersp);

  // @@protoc_insertion_point(class_scope:CSMsgBody)
 private:
  inline void set_has_registerloginreq();
  inline void clear_has_registerloginreq();
  inline void set_has_registerloginrsp();
  inline void clear_has_registerloginrsp();
  inline void set_has_bagreq();
  inline void clear_has_bagreq();
  inline void set_has_bagrsp();
  inline void clear_has_bagrsp();
  inline void set_has_decoratebagreq();
  inline void clear_has_decoratebagreq();
  inline void set_has_decoratebagrsp();
  inline void clear_has_decoratebagrsp();
  inline void set_has_chatreq();
  inline void clear_has_chatreq();
  inline void set_has_chatrsp();
  inline void clear_has_chatrsp();
  inline void set_has_matereq();
  inline void clear_has_matereq();
  inline void set_has_matersp();
  inline void clear_has_matersp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSRegisterLoginReq* registerloginreq_;
  ::CSRegisterLoginRsp* registerloginrsp_;
  ::CSBagReq* bagreq_;
  ::CSBagRsp* bagrsp_;
  ::CSDecorateBagReq* decoratebagreq_;
  ::CSDecorateBagRsp* decoratebagrsp_;
  ::CSChatReq* chatreq_;
  ::CSChatRsp* chatrsp_;
  ::CSMateReq* matereq_;
  ::CSMateRsp* matersp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgBody* default_instance_;
};
// -------------------------------------------------------------------

class CSMsgHead : public ::google::protobuf::Message {
 public:
  CSMsgHead();
  virtual ~CSMsgHead();

  CSMsgHead(const CSMsgHead& from);

  inline CSMsgHead& operator=(const CSMsgHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgHead& default_instance();

  void Swap(CSMsgHead* other);

  // implements Message ----------------------------------------------

  CSMsgHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgHead& from);
  void MergeFrom(const CSMsgHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required .CSMsgID msgID = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 2;
  inline ::CSMsgID msgid() const;
  inline void set_msgid(::CSMsgID value);

  // @@protoc_insertion_point(class_scope:CSMsgHead)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  int msgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsgHead* default_instance_;
};
// -------------------------------------------------------------------

class CSMsg : public ::google::protobuf::Message {
 public:
  CSMsg();
  virtual ~CSMsg();

  CSMsg(const CSMsg& from);

  inline CSMsg& operator=(const CSMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsg& default_instance();

  void Swap(CSMsg* other);

  // implements Message ----------------------------------------------

  CSMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsg& from);
  void MergeFrom(const CSMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .CSMsgHead head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::CSMsgHead& head() const;
  inline ::CSMsgHead* mutable_head();
  inline ::CSMsgHead* release_head();
  inline void set_allocated_head(::CSMsgHead* head);

  // required .CSMsgBody body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::CSMsgBody& body() const;
  inline ::CSMsgBody* mutable_body();
  inline ::CSMsgBody* release_body();
  inline void set_allocated_body(::CSMsgBody* body);

  // @@protoc_insertion_point(class_scope:CSMsg)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSMsgHead* head_;
  ::CSMsgBody* body_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_CSmsg_2eproto();
  friend void protobuf_AssignDesc_CSmsg_2eproto();
  friend void protobuf_ShutdownFile_CSmsg_2eproto();

  void InitAsDefaultInstance();
  static CSMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// CSLoginReq

// optional string account = 1;
inline bool CSLoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLoginReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CSLoginReq::account() const {
  return *account_;
}
inline void CSLoginReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CSLoginReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CSLoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSLoginReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* CSLoginReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSLoginReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password = 2;
inline bool CSLoginReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSLoginReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSLoginReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSLoginReq::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& CSLoginReq::password() const {
  return *password_;
}
inline void CSLoginReq::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CSLoginReq::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CSLoginReq::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSLoginReq::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* CSLoginReq::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSLoginReq::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSLoginRsp

// optional uint32 type = 1;
inline bool CSLoginRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLoginRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLoginRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLoginRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSLoginRsp::type() const {
  return type_;
}
inline void CSLoginRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .DBRoleInfo Role = 2;
inline bool CSLoginRsp::has_role() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSLoginRsp::set_has_role() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSLoginRsp::clear_has_role() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSLoginRsp::clear_role() {
  if (role_ != NULL) role_->::DBRoleInfo::Clear();
  clear_has_role();
}
inline const ::DBRoleInfo& CSLoginRsp::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::DBRoleInfo* CSLoginRsp::mutable_role() {
  set_has_role();
  if (role_ == NULL) role_ = new ::DBRoleInfo;
  return role_;
}
inline ::DBRoleInfo* CSLoginRsp::release_role() {
  clear_has_role();
  ::DBRoleInfo* temp = role_;
  role_ = NULL;
  return temp;
}
inline void CSLoginRsp::set_allocated_role(::DBRoleInfo* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
}

// -------------------------------------------------------------------

// CSRegisterReq

// optional string account = 1;
inline bool CSRegisterReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CSRegisterReq::account() const {
  return *account_;
}
inline void CSRegisterReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CSRegisterReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CSRegisterReq::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSRegisterReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* CSRegisterReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSRegisterReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password = 2;
inline bool CSRegisterReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegisterReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegisterReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegisterReq::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& CSRegisterReq::password() const {
  return *password_;
}
inline void CSRegisterReq::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CSRegisterReq::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CSRegisterReq::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSRegisterReq::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* CSRegisterReq::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSRegisterReq::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 3;
inline bool CSRegisterReq::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRegisterReq::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRegisterReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRegisterReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSRegisterReq::name() const {
  return *name_;
}
inline void CSRegisterReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSRegisterReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSRegisterReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSRegisterReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSRegisterReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSRegisterReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSRegisterRsp

// optional uint32 type = 1;
inline bool CSRegisterRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSRegisterRsp::type() const {
  return type_;
}
inline void CSRegisterRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSQuitReq

// optional uint32 pad = 1;
inline bool CSQuitReq::has_pad() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQuitReq::set_has_pad() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQuitReq::clear_has_pad() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQuitReq::clear_pad() {
  pad_ = 0u;
  clear_has_pad();
}
inline ::google::protobuf::uint32 CSQuitReq::pad() const {
  return pad_;
}
inline void CSQuitReq::set_pad(::google::protobuf::uint32 value) {
  set_has_pad();
  pad_ = value;
}

// -------------------------------------------------------------------

// CSRegisterLoginReqParam

// optional .CSLoginReq LoginReq = 1;
inline bool CSRegisterLoginReqParam::has_loginreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterLoginReqParam::set_has_loginreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterLoginReqParam::clear_has_loginreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterLoginReqParam::clear_loginreq() {
  if (loginreq_ != NULL) loginreq_->::CSLoginReq::Clear();
  clear_has_loginreq();
}
inline const ::CSLoginReq& CSRegisterLoginReqParam::loginreq() const {
  return loginreq_ != NULL ? *loginreq_ : *default_instance_->loginreq_;
}
inline ::CSLoginReq* CSRegisterLoginReqParam::mutable_loginreq() {
  set_has_loginreq();
  if (loginreq_ == NULL) loginreq_ = new ::CSLoginReq;
  return loginreq_;
}
inline ::CSLoginReq* CSRegisterLoginReqParam::release_loginreq() {
  clear_has_loginreq();
  ::CSLoginReq* temp = loginreq_;
  loginreq_ = NULL;
  return temp;
}
inline void CSRegisterLoginReqParam::set_allocated_loginreq(::CSLoginReq* loginreq) {
  delete loginreq_;
  loginreq_ = loginreq;
  if (loginreq) {
    set_has_loginreq();
  } else {
    clear_has_loginreq();
  }
}

// optional .CSRegisterReq RegisterReq = 2;
inline bool CSRegisterLoginReqParam::has_registerreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegisterLoginReqParam::set_has_registerreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegisterLoginReqParam::clear_has_registerreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegisterLoginReqParam::clear_registerreq() {
  if (registerreq_ != NULL) registerreq_->::CSRegisterReq::Clear();
  clear_has_registerreq();
}
inline const ::CSRegisterReq& CSRegisterLoginReqParam::registerreq() const {
  return registerreq_ != NULL ? *registerreq_ : *default_instance_->registerreq_;
}
inline ::CSRegisterReq* CSRegisterLoginReqParam::mutable_registerreq() {
  set_has_registerreq();
  if (registerreq_ == NULL) registerreq_ = new ::CSRegisterReq;
  return registerreq_;
}
inline ::CSRegisterReq* CSRegisterLoginReqParam::release_registerreq() {
  clear_has_registerreq();
  ::CSRegisterReq* temp = registerreq_;
  registerreq_ = NULL;
  return temp;
}
inline void CSRegisterLoginReqParam::set_allocated_registerreq(::CSRegisterReq* registerreq) {
  delete registerreq_;
  registerreq_ = registerreq;
  if (registerreq) {
    set_has_registerreq();
  } else {
    clear_has_registerreq();
  }
}

// optional .CSQuitReq QuitReq = 3;
inline bool CSRegisterLoginReqParam::has_quitreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRegisterLoginReqParam::set_has_quitreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRegisterLoginReqParam::clear_has_quitreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRegisterLoginReqParam::clear_quitreq() {
  if (quitreq_ != NULL) quitreq_->::CSQuitReq::Clear();
  clear_has_quitreq();
}
inline const ::CSQuitReq& CSRegisterLoginReqParam::quitreq() const {
  return quitreq_ != NULL ? *quitreq_ : *default_instance_->quitreq_;
}
inline ::CSQuitReq* CSRegisterLoginReqParam::mutable_quitreq() {
  set_has_quitreq();
  if (quitreq_ == NULL) quitreq_ = new ::CSQuitReq;
  return quitreq_;
}
inline ::CSQuitReq* CSRegisterLoginReqParam::release_quitreq() {
  clear_has_quitreq();
  ::CSQuitReq* temp = quitreq_;
  quitreq_ = NULL;
  return temp;
}
inline void CSRegisterLoginReqParam::set_allocated_quitreq(::CSQuitReq* quitreq) {
  delete quitreq_;
  quitreq_ = quitreq;
  if (quitreq) {
    set_has_quitreq();
  } else {
    clear_has_quitreq();
  }
}

// -------------------------------------------------------------------

// CSRegisterLoginRspParam

// optional .CSLoginRsp LoginRsp = 1;
inline bool CSRegisterLoginRspParam::has_loginrsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterLoginRspParam::set_has_loginrsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterLoginRspParam::clear_has_loginrsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterLoginRspParam::clear_loginrsp() {
  if (loginrsp_ != NULL) loginrsp_->::CSLoginRsp::Clear();
  clear_has_loginrsp();
}
inline const ::CSLoginRsp& CSRegisterLoginRspParam::loginrsp() const {
  return loginrsp_ != NULL ? *loginrsp_ : *default_instance_->loginrsp_;
}
inline ::CSLoginRsp* CSRegisterLoginRspParam::mutable_loginrsp() {
  set_has_loginrsp();
  if (loginrsp_ == NULL) loginrsp_ = new ::CSLoginRsp;
  return loginrsp_;
}
inline ::CSLoginRsp* CSRegisterLoginRspParam::release_loginrsp() {
  clear_has_loginrsp();
  ::CSLoginRsp* temp = loginrsp_;
  loginrsp_ = NULL;
  return temp;
}
inline void CSRegisterLoginRspParam::set_allocated_loginrsp(::CSLoginRsp* loginrsp) {
  delete loginrsp_;
  loginrsp_ = loginrsp;
  if (loginrsp) {
    set_has_loginrsp();
  } else {
    clear_has_loginrsp();
  }
}

// optional .CSRegisterRsp RegisterRsp = 2;
inline bool CSRegisterLoginRspParam::has_registerrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegisterLoginRspParam::set_has_registerrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegisterLoginRspParam::clear_has_registerrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegisterLoginRspParam::clear_registerrsp() {
  if (registerrsp_ != NULL) registerrsp_->::CSRegisterRsp::Clear();
  clear_has_registerrsp();
}
inline const ::CSRegisterRsp& CSRegisterLoginRspParam::registerrsp() const {
  return registerrsp_ != NULL ? *registerrsp_ : *default_instance_->registerrsp_;
}
inline ::CSRegisterRsp* CSRegisterLoginRspParam::mutable_registerrsp() {
  set_has_registerrsp();
  if (registerrsp_ == NULL) registerrsp_ = new ::CSRegisterRsp;
  return registerrsp_;
}
inline ::CSRegisterRsp* CSRegisterLoginRspParam::release_registerrsp() {
  clear_has_registerrsp();
  ::CSRegisterRsp* temp = registerrsp_;
  registerrsp_ = NULL;
  return temp;
}
inline void CSRegisterLoginRspParam::set_allocated_registerrsp(::CSRegisterRsp* registerrsp) {
  delete registerrsp_;
  registerrsp_ = registerrsp;
  if (registerrsp) {
    set_has_registerrsp();
  } else {
    clear_has_registerrsp();
  }
}

// -------------------------------------------------------------------

// CSRegisterLoginReq

// required .CSRegisterLoginCmd cmd = 1;
inline bool CSRegisterLoginReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterLoginReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterLoginReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterLoginReq::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSRegisterLoginCmd CSRegisterLoginReq::cmd() const {
  return static_cast< ::CSRegisterLoginCmd >(cmd_);
}
inline void CSRegisterLoginReq::set_cmd(::CSRegisterLoginCmd value) {
  assert(::CSRegisterLoginCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSRegisterLoginReqParam reqParam = 2;
inline bool CSRegisterLoginReq::has_reqparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegisterLoginReq::set_has_reqparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegisterLoginReq::clear_has_reqparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegisterLoginReq::clear_reqparam() {
  if (reqparam_ != NULL) reqparam_->::CSRegisterLoginReqParam::Clear();
  clear_has_reqparam();
}
inline const ::CSRegisterLoginReqParam& CSRegisterLoginReq::reqparam() const {
  return reqparam_ != NULL ? *reqparam_ : *default_instance_->reqparam_;
}
inline ::CSRegisterLoginReqParam* CSRegisterLoginReq::mutable_reqparam() {
  set_has_reqparam();
  if (reqparam_ == NULL) reqparam_ = new ::CSRegisterLoginReqParam;
  return reqparam_;
}
inline ::CSRegisterLoginReqParam* CSRegisterLoginReq::release_reqparam() {
  clear_has_reqparam();
  ::CSRegisterLoginReqParam* temp = reqparam_;
  reqparam_ = NULL;
  return temp;
}
inline void CSRegisterLoginReq::set_allocated_reqparam(::CSRegisterLoginReqParam* reqparam) {
  delete reqparam_;
  reqparam_ = reqparam;
  if (reqparam) {
    set_has_reqparam();
  } else {
    clear_has_reqparam();
  }
}

// -------------------------------------------------------------------

// CSRegisterLoginRsp

// optional int32 result = 1;
inline bool CSRegisterLoginRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRegisterLoginRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRegisterLoginRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRegisterLoginRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CSRegisterLoginRsp::result() const {
  return result_;
}
inline void CSRegisterLoginRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .CSRegisterLoginCmd cmd = 2;
inline bool CSRegisterLoginRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSRegisterLoginRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSRegisterLoginRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSRegisterLoginRsp::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSRegisterLoginCmd CSRegisterLoginRsp::cmd() const {
  return static_cast< ::CSRegisterLoginCmd >(cmd_);
}
inline void CSRegisterLoginRsp::set_cmd(::CSRegisterLoginCmd value) {
  assert(::CSRegisterLoginCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSRegisterLoginRspParam rspParam = 3;
inline bool CSRegisterLoginRsp::has_rspparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSRegisterLoginRsp::set_has_rspparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSRegisterLoginRsp::clear_has_rspparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSRegisterLoginRsp::clear_rspparam() {
  if (rspparam_ != NULL) rspparam_->::CSRegisterLoginRspParam::Clear();
  clear_has_rspparam();
}
inline const ::CSRegisterLoginRspParam& CSRegisterLoginRsp::rspparam() const {
  return rspparam_ != NULL ? *rspparam_ : *default_instance_->rspparam_;
}
inline ::CSRegisterLoginRspParam* CSRegisterLoginRsp::mutable_rspparam() {
  set_has_rspparam();
  if (rspparam_ == NULL) rspparam_ = new ::CSRegisterLoginRspParam;
  return rspparam_;
}
inline ::CSRegisterLoginRspParam* CSRegisterLoginRsp::release_rspparam() {
  clear_has_rspparam();
  ::CSRegisterLoginRspParam* temp = rspparam_;
  rspparam_ = NULL;
  return temp;
}
inline void CSRegisterLoginRsp::set_allocated_rspparam(::CSRegisterLoginRspParam* rspparam) {
  delete rspparam_;
  rspparam_ = rspparam;
  if (rspparam) {
    set_has_rspparam();
  } else {
    clear_has_rspparam();
  }
}

// -------------------------------------------------------------------

// CSBagFetchReq

// optional uint32 pad = 1;
inline bool CSBagFetchReq::has_pad() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagFetchReq::set_has_pad() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagFetchReq::clear_has_pad() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagFetchReq::clear_pad() {
  pad_ = 0u;
  clear_has_pad();
}
inline ::google::protobuf::uint32 CSBagFetchReq::pad() const {
  return pad_;
}
inline void CSBagFetchReq::set_pad(::google::protobuf::uint32 value) {
  set_has_pad();
  pad_ = value;
}

// -------------------------------------------------------------------

// CSBagGridInfo

// optional uint32 ItemId = 1;
inline bool CSBagGridInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagGridInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagGridInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagGridInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 CSBagGridInfo::itemid() const {
  return itemid_;
}
inline void CSBagGridInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 Num = 2;
inline bool CSBagGridInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagGridInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagGridInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagGridInfo::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 CSBagGridInfo::num() const {
  return num_;
}
inline void CSBagGridInfo::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSBagBagInfo

// repeated .CSBagGridInfo GridInfo = 1;
inline int CSBagBagInfo::gridinfo_size() const {
  return gridinfo_.size();
}
inline void CSBagBagInfo::clear_gridinfo() {
  gridinfo_.Clear();
}
inline const ::CSBagGridInfo& CSBagBagInfo::gridinfo(int index) const {
  return gridinfo_.Get(index);
}
inline ::CSBagGridInfo* CSBagBagInfo::mutable_gridinfo(int index) {
  return gridinfo_.Mutable(index);
}
inline ::CSBagGridInfo* CSBagBagInfo::add_gridinfo() {
  return gridinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSBagGridInfo >&
CSBagBagInfo::gridinfo() const {
  return gridinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSBagGridInfo >*
CSBagBagInfo::mutable_gridinfo() {
  return &gridinfo_;
}

// -------------------------------------------------------------------

// CSBagFetchRsp

// optional .CSBagBagInfo BagInfo = 1;
inline bool CSBagFetchRsp::has_baginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagFetchRsp::set_has_baginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagFetchRsp::clear_has_baginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagFetchRsp::clear_baginfo() {
  if (baginfo_ != NULL) baginfo_->::CSBagBagInfo::Clear();
  clear_has_baginfo();
}
inline const ::CSBagBagInfo& CSBagFetchRsp::baginfo() const {
  return baginfo_ != NULL ? *baginfo_ : *default_instance_->baginfo_;
}
inline ::CSBagBagInfo* CSBagFetchRsp::mutable_baginfo() {
  set_has_baginfo();
  if (baginfo_ == NULL) baginfo_ = new ::CSBagBagInfo;
  return baginfo_;
}
inline ::CSBagBagInfo* CSBagFetchRsp::release_baginfo() {
  clear_has_baginfo();
  ::CSBagBagInfo* temp = baginfo_;
  baginfo_ = NULL;
  return temp;
}
inline void CSBagFetchRsp::set_allocated_baginfo(::CSBagBagInfo* baginfo) {
  delete baginfo_;
  baginfo_ = baginfo;
  if (baginfo) {
    set_has_baginfo();
  } else {
    clear_has_baginfo();
  }
}

// -------------------------------------------------------------------

// CSBagUseReq

// optional uint32 ItemId = 1;
inline bool CSBagUseReq::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagUseReq::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagUseReq::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagUseReq::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 CSBagUseReq::itemid() const {
  return itemid_;
}
inline void CSBagUseReq::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 ItemNum = 2;
inline bool CSBagUseReq::has_itemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagUseReq::set_has_itemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagUseReq::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagUseReq::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 CSBagUseReq::itemnum() const {
  return itemnum_;
}
inline void CSBagUseReq::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional uint32 PickedId = 3;
inline bool CSBagUseReq::has_pickedid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSBagUseReq::set_has_pickedid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSBagUseReq::clear_has_pickedid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSBagUseReq::clear_pickedid() {
  pickedid_ = 0u;
  clear_has_pickedid();
}
inline ::google::protobuf::uint32 CSBagUseReq::pickedid() const {
  return pickedid_;
}
inline void CSBagUseReq::set_pickedid(::google::protobuf::uint32 value) {
  set_has_pickedid();
  pickedid_ = value;
}

// -------------------------------------------------------------------

// CSItemInfo

// optional int32 ID = 1;
inline bool CSItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CSItemInfo::id() const {
  return id_;
}
inline void CSItemInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 num = 2;
inline bool CSItemInfo::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemInfo::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 CSItemInfo::num() const {
  return num_;
}
inline void CSItemInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSItemInfoList

// repeated .CSItemInfo ItemInfo = 1;
inline int CSItemInfoList::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CSItemInfoList::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::CSItemInfo& CSItemInfoList::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::CSItemInfo* CSItemInfoList::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::CSItemInfo* CSItemInfoList::add_iteminfo() {
  return iteminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemInfoList::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemInfoList::mutable_iteminfo() {
  return &iteminfo_;
}

// -------------------------------------------------------------------

// CSBagUseRsp

// optional .CSItemInfoList ItemInfoList = 1;
inline bool CSBagUseRsp::has_iteminfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagUseRsp::set_has_iteminfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagUseRsp::clear_has_iteminfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagUseRsp::clear_iteminfolist() {
  if (iteminfolist_ != NULL) iteminfolist_->::CSItemInfoList::Clear();
  clear_has_iteminfolist();
}
inline const ::CSItemInfoList& CSBagUseRsp::iteminfolist() const {
  return iteminfolist_ != NULL ? *iteminfolist_ : *default_instance_->iteminfolist_;
}
inline ::CSItemInfoList* CSBagUseRsp::mutable_iteminfolist() {
  set_has_iteminfolist();
  if (iteminfolist_ == NULL) iteminfolist_ = new ::CSItemInfoList;
  return iteminfolist_;
}
inline ::CSItemInfoList* CSBagUseRsp::release_iteminfolist() {
  clear_has_iteminfolist();
  ::CSItemInfoList* temp = iteminfolist_;
  iteminfolist_ = NULL;
  return temp;
}
inline void CSBagUseRsp::set_allocated_iteminfolist(::CSItemInfoList* iteminfolist) {
  delete iteminfolist_;
  iteminfolist_ = iteminfolist;
  if (iteminfolist) {
    set_has_iteminfolist();
  } else {
    clear_has_iteminfolist();
  }
}

// -------------------------------------------------------------------

// CSBagReqParam

// optional .CSBagFetchReq FetchReq = 1;
inline bool CSBagReqParam::has_fetchreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagReqParam::set_has_fetchreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagReqParam::clear_has_fetchreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagReqParam::clear_fetchreq() {
  if (fetchreq_ != NULL) fetchreq_->::CSBagFetchReq::Clear();
  clear_has_fetchreq();
}
inline const ::CSBagFetchReq& CSBagReqParam::fetchreq() const {
  return fetchreq_ != NULL ? *fetchreq_ : *default_instance_->fetchreq_;
}
inline ::CSBagFetchReq* CSBagReqParam::mutable_fetchreq() {
  set_has_fetchreq();
  if (fetchreq_ == NULL) fetchreq_ = new ::CSBagFetchReq;
  return fetchreq_;
}
inline ::CSBagFetchReq* CSBagReqParam::release_fetchreq() {
  clear_has_fetchreq();
  ::CSBagFetchReq* temp = fetchreq_;
  fetchreq_ = NULL;
  return temp;
}
inline void CSBagReqParam::set_allocated_fetchreq(::CSBagFetchReq* fetchreq) {
  delete fetchreq_;
  fetchreq_ = fetchreq;
  if (fetchreq) {
    set_has_fetchreq();
  } else {
    clear_has_fetchreq();
  }
}

// optional .CSBagUseReq UseReq = 2;
inline bool CSBagReqParam::has_usereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagReqParam::set_has_usereq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagReqParam::clear_has_usereq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagReqParam::clear_usereq() {
  if (usereq_ != NULL) usereq_->::CSBagUseReq::Clear();
  clear_has_usereq();
}
inline const ::CSBagUseReq& CSBagReqParam::usereq() const {
  return usereq_ != NULL ? *usereq_ : *default_instance_->usereq_;
}
inline ::CSBagUseReq* CSBagReqParam::mutable_usereq() {
  set_has_usereq();
  if (usereq_ == NULL) usereq_ = new ::CSBagUseReq;
  return usereq_;
}
inline ::CSBagUseReq* CSBagReqParam::release_usereq() {
  clear_has_usereq();
  ::CSBagUseReq* temp = usereq_;
  usereq_ = NULL;
  return temp;
}
inline void CSBagReqParam::set_allocated_usereq(::CSBagUseReq* usereq) {
  delete usereq_;
  usereq_ = usereq;
  if (usereq) {
    set_has_usereq();
  } else {
    clear_has_usereq();
  }
}

// -------------------------------------------------------------------

// CSBagRspParam

// optional .CSBagFetchRsp FetchRsp = 1;
inline bool CSBagRspParam::has_fetchrsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagRspParam::set_has_fetchrsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagRspParam::clear_has_fetchrsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagRspParam::clear_fetchrsp() {
  if (fetchrsp_ != NULL) fetchrsp_->::CSBagFetchRsp::Clear();
  clear_has_fetchrsp();
}
inline const ::CSBagFetchRsp& CSBagRspParam::fetchrsp() const {
  return fetchrsp_ != NULL ? *fetchrsp_ : *default_instance_->fetchrsp_;
}
inline ::CSBagFetchRsp* CSBagRspParam::mutable_fetchrsp() {
  set_has_fetchrsp();
  if (fetchrsp_ == NULL) fetchrsp_ = new ::CSBagFetchRsp;
  return fetchrsp_;
}
inline ::CSBagFetchRsp* CSBagRspParam::release_fetchrsp() {
  clear_has_fetchrsp();
  ::CSBagFetchRsp* temp = fetchrsp_;
  fetchrsp_ = NULL;
  return temp;
}
inline void CSBagRspParam::set_allocated_fetchrsp(::CSBagFetchRsp* fetchrsp) {
  delete fetchrsp_;
  fetchrsp_ = fetchrsp;
  if (fetchrsp) {
    set_has_fetchrsp();
  } else {
    clear_has_fetchrsp();
  }
}

// optional .CSBagUseRsp UseRsp = 2;
inline bool CSBagRspParam::has_usersp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagRspParam::set_has_usersp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagRspParam::clear_has_usersp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagRspParam::clear_usersp() {
  if (usersp_ != NULL) usersp_->::CSBagUseRsp::Clear();
  clear_has_usersp();
}
inline const ::CSBagUseRsp& CSBagRspParam::usersp() const {
  return usersp_ != NULL ? *usersp_ : *default_instance_->usersp_;
}
inline ::CSBagUseRsp* CSBagRspParam::mutable_usersp() {
  set_has_usersp();
  if (usersp_ == NULL) usersp_ = new ::CSBagUseRsp;
  return usersp_;
}
inline ::CSBagUseRsp* CSBagRspParam::release_usersp() {
  clear_has_usersp();
  ::CSBagUseRsp* temp = usersp_;
  usersp_ = NULL;
  return temp;
}
inline void CSBagRspParam::set_allocated_usersp(::CSBagUseRsp* usersp) {
  delete usersp_;
  usersp_ = usersp;
  if (usersp) {
    set_has_usersp();
  } else {
    clear_has_usersp();
  }
}

// -------------------------------------------------------------------

// CSBagReq

// required .CSBagCmd cmd = 1;
inline bool CSBagReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagReq::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSBagCmd CSBagReq::cmd() const {
  return static_cast< ::CSBagCmd >(cmd_);
}
inline void CSBagReq::set_cmd(::CSBagCmd value) {
  assert(::CSBagCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSBagReqParam reqParam = 2;
inline bool CSBagReq::has_reqparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagReq::set_has_reqparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagReq::clear_has_reqparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagReq::clear_reqparam() {
  if (reqparam_ != NULL) reqparam_->::CSBagReqParam::Clear();
  clear_has_reqparam();
}
inline const ::CSBagReqParam& CSBagReq::reqparam() const {
  return reqparam_ != NULL ? *reqparam_ : *default_instance_->reqparam_;
}
inline ::CSBagReqParam* CSBagReq::mutable_reqparam() {
  set_has_reqparam();
  if (reqparam_ == NULL) reqparam_ = new ::CSBagReqParam;
  return reqparam_;
}
inline ::CSBagReqParam* CSBagReq::release_reqparam() {
  clear_has_reqparam();
  ::CSBagReqParam* temp = reqparam_;
  reqparam_ = NULL;
  return temp;
}
inline void CSBagReq::set_allocated_reqparam(::CSBagReqParam* reqparam) {
  delete reqparam_;
  reqparam_ = reqparam;
  if (reqparam) {
    set_has_reqparam();
  } else {
    clear_has_reqparam();
  }
}

// -------------------------------------------------------------------

// CSBagRsp

// optional int32 result = 1;
inline bool CSBagRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBagRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBagRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBagRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CSBagRsp::result() const {
  return result_;
}
inline void CSBagRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .CSBagCmd cmd = 2;
inline bool CSBagRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBagRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBagRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBagRsp::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSBagCmd CSBagRsp::cmd() const {
  return static_cast< ::CSBagCmd >(cmd_);
}
inline void CSBagRsp::set_cmd(::CSBagCmd value) {
  assert(::CSBagCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSBagRspParam rspParam = 3;
inline bool CSBagRsp::has_rspparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSBagRsp::set_has_rspparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSBagRsp::clear_has_rspparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSBagRsp::clear_rspparam() {
  if (rspparam_ != NULL) rspparam_->::CSBagRspParam::Clear();
  clear_has_rspparam();
}
inline const ::CSBagRspParam& CSBagRsp::rspparam() const {
  return rspparam_ != NULL ? *rspparam_ : *default_instance_->rspparam_;
}
inline ::CSBagRspParam* CSBagRsp::mutable_rspparam() {
  set_has_rspparam();
  if (rspparam_ == NULL) rspparam_ = new ::CSBagRspParam;
  return rspparam_;
}
inline ::CSBagRspParam* CSBagRsp::release_rspparam() {
  clear_has_rspparam();
  ::CSBagRspParam* temp = rspparam_;
  rspparam_ = NULL;
  return temp;
}
inline void CSBagRsp::set_allocated_rspparam(::CSBagRspParam* rspparam) {
  delete rspparam_;
  rspparam_ = rspparam;
  if (rspparam) {
    set_has_rspparam();
  } else {
    clear_has_rspparam();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagFetchReq

// optional uint32 type = 1;
inline bool CSDecorateBagFetchReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagFetchReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagFetchReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagFetchReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagFetchReq::type() const {
  return type_;
}
inline void CSDecorateBagFetchReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSDecorateBagGridInfo

// optional uint32 ItemId = 1;
inline bool CSDecorateBagGridInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagGridInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagGridInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagGridInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 CSDecorateBagGridInfo::itemid() const {
  return itemid_;
}
inline void CSDecorateBagGridInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 type = 2;
inline bool CSDecorateBagGridInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagGridInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagGridInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagGridInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagGridInfo::type() const {
  return type_;
}
inline void CSDecorateBagGridInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 EndTime = 3;
inline bool CSDecorateBagGridInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDecorateBagGridInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDecorateBagGridInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDecorateBagGridInfo::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 CSDecorateBagGridInfo::endtime() const {
  return endtime_;
}
inline void CSDecorateBagGridInfo::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// CSDecorateBagInfo

// repeated .CSDecorateBagGridInfo DecorateGridInfo = 1;
inline int CSDecorateBagInfo::decorategridinfo_size() const {
  return decorategridinfo_.size();
}
inline void CSDecorateBagInfo::clear_decorategridinfo() {
  decorategridinfo_.Clear();
}
inline const ::CSDecorateBagGridInfo& CSDecorateBagInfo::decorategridinfo(int index) const {
  return decorategridinfo_.Get(index);
}
inline ::CSDecorateBagGridInfo* CSDecorateBagInfo::mutable_decorategridinfo(int index) {
  return decorategridinfo_.Mutable(index);
}
inline ::CSDecorateBagGridInfo* CSDecorateBagInfo::add_decorategridinfo() {
  return decorategridinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSDecorateBagGridInfo >&
CSDecorateBagInfo::decorategridinfo() const {
  return decorategridinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSDecorateBagGridInfo >*
CSDecorateBagInfo::mutable_decorategridinfo() {
  return &decorategridinfo_;
}

// -------------------------------------------------------------------

// CSDecorateBagFetchRsp

// optional uint32 type = 1;
inline bool CSDecorateBagFetchRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagFetchRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagFetchRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagFetchRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagFetchRsp::type() const {
  return type_;
}
inline void CSDecorateBagFetchRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool CSDecorateBagFetchRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagFetchRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagFetchRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagFetchRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDecorateBagFetchRsp::id() const {
  return id_;
}
inline void CSDecorateBagFetchRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .CSDecorateBagInfo DecorateBagInfo = 3;
inline bool CSDecorateBagFetchRsp::has_decoratebaginfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDecorateBagFetchRsp::set_has_decoratebaginfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDecorateBagFetchRsp::clear_has_decoratebaginfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDecorateBagFetchRsp::clear_decoratebaginfo() {
  if (decoratebaginfo_ != NULL) decoratebaginfo_->::CSDecorateBagInfo::Clear();
  clear_has_decoratebaginfo();
}
inline const ::CSDecorateBagInfo& CSDecorateBagFetchRsp::decoratebaginfo() const {
  return decoratebaginfo_ != NULL ? *decoratebaginfo_ : *default_instance_->decoratebaginfo_;
}
inline ::CSDecorateBagInfo* CSDecorateBagFetchRsp::mutable_decoratebaginfo() {
  set_has_decoratebaginfo();
  if (decoratebaginfo_ == NULL) decoratebaginfo_ = new ::CSDecorateBagInfo;
  return decoratebaginfo_;
}
inline ::CSDecorateBagInfo* CSDecorateBagFetchRsp::release_decoratebaginfo() {
  clear_has_decoratebaginfo();
  ::CSDecorateBagInfo* temp = decoratebaginfo_;
  decoratebaginfo_ = NULL;
  return temp;
}
inline void CSDecorateBagFetchRsp::set_allocated_decoratebaginfo(::CSDecorateBagInfo* decoratebaginfo) {
  delete decoratebaginfo_;
  decoratebaginfo_ = decoratebaginfo;
  if (decoratebaginfo) {
    set_has_decoratebaginfo();
  } else {
    clear_has_decoratebaginfo();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagShowSetReq

// optional uint32 Type = 1;
inline bool CSDecorateBagShowSetReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagShowSetReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagShowSetReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagShowSetReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagShowSetReq::type() const {
  return type_;
}
inline void CSDecorateBagShowSetReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool CSDecorateBagShowSetReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagShowSetReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagShowSetReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagShowSetReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDecorateBagShowSetReq::id() const {
  return id_;
}
inline void CSDecorateBagShowSetReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSDecorateBagVIPFetchReq

// optional uint32 type = 1;
inline bool CSDecorateBagVIPFetchReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagVIPFetchReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagVIPFetchReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagVIPFetchReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagVIPFetchReq::type() const {
  return type_;
}
inline void CSDecorateBagVIPFetchReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSDecorateBagVIPItem

// optional uint32 VipGrade = 1;
inline bool CSDecorateBagVIPItem::has_vipgrade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagVIPItem::set_has_vipgrade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagVIPItem::clear_has_vipgrade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagVIPItem::clear_vipgrade() {
  vipgrade_ = 0u;
  clear_has_vipgrade();
}
inline ::google::protobuf::uint32 CSDecorateBagVIPItem::vipgrade() const {
  return vipgrade_;
}
inline void CSDecorateBagVIPItem::set_vipgrade(::google::protobuf::uint32 value) {
  set_has_vipgrade();
  vipgrade_ = value;
}

// optional uint32 VipExper = 2;
inline bool CSDecorateBagVIPItem::has_vipexper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagVIPItem::set_has_vipexper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagVIPItem::clear_has_vipexper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagVIPItem::clear_vipexper() {
  vipexper_ = 0u;
  clear_has_vipexper();
}
inline ::google::protobuf::uint32 CSDecorateBagVIPItem::vipexper() const {
  return vipexper_;
}
inline void CSDecorateBagVIPItem::set_vipexper(::google::protobuf::uint32 value) {
  set_has_vipexper();
  vipexper_ = value;
}

// -------------------------------------------------------------------

// CSDecorateBagVIPList

// repeated .CSDecorateBagVIPItem VIPItemList = 1;
inline int CSDecorateBagVIPList::vipitemlist_size() const {
  return vipitemlist_.size();
}
inline void CSDecorateBagVIPList::clear_vipitemlist() {
  vipitemlist_.Clear();
}
inline const ::CSDecorateBagVIPItem& CSDecorateBagVIPList::vipitemlist(int index) const {
  return vipitemlist_.Get(index);
}
inline ::CSDecorateBagVIPItem* CSDecorateBagVIPList::mutable_vipitemlist(int index) {
  return vipitemlist_.Mutable(index);
}
inline ::CSDecorateBagVIPItem* CSDecorateBagVIPList::add_vipitemlist() {
  return vipitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSDecorateBagVIPItem >&
CSDecorateBagVIPList::vipitemlist() const {
  return vipitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSDecorateBagVIPItem >*
CSDecorateBagVIPList::mutable_vipitemlist() {
  return &vipitemlist_;
}

// -------------------------------------------------------------------

// CSDecorateBagVIPFetchRsp

// optional uint32 type = 1;
inline bool CSDecorateBagVIPFetchRsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagVIPFetchRsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagVIPFetchRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagVIPFetchRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSDecorateBagVIPFetchRsp::type() const {
  return type_;
}
inline void CSDecorateBagVIPFetchRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool CSDecorateBagVIPFetchRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagVIPFetchRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagVIPFetchRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagVIPFetchRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDecorateBagVIPFetchRsp::id() const {
  return id_;
}
inline void CSDecorateBagVIPFetchRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .CSDecorateBagInfo DecorateBagInfo = 3;
inline bool CSDecorateBagVIPFetchRsp::has_decoratebaginfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDecorateBagVIPFetchRsp::set_has_decoratebaginfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDecorateBagVIPFetchRsp::clear_has_decoratebaginfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDecorateBagVIPFetchRsp::clear_decoratebaginfo() {
  if (decoratebaginfo_ != NULL) decoratebaginfo_->::CSDecorateBagInfo::Clear();
  clear_has_decoratebaginfo();
}
inline const ::CSDecorateBagInfo& CSDecorateBagVIPFetchRsp::decoratebaginfo() const {
  return decoratebaginfo_ != NULL ? *decoratebaginfo_ : *default_instance_->decoratebaginfo_;
}
inline ::CSDecorateBagInfo* CSDecorateBagVIPFetchRsp::mutable_decoratebaginfo() {
  set_has_decoratebaginfo();
  if (decoratebaginfo_ == NULL) decoratebaginfo_ = new ::CSDecorateBagInfo;
  return decoratebaginfo_;
}
inline ::CSDecorateBagInfo* CSDecorateBagVIPFetchRsp::release_decoratebaginfo() {
  clear_has_decoratebaginfo();
  ::CSDecorateBagInfo* temp = decoratebaginfo_;
  decoratebaginfo_ = NULL;
  return temp;
}
inline void CSDecorateBagVIPFetchRsp::set_allocated_decoratebaginfo(::CSDecorateBagInfo* decoratebaginfo) {
  delete decoratebaginfo_;
  decoratebaginfo_ = decoratebaginfo;
  if (decoratebaginfo) {
    set_has_decoratebaginfo();
  } else {
    clear_has_decoratebaginfo();
  }
}

// optional .CSDecorateBagVIPList VipList = 4;
inline bool CSDecorateBagVIPFetchRsp::has_viplist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDecorateBagVIPFetchRsp::set_has_viplist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDecorateBagVIPFetchRsp::clear_has_viplist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDecorateBagVIPFetchRsp::clear_viplist() {
  if (viplist_ != NULL) viplist_->::CSDecorateBagVIPList::Clear();
  clear_has_viplist();
}
inline const ::CSDecorateBagVIPList& CSDecorateBagVIPFetchRsp::viplist() const {
  return viplist_ != NULL ? *viplist_ : *default_instance_->viplist_;
}
inline ::CSDecorateBagVIPList* CSDecorateBagVIPFetchRsp::mutable_viplist() {
  set_has_viplist();
  if (viplist_ == NULL) viplist_ = new ::CSDecorateBagVIPList;
  return viplist_;
}
inline ::CSDecorateBagVIPList* CSDecorateBagVIPFetchRsp::release_viplist() {
  clear_has_viplist();
  ::CSDecorateBagVIPList* temp = viplist_;
  viplist_ = NULL;
  return temp;
}
inline void CSDecorateBagVIPFetchRsp::set_allocated_viplist(::CSDecorateBagVIPList* viplist) {
  delete viplist_;
  viplist_ = viplist;
  if (viplist) {
    set_has_viplist();
  } else {
    clear_has_viplist();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagReqParam

// optional .CSDecorateBagFetchReq FetchReq = 1;
inline bool CSDecorateBagReqParam::has_fetchreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagReqParam::set_has_fetchreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagReqParam::clear_has_fetchreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagReqParam::clear_fetchreq() {
  if (fetchreq_ != NULL) fetchreq_->::CSDecorateBagFetchReq::Clear();
  clear_has_fetchreq();
}
inline const ::CSDecorateBagFetchReq& CSDecorateBagReqParam::fetchreq() const {
  return fetchreq_ != NULL ? *fetchreq_ : *default_instance_->fetchreq_;
}
inline ::CSDecorateBagFetchReq* CSDecorateBagReqParam::mutable_fetchreq() {
  set_has_fetchreq();
  if (fetchreq_ == NULL) fetchreq_ = new ::CSDecorateBagFetchReq;
  return fetchreq_;
}
inline ::CSDecorateBagFetchReq* CSDecorateBagReqParam::release_fetchreq() {
  clear_has_fetchreq();
  ::CSDecorateBagFetchReq* temp = fetchreq_;
  fetchreq_ = NULL;
  return temp;
}
inline void CSDecorateBagReqParam::set_allocated_fetchreq(::CSDecorateBagFetchReq* fetchreq) {
  delete fetchreq_;
  fetchreq_ = fetchreq;
  if (fetchreq) {
    set_has_fetchreq();
  } else {
    clear_has_fetchreq();
  }
}

// optional .CSDecorateBagShowSetReq ShowSetReq = 2;
inline bool CSDecorateBagReqParam::has_showsetreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagReqParam::set_has_showsetreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagReqParam::clear_has_showsetreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagReqParam::clear_showsetreq() {
  if (showsetreq_ != NULL) showsetreq_->::CSDecorateBagShowSetReq::Clear();
  clear_has_showsetreq();
}
inline const ::CSDecorateBagShowSetReq& CSDecorateBagReqParam::showsetreq() const {
  return showsetreq_ != NULL ? *showsetreq_ : *default_instance_->showsetreq_;
}
inline ::CSDecorateBagShowSetReq* CSDecorateBagReqParam::mutable_showsetreq() {
  set_has_showsetreq();
  if (showsetreq_ == NULL) showsetreq_ = new ::CSDecorateBagShowSetReq;
  return showsetreq_;
}
inline ::CSDecorateBagShowSetReq* CSDecorateBagReqParam::release_showsetreq() {
  clear_has_showsetreq();
  ::CSDecorateBagShowSetReq* temp = showsetreq_;
  showsetreq_ = NULL;
  return temp;
}
inline void CSDecorateBagReqParam::set_allocated_showsetreq(::CSDecorateBagShowSetReq* showsetreq) {
  delete showsetreq_;
  showsetreq_ = showsetreq;
  if (showsetreq) {
    set_has_showsetreq();
  } else {
    clear_has_showsetreq();
  }
}

// optional .CSDecorateBagVIPFetchReq VIPFetchReq = 3;
inline bool CSDecorateBagReqParam::has_vipfetchreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDecorateBagReqParam::set_has_vipfetchreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDecorateBagReqParam::clear_has_vipfetchreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDecorateBagReqParam::clear_vipfetchreq() {
  if (vipfetchreq_ != NULL) vipfetchreq_->::CSDecorateBagVIPFetchReq::Clear();
  clear_has_vipfetchreq();
}
inline const ::CSDecorateBagVIPFetchReq& CSDecorateBagReqParam::vipfetchreq() const {
  return vipfetchreq_ != NULL ? *vipfetchreq_ : *default_instance_->vipfetchreq_;
}
inline ::CSDecorateBagVIPFetchReq* CSDecorateBagReqParam::mutable_vipfetchreq() {
  set_has_vipfetchreq();
  if (vipfetchreq_ == NULL) vipfetchreq_ = new ::CSDecorateBagVIPFetchReq;
  return vipfetchreq_;
}
inline ::CSDecorateBagVIPFetchReq* CSDecorateBagReqParam::release_vipfetchreq() {
  clear_has_vipfetchreq();
  ::CSDecorateBagVIPFetchReq* temp = vipfetchreq_;
  vipfetchreq_ = NULL;
  return temp;
}
inline void CSDecorateBagReqParam::set_allocated_vipfetchreq(::CSDecorateBagVIPFetchReq* vipfetchreq) {
  delete vipfetchreq_;
  vipfetchreq_ = vipfetchreq;
  if (vipfetchreq) {
    set_has_vipfetchreq();
  } else {
    clear_has_vipfetchreq();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagRspParam

// optional .CSDecorateBagFetchRsp FetchRsp = 1;
inline bool CSDecorateBagRspParam::has_fetchrsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagRspParam::set_has_fetchrsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagRspParam::clear_has_fetchrsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagRspParam::clear_fetchrsp() {
  if (fetchrsp_ != NULL) fetchrsp_->::CSDecorateBagFetchRsp::Clear();
  clear_has_fetchrsp();
}
inline const ::CSDecorateBagFetchRsp& CSDecorateBagRspParam::fetchrsp() const {
  return fetchrsp_ != NULL ? *fetchrsp_ : *default_instance_->fetchrsp_;
}
inline ::CSDecorateBagFetchRsp* CSDecorateBagRspParam::mutable_fetchrsp() {
  set_has_fetchrsp();
  if (fetchrsp_ == NULL) fetchrsp_ = new ::CSDecorateBagFetchRsp;
  return fetchrsp_;
}
inline ::CSDecorateBagFetchRsp* CSDecorateBagRspParam::release_fetchrsp() {
  clear_has_fetchrsp();
  ::CSDecorateBagFetchRsp* temp = fetchrsp_;
  fetchrsp_ = NULL;
  return temp;
}
inline void CSDecorateBagRspParam::set_allocated_fetchrsp(::CSDecorateBagFetchRsp* fetchrsp) {
  delete fetchrsp_;
  fetchrsp_ = fetchrsp;
  if (fetchrsp) {
    set_has_fetchrsp();
  } else {
    clear_has_fetchrsp();
  }
}

// optional .CSDecorateBagVIPFetchRsp VIPFetchRsp = 2;
inline bool CSDecorateBagRspParam::has_vipfetchrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagRspParam::set_has_vipfetchrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagRspParam::clear_has_vipfetchrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagRspParam::clear_vipfetchrsp() {
  if (vipfetchrsp_ != NULL) vipfetchrsp_->::CSDecorateBagVIPFetchRsp::Clear();
  clear_has_vipfetchrsp();
}
inline const ::CSDecorateBagVIPFetchRsp& CSDecorateBagRspParam::vipfetchrsp() const {
  return vipfetchrsp_ != NULL ? *vipfetchrsp_ : *default_instance_->vipfetchrsp_;
}
inline ::CSDecorateBagVIPFetchRsp* CSDecorateBagRspParam::mutable_vipfetchrsp() {
  set_has_vipfetchrsp();
  if (vipfetchrsp_ == NULL) vipfetchrsp_ = new ::CSDecorateBagVIPFetchRsp;
  return vipfetchrsp_;
}
inline ::CSDecorateBagVIPFetchRsp* CSDecorateBagRspParam::release_vipfetchrsp() {
  clear_has_vipfetchrsp();
  ::CSDecorateBagVIPFetchRsp* temp = vipfetchrsp_;
  vipfetchrsp_ = NULL;
  return temp;
}
inline void CSDecorateBagRspParam::set_allocated_vipfetchrsp(::CSDecorateBagVIPFetchRsp* vipfetchrsp) {
  delete vipfetchrsp_;
  vipfetchrsp_ = vipfetchrsp;
  if (vipfetchrsp) {
    set_has_vipfetchrsp();
  } else {
    clear_has_vipfetchrsp();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagReq

// required .CSDecorateBagCmd cmd = 1;
inline bool CSDecorateBagReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagReq::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSDecorateBagCmd CSDecorateBagReq::cmd() const {
  return static_cast< ::CSDecorateBagCmd >(cmd_);
}
inline void CSDecorateBagReq::set_cmd(::CSDecorateBagCmd value) {
  assert(::CSDecorateBagCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSDecorateBagReqParam reqParam = 2;
inline bool CSDecorateBagReq::has_reqparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagReq::set_has_reqparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagReq::clear_has_reqparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagReq::clear_reqparam() {
  if (reqparam_ != NULL) reqparam_->::CSDecorateBagReqParam::Clear();
  clear_has_reqparam();
}
inline const ::CSDecorateBagReqParam& CSDecorateBagReq::reqparam() const {
  return reqparam_ != NULL ? *reqparam_ : *default_instance_->reqparam_;
}
inline ::CSDecorateBagReqParam* CSDecorateBagReq::mutable_reqparam() {
  set_has_reqparam();
  if (reqparam_ == NULL) reqparam_ = new ::CSDecorateBagReqParam;
  return reqparam_;
}
inline ::CSDecorateBagReqParam* CSDecorateBagReq::release_reqparam() {
  clear_has_reqparam();
  ::CSDecorateBagReqParam* temp = reqparam_;
  reqparam_ = NULL;
  return temp;
}
inline void CSDecorateBagReq::set_allocated_reqparam(::CSDecorateBagReqParam* reqparam) {
  delete reqparam_;
  reqparam_ = reqparam;
  if (reqparam) {
    set_has_reqparam();
  } else {
    clear_has_reqparam();
  }
}

// -------------------------------------------------------------------

// CSDecorateBagRsp

// optional int32 result = 1;
inline bool CSDecorateBagRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDecorateBagRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDecorateBagRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDecorateBagRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CSDecorateBagRsp::result() const {
  return result_;
}
inline void CSDecorateBagRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .CSDecorateBagCmd cmd = 2;
inline bool CSDecorateBagRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDecorateBagRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDecorateBagRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDecorateBagRsp::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSDecorateBagCmd CSDecorateBagRsp::cmd() const {
  return static_cast< ::CSDecorateBagCmd >(cmd_);
}
inline void CSDecorateBagRsp::set_cmd(::CSDecorateBagCmd value) {
  assert(::CSDecorateBagCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSDecorateBagRspParam rspParam = 3;
inline bool CSDecorateBagRsp::has_rspparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDecorateBagRsp::set_has_rspparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDecorateBagRsp::clear_has_rspparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDecorateBagRsp::clear_rspparam() {
  if (rspparam_ != NULL) rspparam_->::CSDecorateBagRspParam::Clear();
  clear_has_rspparam();
}
inline const ::CSDecorateBagRspParam& CSDecorateBagRsp::rspparam() const {
  return rspparam_ != NULL ? *rspparam_ : *default_instance_->rspparam_;
}
inline ::CSDecorateBagRspParam* CSDecorateBagRsp::mutable_rspparam() {
  set_has_rspparam();
  if (rspparam_ == NULL) rspparam_ = new ::CSDecorateBagRspParam;
  return rspparam_;
}
inline ::CSDecorateBagRspParam* CSDecorateBagRsp::release_rspparam() {
  clear_has_rspparam();
  ::CSDecorateBagRspParam* temp = rspparam_;
  rspparam_ = NULL;
  return temp;
}
inline void CSDecorateBagRsp::set_allocated_rspparam(::CSDecorateBagRspParam* rspparam) {
  delete rspparam_;
  rspparam_ = rspparam;
  if (rspparam) {
    set_has_rspparam();
  } else {
    clear_has_rspparam();
  }
}

// -------------------------------------------------------------------

// FriendList

// repeated uint64 FriendUid = 1;
inline int FriendList::frienduid_size() const {
  return frienduid_.size();
}
inline void FriendList::clear_frienduid() {
  frienduid_.Clear();
}
inline ::google::protobuf::uint64 FriendList::frienduid(int index) const {
  return frienduid_.Get(index);
}
inline void FriendList::set_frienduid(int index, ::google::protobuf::uint64 value) {
  frienduid_.Set(index, value);
}
inline void FriendList::add_frienduid(::google::protobuf::uint64 value) {
  frienduid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FriendList::frienduid() const {
  return frienduid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FriendList::mutable_frienduid() {
  return &frienduid_;
}

// -------------------------------------------------------------------

// CSMsgRegisterSuccessReq

// optional uint64 uid = 1;
inline bool CSMsgRegisterSuccessReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgRegisterSuccessReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgRegisterSuccessReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgRegisterSuccessReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgRegisterSuccessReq::uid() const {
  return uid_;
}
inline void CSMsgRegisterSuccessReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional string name = 2;
inline bool CSMsgRegisterSuccessReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgRegisterSuccessReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgRegisterSuccessReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgRegisterSuccessReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMsgRegisterSuccessReq::name() const {
  return *name_;
}
inline void CSMsgRegisterSuccessReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgRegisterSuccessReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgRegisterSuccessReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgRegisterSuccessReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMsgRegisterSuccessReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgRegisterSuccessReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgLoginSuccessReq

// optional uint64 uid = 1;
inline bool CSMsgLoginSuccessReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgLoginSuccessReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgLoginSuccessReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgLoginSuccessReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgLoginSuccessReq::uid() const {
  return uid_;
}
inline void CSMsgLoginSuccessReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSMsgQuitReq

// optional uint64 uid = 1;
inline bool CSMsgQuitReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgQuitReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgQuitReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgQuitReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgQuitReq::uid() const {
  return uid_;
}
inline void CSMsgQuitReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSMsgRoleInfo

// optional uint64 Uid = 1;
inline bool CSMsgRoleInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgRoleInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgRoleInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgRoleInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgRoleInfo::uid() const {
  return uid_;
}
inline void CSMsgRoleInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 Grade = 2;
inline bool CSMsgRoleInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgRoleInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgRoleInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgRoleInfo::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::grade() const {
  return grade_;
}
inline void CSMsgRoleInfo::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// optional uint32 Rank = 3;
inline bool CSMsgRoleInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMsgRoleInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMsgRoleInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMsgRoleInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::rank() const {
  return rank_;
}
inline void CSMsgRoleInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 Status = 4;
inline bool CSMsgRoleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMsgRoleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMsgRoleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMsgRoleInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::status() const {
  return status_;
}
inline void CSMsgRoleInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 Vip = 5;
inline bool CSMsgRoleInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMsgRoleInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMsgRoleInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMsgRoleInfo::clear_vip() {
  vip_ = 0u;
  clear_has_vip();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::vip() const {
  return vip_;
}
inline void CSMsgRoleInfo::set_vip(::google::protobuf::uint32 value) {
  set_has_vip();
  vip_ = value;
}

// optional uint32 Head = 6;
inline bool CSMsgRoleInfo::has_head() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMsgRoleInfo::set_has_head() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMsgRoleInfo::clear_has_head() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMsgRoleInfo::clear_head() {
  head_ = 0u;
  clear_has_head();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::head() const {
  return head_;
}
inline void CSMsgRoleInfo::set_head(::google::protobuf::uint32 value) {
  set_has_head();
  head_ = value;
}

// optional uint32 ChatFrame = 7;
inline bool CSMsgRoleInfo::has_chatframe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMsgRoleInfo::set_has_chatframe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMsgRoleInfo::clear_has_chatframe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMsgRoleInfo::clear_chatframe() {
  chatframe_ = 0u;
  clear_has_chatframe();
}
inline ::google::protobuf::uint32 CSMsgRoleInfo::chatframe() const {
  return chatframe_;
}
inline void CSMsgRoleInfo::set_chatframe(::google::protobuf::uint32 value) {
  set_has_chatframe();
  chatframe_ = value;
}

// optional string Name = 8;
inline bool CSMsgRoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSMsgRoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSMsgRoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSMsgRoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMsgRoleInfo::name() const {
  return *name_;
}
inline void CSMsgRoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgRoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgRoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgRoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMsgRoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgRoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgRoleInfoList

// repeated .CSMsgRoleInfo RoleInfo = 1;
inline int CSMsgRoleInfoList::roleinfo_size() const {
  return roleinfo_.size();
}
inline void CSMsgRoleInfoList::clear_roleinfo() {
  roleinfo_.Clear();
}
inline const ::CSMsgRoleInfo& CSMsgRoleInfoList::roleinfo(int index) const {
  return roleinfo_.Get(index);
}
inline ::CSMsgRoleInfo* CSMsgRoleInfoList::mutable_roleinfo(int index) {
  return roleinfo_.Mutable(index);
}
inline ::CSMsgRoleInfo* CSMsgRoleInfoList::add_roleinfo() {
  return roleinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMsgRoleInfo >&
CSMsgRoleInfoList::roleinfo() const {
  return roleinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMsgRoleInfo >*
CSMsgRoleInfoList::mutable_roleinfo() {
  return &roleinfo_;
}

// -------------------------------------------------------------------

// CSMsgLoginSuccessRsp

// optional .CSMsgRoleInfoList FriendList = 1;
inline bool CSMsgLoginSuccessRsp::has_friendlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgLoginSuccessRsp::set_has_friendlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgLoginSuccessRsp::clear_has_friendlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgLoginSuccessRsp::clear_friendlist() {
  if (friendlist_ != NULL) friendlist_->::CSMsgRoleInfoList::Clear();
  clear_has_friendlist();
}
inline const ::CSMsgRoleInfoList& CSMsgLoginSuccessRsp::friendlist() const {
  return friendlist_ != NULL ? *friendlist_ : *default_instance_->friendlist_;
}
inline ::CSMsgRoleInfoList* CSMsgLoginSuccessRsp::mutable_friendlist() {
  set_has_friendlist();
  if (friendlist_ == NULL) friendlist_ = new ::CSMsgRoleInfoList;
  return friendlist_;
}
inline ::CSMsgRoleInfoList* CSMsgLoginSuccessRsp::release_friendlist() {
  clear_has_friendlist();
  ::CSMsgRoleInfoList* temp = friendlist_;
  friendlist_ = NULL;
  return temp;
}
inline void CSMsgLoginSuccessRsp::set_allocated_friendlist(::CSMsgRoleInfoList* friendlist) {
  delete friendlist_;
  friendlist_ = friendlist;
  if (friendlist) {
    set_has_friendlist();
  } else {
    clear_has_friendlist();
  }
}

// -------------------------------------------------------------------

// CSMsgAskAddFriendReq

// optional string Name = 1;
inline bool CSMsgAskAddFriendReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgAskAddFriendReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgAskAddFriendReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgAskAddFriendReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMsgAskAddFriendReq::name() const {
  return *name_;
}
inline void CSMsgAskAddFriendReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgAskAddFriendReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgAskAddFriendReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgAskAddFriendReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMsgAskAddFriendReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgAskAddFriendReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 Uid = 2;
inline bool CSMsgAskAddFriendReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgAskAddFriendReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgAskAddFriendReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgAskAddFriendReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgAskAddFriendReq::uid() const {
  return uid_;
}
inline void CSMsgAskAddFriendReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSMsgAskAddFriendRsp

// optional uint64 Uid = 1;
inline bool CSMsgAskAddFriendRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgAskAddFriendRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgAskAddFriendRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgAskAddFriendRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgAskAddFriendRsp::uid() const {
  return uid_;
}
inline void CSMsgAskAddFriendRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional string FriendName = 2;
inline bool CSMsgAskAddFriendRsp::has_friendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgAskAddFriendRsp::set_has_friendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgAskAddFriendRsp::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgAskAddFriendRsp::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& CSMsgAskAddFriendRsp::friendname() const {
  return *friendname_;
}
inline void CSMsgAskAddFriendRsp::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void CSMsgAskAddFriendRsp::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void CSMsgAskAddFriendRsp::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgAskAddFriendRsp::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}
inline ::std::string* CSMsgAskAddFriendRsp::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgAskAddFriendRsp::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::kEmptyString) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgSuccessAddFriendReq

// optional uint64 Uid1 = 1;
inline bool CSMsgSuccessAddFriendReq::has_uid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgSuccessAddFriendReq::set_has_uid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgSuccessAddFriendReq::clear_has_uid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgSuccessAddFriendReq::clear_uid1() {
  uid1_ = GOOGLE_ULONGLONG(0);
  clear_has_uid1();
}
inline ::google::protobuf::uint64 CSMsgSuccessAddFriendReq::uid1() const {
  return uid1_;
}
inline void CSMsgSuccessAddFriendReq::set_uid1(::google::protobuf::uint64 value) {
  set_has_uid1();
  uid1_ = value;
}

// optional uint64 Uid2 = 2;
inline bool CSMsgSuccessAddFriendReq::has_uid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgSuccessAddFriendReq::set_has_uid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgSuccessAddFriendReq::clear_has_uid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgSuccessAddFriendReq::clear_uid2() {
  uid2_ = GOOGLE_ULONGLONG(0);
  clear_has_uid2();
}
inline ::google::protobuf::uint64 CSMsgSuccessAddFriendReq::uid2() const {
  return uid2_;
}
inline void CSMsgSuccessAddFriendReq::set_uid2(::google::protobuf::uint64 value) {
  set_has_uid2();
  uid2_ = value;
}

// -------------------------------------------------------------------

// CSMsgSuccessAddFriendRsp

// optional .CSMsgRoleInfo FriendRoleInfo = 1;
inline bool CSMsgSuccessAddFriendRsp::has_friendroleinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgSuccessAddFriendRsp::set_has_friendroleinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgSuccessAddFriendRsp::clear_has_friendroleinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgSuccessAddFriendRsp::clear_friendroleinfo() {
  if (friendroleinfo_ != NULL) friendroleinfo_->::CSMsgRoleInfo::Clear();
  clear_has_friendroleinfo();
}
inline const ::CSMsgRoleInfo& CSMsgSuccessAddFriendRsp::friendroleinfo() const {
  return friendroleinfo_ != NULL ? *friendroleinfo_ : *default_instance_->friendroleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgSuccessAddFriendRsp::mutable_friendroleinfo() {
  set_has_friendroleinfo();
  if (friendroleinfo_ == NULL) friendroleinfo_ = new ::CSMsgRoleInfo;
  return friendroleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgSuccessAddFriendRsp::release_friendroleinfo() {
  clear_has_friendroleinfo();
  ::CSMsgRoleInfo* temp = friendroleinfo_;
  friendroleinfo_ = NULL;
  return temp;
}
inline void CSMsgSuccessAddFriendRsp::set_allocated_friendroleinfo(::CSMsgRoleInfo* friendroleinfo) {
  delete friendroleinfo_;
  friendroleinfo_ = friendroleinfo;
  if (friendroleinfo) {
    set_has_friendroleinfo();
  } else {
    clear_has_friendroleinfo();
  }
}

// -------------------------------------------------------------------

// CSMsgDeleteFriendReq

// optional uint64 Uid1 = 1;
inline bool CSMsgDeleteFriendReq::has_uid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgDeleteFriendReq::set_has_uid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgDeleteFriendReq::clear_has_uid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgDeleteFriendReq::clear_uid1() {
  uid1_ = GOOGLE_ULONGLONG(0);
  clear_has_uid1();
}
inline ::google::protobuf::uint64 CSMsgDeleteFriendReq::uid1() const {
  return uid1_;
}
inline void CSMsgDeleteFriendReq::set_uid1(::google::protobuf::uint64 value) {
  set_has_uid1();
  uid1_ = value;
}

// optional uint64 Uid2 = 2;
inline bool CSMsgDeleteFriendReq::has_uid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgDeleteFriendReq::set_has_uid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgDeleteFriendReq::clear_has_uid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgDeleteFriendReq::clear_uid2() {
  uid2_ = GOOGLE_ULONGLONG(0);
  clear_has_uid2();
}
inline ::google::protobuf::uint64 CSMsgDeleteFriendReq::uid2() const {
  return uid2_;
}
inline void CSMsgDeleteFriendReq::set_uid2(::google::protobuf::uint64 value) {
  set_has_uid2();
  uid2_ = value;
}

// -------------------------------------------------------------------

// CSMsgDeleteFriendRsp

// optional uint64 Uid = 1;
inline bool CSMsgDeleteFriendRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgDeleteFriendRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgDeleteFriendRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgDeleteFriendRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgDeleteFriendRsp::uid() const {
  return uid_;
}
inline void CSMsgDeleteFriendRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSMsgSendChatReq

// optional uint64 Uid1 = 1;
inline bool CSMsgSendChatReq::has_uid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgSendChatReq::set_has_uid1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgSendChatReq::clear_has_uid1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgSendChatReq::clear_uid1() {
  uid1_ = GOOGLE_ULONGLONG(0);
  clear_has_uid1();
}
inline ::google::protobuf::uint64 CSMsgSendChatReq::uid1() const {
  return uid1_;
}
inline void CSMsgSendChatReq::set_uid1(::google::protobuf::uint64 value) {
  set_has_uid1();
  uid1_ = value;
}

// optional uint64 Uid2 = 2;
inline bool CSMsgSendChatReq::has_uid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgSendChatReq::set_has_uid2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgSendChatReq::clear_has_uid2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgSendChatReq::clear_uid2() {
  uid2_ = GOOGLE_ULONGLONG(0);
  clear_has_uid2();
}
inline ::google::protobuf::uint64 CSMsgSendChatReq::uid2() const {
  return uid2_;
}
inline void CSMsgSendChatReq::set_uid2(::google::protobuf::uint64 value) {
  set_has_uid2();
  uid2_ = value;
}

// optional string information = 3;
inline bool CSMsgSendChatReq::has_information() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMsgSendChatReq::set_has_information() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMsgSendChatReq::clear_has_information() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMsgSendChatReq::clear_information() {
  if (information_ != &::google::protobuf::internal::kEmptyString) {
    information_->clear();
  }
  clear_has_information();
}
inline const ::std::string& CSMsgSendChatReq::information() const {
  return *information_;
}
inline void CSMsgSendChatReq::set_information(const ::std::string& value) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(value);
}
inline void CSMsgSendChatReq::set_information(const char* value) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(value);
}
inline void CSMsgSendChatReq::set_information(const char* value, size_t size) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgSendChatReq::mutable_information() {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  return information_;
}
inline ::std::string* CSMsgSendChatReq::release_information() {
  clear_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = information_;
    information_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgSendChatReq::set_allocated_information(::std::string* information) {
  if (information_ != &::google::protobuf::internal::kEmptyString) {
    delete information_;
  }
  if (information) {
    set_has_information();
    information_ = information;
  } else {
    clear_has_information();
    information_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgSendChatRsp

// optional uint64 Uid = 1;
inline bool CSMsgSendChatRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgSendChatRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgSendChatRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgSendChatRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgSendChatRsp::uid() const {
  return uid_;
}
inline void CSMsgSendChatRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional string information = 2;
inline bool CSMsgSendChatRsp::has_information() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgSendChatRsp::set_has_information() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgSendChatRsp::clear_has_information() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgSendChatRsp::clear_information() {
  if (information_ != &::google::protobuf::internal::kEmptyString) {
    information_->clear();
  }
  clear_has_information();
}
inline const ::std::string& CSMsgSendChatRsp::information() const {
  return *information_;
}
inline void CSMsgSendChatRsp::set_information(const ::std::string& value) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(value);
}
inline void CSMsgSendChatRsp::set_information(const char* value) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(value);
}
inline void CSMsgSendChatRsp::set_information(const char* value, size_t size) {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  information_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgSendChatRsp::mutable_information() {
  set_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    information_ = new ::std::string;
  }
  return information_;
}
inline ::std::string* CSMsgSendChatRsp::release_information() {
  clear_has_information();
  if (information_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = information_;
    information_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgSendChatRsp::set_allocated_information(::std::string* information) {
  if (information_ != &::google::protobuf::internal::kEmptyString) {
    delete information_;
  }
  if (information) {
    set_has_information();
    information_ = information;
  } else {
    clear_has_information();
    information_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgFindNameReq

// optional string name = 1;
inline bool CSMsgFindNameReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgFindNameReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgFindNameReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgFindNameReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMsgFindNameReq::name() const {
  return *name_;
}
inline void CSMsgFindNameReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgFindNameReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMsgFindNameReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMsgFindNameReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMsgFindNameReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMsgFindNameReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMsgFindNameRsp

// optional .CSMsgRoleInfo RoleInfo = 1;
inline bool CSMsgFindNameRsp::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgFindNameRsp::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgFindNameRsp::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgFindNameRsp::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::CSMsgRoleInfo::Clear();
  clear_has_roleinfo();
}
inline const ::CSMsgRoleInfo& CSMsgFindNameRsp::roleinfo() const {
  return roleinfo_ != NULL ? *roleinfo_ : *default_instance_->roleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgFindNameRsp::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) roleinfo_ = new ::CSMsgRoleInfo;
  return roleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgFindNameRsp::release_roleinfo() {
  clear_has_roleinfo();
  ::CSMsgRoleInfo* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void CSMsgFindNameRsp::set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
}

// -------------------------------------------------------------------

// CSMsgChangeStatusReq

// optional uint32 type = 1;
inline bool CSMsgChangeStatusReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgChangeStatusReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgChangeStatusReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgChangeStatusReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSMsgChangeStatusReq::type() const {
  return type_;
}
inline void CSMsgChangeStatusReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 value = 2;
inline bool CSMsgChangeStatusReq::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgChangeStatusReq::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgChangeStatusReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgChangeStatusReq::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSMsgChangeStatusReq::value() const {
  return value_;
}
inline void CSMsgChangeStatusReq::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint64 Uid = 3;
inline bool CSMsgChangeStatusReq::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMsgChangeStatusReq::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMsgChangeStatusReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMsgChangeStatusReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgChangeStatusReq::uid() const {
  return uid_;
}
inline void CSMsgChangeStatusReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSMsgChangeStatusRsp

// optional .CSMsgRoleInfo RoleInfo = 1;
inline bool CSMsgChangeStatusRsp::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgChangeStatusRsp::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgChangeStatusRsp::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgChangeStatusRsp::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::CSMsgRoleInfo::Clear();
  clear_has_roleinfo();
}
inline const ::CSMsgRoleInfo& CSMsgChangeStatusRsp::roleinfo() const {
  return roleinfo_ != NULL ? *roleinfo_ : *default_instance_->roleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgChangeStatusRsp::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) roleinfo_ = new ::CSMsgRoleInfo;
  return roleinfo_;
}
inline ::CSMsgRoleInfo* CSMsgChangeStatusRsp::release_roleinfo() {
  clear_has_roleinfo();
  ::CSMsgRoleInfo* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void CSMsgChangeStatusRsp::set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
}

// -------------------------------------------------------------------

// CSMsgConnectSuccessReq

// optional uint64 uid = 1;
inline bool CSMsgConnectSuccessReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgConnectSuccessReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgConnectSuccessReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgConnectSuccessReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgConnectSuccessReq::uid() const {
  return uid_;
}
inline void CSMsgConnectSuccessReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSChatReqParam

// optional .CSMsgRegisterSuccessReq RegisterSuccessReq = 1;
inline bool CSChatReqParam::has_registersuccessreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChatReqParam::set_has_registersuccessreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChatReqParam::clear_has_registersuccessreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChatReqParam::clear_registersuccessreq() {
  if (registersuccessreq_ != NULL) registersuccessreq_->::CSMsgRegisterSuccessReq::Clear();
  clear_has_registersuccessreq();
}
inline const ::CSMsgRegisterSuccessReq& CSChatReqParam::registersuccessreq() const {
  return registersuccessreq_ != NULL ? *registersuccessreq_ : *default_instance_->registersuccessreq_;
}
inline ::CSMsgRegisterSuccessReq* CSChatReqParam::mutable_registersuccessreq() {
  set_has_registersuccessreq();
  if (registersuccessreq_ == NULL) registersuccessreq_ = new ::CSMsgRegisterSuccessReq;
  return registersuccessreq_;
}
inline ::CSMsgRegisterSuccessReq* CSChatReqParam::release_registersuccessreq() {
  clear_has_registersuccessreq();
  ::CSMsgRegisterSuccessReq* temp = registersuccessreq_;
  registersuccessreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_registersuccessreq(::CSMsgRegisterSuccessReq* registersuccessreq) {
  delete registersuccessreq_;
  registersuccessreq_ = registersuccessreq;
  if (registersuccessreq) {
    set_has_registersuccessreq();
  } else {
    clear_has_registersuccessreq();
  }
}

// optional .CSMsgLoginSuccessReq LoginSuccessReq = 2;
inline bool CSChatReqParam::has_loginsuccessreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChatReqParam::set_has_loginsuccessreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChatReqParam::clear_has_loginsuccessreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChatReqParam::clear_loginsuccessreq() {
  if (loginsuccessreq_ != NULL) loginsuccessreq_->::CSMsgLoginSuccessReq::Clear();
  clear_has_loginsuccessreq();
}
inline const ::CSMsgLoginSuccessReq& CSChatReqParam::loginsuccessreq() const {
  return loginsuccessreq_ != NULL ? *loginsuccessreq_ : *default_instance_->loginsuccessreq_;
}
inline ::CSMsgLoginSuccessReq* CSChatReqParam::mutable_loginsuccessreq() {
  set_has_loginsuccessreq();
  if (loginsuccessreq_ == NULL) loginsuccessreq_ = new ::CSMsgLoginSuccessReq;
  return loginsuccessreq_;
}
inline ::CSMsgLoginSuccessReq* CSChatReqParam::release_loginsuccessreq() {
  clear_has_loginsuccessreq();
  ::CSMsgLoginSuccessReq* temp = loginsuccessreq_;
  loginsuccessreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_loginsuccessreq(::CSMsgLoginSuccessReq* loginsuccessreq) {
  delete loginsuccessreq_;
  loginsuccessreq_ = loginsuccessreq;
  if (loginsuccessreq) {
    set_has_loginsuccessreq();
  } else {
    clear_has_loginsuccessreq();
  }
}

// optional .CSMsgQuitReq MsgQuitReq = 3;
inline bool CSChatReqParam::has_msgquitreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSChatReqParam::set_has_msgquitreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSChatReqParam::clear_has_msgquitreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSChatReqParam::clear_msgquitreq() {
  if (msgquitreq_ != NULL) msgquitreq_->::CSMsgQuitReq::Clear();
  clear_has_msgquitreq();
}
inline const ::CSMsgQuitReq& CSChatReqParam::msgquitreq() const {
  return msgquitreq_ != NULL ? *msgquitreq_ : *default_instance_->msgquitreq_;
}
inline ::CSMsgQuitReq* CSChatReqParam::mutable_msgquitreq() {
  set_has_msgquitreq();
  if (msgquitreq_ == NULL) msgquitreq_ = new ::CSMsgQuitReq;
  return msgquitreq_;
}
inline ::CSMsgQuitReq* CSChatReqParam::release_msgquitreq() {
  clear_has_msgquitreq();
  ::CSMsgQuitReq* temp = msgquitreq_;
  msgquitreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_msgquitreq(::CSMsgQuitReq* msgquitreq) {
  delete msgquitreq_;
  msgquitreq_ = msgquitreq;
  if (msgquitreq) {
    set_has_msgquitreq();
  } else {
    clear_has_msgquitreq();
  }
}

// optional .CSMsgAskAddFriendReq AskAddFriendReq = 4;
inline bool CSChatReqParam::has_askaddfriendreq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSChatReqParam::set_has_askaddfriendreq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSChatReqParam::clear_has_askaddfriendreq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSChatReqParam::clear_askaddfriendreq() {
  if (askaddfriendreq_ != NULL) askaddfriendreq_->::CSMsgAskAddFriendReq::Clear();
  clear_has_askaddfriendreq();
}
inline const ::CSMsgAskAddFriendReq& CSChatReqParam::askaddfriendreq() const {
  return askaddfriendreq_ != NULL ? *askaddfriendreq_ : *default_instance_->askaddfriendreq_;
}
inline ::CSMsgAskAddFriendReq* CSChatReqParam::mutable_askaddfriendreq() {
  set_has_askaddfriendreq();
  if (askaddfriendreq_ == NULL) askaddfriendreq_ = new ::CSMsgAskAddFriendReq;
  return askaddfriendreq_;
}
inline ::CSMsgAskAddFriendReq* CSChatReqParam::release_askaddfriendreq() {
  clear_has_askaddfriendreq();
  ::CSMsgAskAddFriendReq* temp = askaddfriendreq_;
  askaddfriendreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_askaddfriendreq(::CSMsgAskAddFriendReq* askaddfriendreq) {
  delete askaddfriendreq_;
  askaddfriendreq_ = askaddfriendreq;
  if (askaddfriendreq) {
    set_has_askaddfriendreq();
  } else {
    clear_has_askaddfriendreq();
  }
}

// optional .CSMsgSuccessAddFriendReq SuccessAddFriendReq = 5;
inline bool CSChatReqParam::has_successaddfriendreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSChatReqParam::set_has_successaddfriendreq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSChatReqParam::clear_has_successaddfriendreq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSChatReqParam::clear_successaddfriendreq() {
  if (successaddfriendreq_ != NULL) successaddfriendreq_->::CSMsgSuccessAddFriendReq::Clear();
  clear_has_successaddfriendreq();
}
inline const ::CSMsgSuccessAddFriendReq& CSChatReqParam::successaddfriendreq() const {
  return successaddfriendreq_ != NULL ? *successaddfriendreq_ : *default_instance_->successaddfriendreq_;
}
inline ::CSMsgSuccessAddFriendReq* CSChatReqParam::mutable_successaddfriendreq() {
  set_has_successaddfriendreq();
  if (successaddfriendreq_ == NULL) successaddfriendreq_ = new ::CSMsgSuccessAddFriendReq;
  return successaddfriendreq_;
}
inline ::CSMsgSuccessAddFriendReq* CSChatReqParam::release_successaddfriendreq() {
  clear_has_successaddfriendreq();
  ::CSMsgSuccessAddFriendReq* temp = successaddfriendreq_;
  successaddfriendreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_successaddfriendreq(::CSMsgSuccessAddFriendReq* successaddfriendreq) {
  delete successaddfriendreq_;
  successaddfriendreq_ = successaddfriendreq;
  if (successaddfriendreq) {
    set_has_successaddfriendreq();
  } else {
    clear_has_successaddfriendreq();
  }
}

// optional .CSMsgDeleteFriendReq DeleteFriendReq = 6;
inline bool CSChatReqParam::has_deletefriendreq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSChatReqParam::set_has_deletefriendreq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSChatReqParam::clear_has_deletefriendreq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSChatReqParam::clear_deletefriendreq() {
  if (deletefriendreq_ != NULL) deletefriendreq_->::CSMsgDeleteFriendReq::Clear();
  clear_has_deletefriendreq();
}
inline const ::CSMsgDeleteFriendReq& CSChatReqParam::deletefriendreq() const {
  return deletefriendreq_ != NULL ? *deletefriendreq_ : *default_instance_->deletefriendreq_;
}
inline ::CSMsgDeleteFriendReq* CSChatReqParam::mutable_deletefriendreq() {
  set_has_deletefriendreq();
  if (deletefriendreq_ == NULL) deletefriendreq_ = new ::CSMsgDeleteFriendReq;
  return deletefriendreq_;
}
inline ::CSMsgDeleteFriendReq* CSChatReqParam::release_deletefriendreq() {
  clear_has_deletefriendreq();
  ::CSMsgDeleteFriendReq* temp = deletefriendreq_;
  deletefriendreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_deletefriendreq(::CSMsgDeleteFriendReq* deletefriendreq) {
  delete deletefriendreq_;
  deletefriendreq_ = deletefriendreq;
  if (deletefriendreq) {
    set_has_deletefriendreq();
  } else {
    clear_has_deletefriendreq();
  }
}

// optional .CSMsgSendChatReq SendChatReq = 7;
inline bool CSChatReqParam::has_sendchatreq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSChatReqParam::set_has_sendchatreq() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSChatReqParam::clear_has_sendchatreq() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSChatReqParam::clear_sendchatreq() {
  if (sendchatreq_ != NULL) sendchatreq_->::CSMsgSendChatReq::Clear();
  clear_has_sendchatreq();
}
inline const ::CSMsgSendChatReq& CSChatReqParam::sendchatreq() const {
  return sendchatreq_ != NULL ? *sendchatreq_ : *default_instance_->sendchatreq_;
}
inline ::CSMsgSendChatReq* CSChatReqParam::mutable_sendchatreq() {
  set_has_sendchatreq();
  if (sendchatreq_ == NULL) sendchatreq_ = new ::CSMsgSendChatReq;
  return sendchatreq_;
}
inline ::CSMsgSendChatReq* CSChatReqParam::release_sendchatreq() {
  clear_has_sendchatreq();
  ::CSMsgSendChatReq* temp = sendchatreq_;
  sendchatreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_sendchatreq(::CSMsgSendChatReq* sendchatreq) {
  delete sendchatreq_;
  sendchatreq_ = sendchatreq;
  if (sendchatreq) {
    set_has_sendchatreq();
  } else {
    clear_has_sendchatreq();
  }
}

// optional .CSMsgFindNameReq FindNameReq = 8;
inline bool CSChatReqParam::has_findnamereq() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSChatReqParam::set_has_findnamereq() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSChatReqParam::clear_has_findnamereq() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSChatReqParam::clear_findnamereq() {
  if (findnamereq_ != NULL) findnamereq_->::CSMsgFindNameReq::Clear();
  clear_has_findnamereq();
}
inline const ::CSMsgFindNameReq& CSChatReqParam::findnamereq() const {
  return findnamereq_ != NULL ? *findnamereq_ : *default_instance_->findnamereq_;
}
inline ::CSMsgFindNameReq* CSChatReqParam::mutable_findnamereq() {
  set_has_findnamereq();
  if (findnamereq_ == NULL) findnamereq_ = new ::CSMsgFindNameReq;
  return findnamereq_;
}
inline ::CSMsgFindNameReq* CSChatReqParam::release_findnamereq() {
  clear_has_findnamereq();
  ::CSMsgFindNameReq* temp = findnamereq_;
  findnamereq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_findnamereq(::CSMsgFindNameReq* findnamereq) {
  delete findnamereq_;
  findnamereq_ = findnamereq;
  if (findnamereq) {
    set_has_findnamereq();
  } else {
    clear_has_findnamereq();
  }
}

// optional .CSMsgChangeStatusReq ChangeStatusReq = 9;
inline bool CSChatReqParam::has_changestatusreq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSChatReqParam::set_has_changestatusreq() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSChatReqParam::clear_has_changestatusreq() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSChatReqParam::clear_changestatusreq() {
  if (changestatusreq_ != NULL) changestatusreq_->::CSMsgChangeStatusReq::Clear();
  clear_has_changestatusreq();
}
inline const ::CSMsgChangeStatusReq& CSChatReqParam::changestatusreq() const {
  return changestatusreq_ != NULL ? *changestatusreq_ : *default_instance_->changestatusreq_;
}
inline ::CSMsgChangeStatusReq* CSChatReqParam::mutable_changestatusreq() {
  set_has_changestatusreq();
  if (changestatusreq_ == NULL) changestatusreq_ = new ::CSMsgChangeStatusReq;
  return changestatusreq_;
}
inline ::CSMsgChangeStatusReq* CSChatReqParam::release_changestatusreq() {
  clear_has_changestatusreq();
  ::CSMsgChangeStatusReq* temp = changestatusreq_;
  changestatusreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_changestatusreq(::CSMsgChangeStatusReq* changestatusreq) {
  delete changestatusreq_;
  changestatusreq_ = changestatusreq;
  if (changestatusreq) {
    set_has_changestatusreq();
  } else {
    clear_has_changestatusreq();
  }
}

// optional .CSMsgConnectSuccessReq ConnectSuccessReq = 10;
inline bool CSChatReqParam::has_connectsuccessreq() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSChatReqParam::set_has_connectsuccessreq() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSChatReqParam::clear_has_connectsuccessreq() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSChatReqParam::clear_connectsuccessreq() {
  if (connectsuccessreq_ != NULL) connectsuccessreq_->::CSMsgConnectSuccessReq::Clear();
  clear_has_connectsuccessreq();
}
inline const ::CSMsgConnectSuccessReq& CSChatReqParam::connectsuccessreq() const {
  return connectsuccessreq_ != NULL ? *connectsuccessreq_ : *default_instance_->connectsuccessreq_;
}
inline ::CSMsgConnectSuccessReq* CSChatReqParam::mutable_connectsuccessreq() {
  set_has_connectsuccessreq();
  if (connectsuccessreq_ == NULL) connectsuccessreq_ = new ::CSMsgConnectSuccessReq;
  return connectsuccessreq_;
}
inline ::CSMsgConnectSuccessReq* CSChatReqParam::release_connectsuccessreq() {
  clear_has_connectsuccessreq();
  ::CSMsgConnectSuccessReq* temp = connectsuccessreq_;
  connectsuccessreq_ = NULL;
  return temp;
}
inline void CSChatReqParam::set_allocated_connectsuccessreq(::CSMsgConnectSuccessReq* connectsuccessreq) {
  delete connectsuccessreq_;
  connectsuccessreq_ = connectsuccessreq;
  if (connectsuccessreq) {
    set_has_connectsuccessreq();
  } else {
    clear_has_connectsuccessreq();
  }
}

// -------------------------------------------------------------------

// CSChatRspParam

// optional .CSMsgLoginSuccessRsp MsgLoginSuccess = 1;
inline bool CSChatRspParam::has_msgloginsuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChatRspParam::set_has_msgloginsuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChatRspParam::clear_has_msgloginsuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChatRspParam::clear_msgloginsuccess() {
  if (msgloginsuccess_ != NULL) msgloginsuccess_->::CSMsgLoginSuccessRsp::Clear();
  clear_has_msgloginsuccess();
}
inline const ::CSMsgLoginSuccessRsp& CSChatRspParam::msgloginsuccess() const {
  return msgloginsuccess_ != NULL ? *msgloginsuccess_ : *default_instance_->msgloginsuccess_;
}
inline ::CSMsgLoginSuccessRsp* CSChatRspParam::mutable_msgloginsuccess() {
  set_has_msgloginsuccess();
  if (msgloginsuccess_ == NULL) msgloginsuccess_ = new ::CSMsgLoginSuccessRsp;
  return msgloginsuccess_;
}
inline ::CSMsgLoginSuccessRsp* CSChatRspParam::release_msgloginsuccess() {
  clear_has_msgloginsuccess();
  ::CSMsgLoginSuccessRsp* temp = msgloginsuccess_;
  msgloginsuccess_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_msgloginsuccess(::CSMsgLoginSuccessRsp* msgloginsuccess) {
  delete msgloginsuccess_;
  msgloginsuccess_ = msgloginsuccess;
  if (msgloginsuccess) {
    set_has_msgloginsuccess();
  } else {
    clear_has_msgloginsuccess();
  }
}

// optional .CSMsgRoleInfo RoleInfo = 2;
inline bool CSChatRspParam::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChatRspParam::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChatRspParam::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChatRspParam::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::CSMsgRoleInfo::Clear();
  clear_has_roleinfo();
}
inline const ::CSMsgRoleInfo& CSChatRspParam::roleinfo() const {
  return roleinfo_ != NULL ? *roleinfo_ : *default_instance_->roleinfo_;
}
inline ::CSMsgRoleInfo* CSChatRspParam::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) roleinfo_ = new ::CSMsgRoleInfo;
  return roleinfo_;
}
inline ::CSMsgRoleInfo* CSChatRspParam::release_roleinfo() {
  clear_has_roleinfo();
  ::CSMsgRoleInfo* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_roleinfo(::CSMsgRoleInfo* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
}

// optional .CSMsgRoleInfo RoleQuit = 3;
inline bool CSChatRspParam::has_rolequit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSChatRspParam::set_has_rolequit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSChatRspParam::clear_has_rolequit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSChatRspParam::clear_rolequit() {
  if (rolequit_ != NULL) rolequit_->::CSMsgRoleInfo::Clear();
  clear_has_rolequit();
}
inline const ::CSMsgRoleInfo& CSChatRspParam::rolequit() const {
  return rolequit_ != NULL ? *rolequit_ : *default_instance_->rolequit_;
}
inline ::CSMsgRoleInfo* CSChatRspParam::mutable_rolequit() {
  set_has_rolequit();
  if (rolequit_ == NULL) rolequit_ = new ::CSMsgRoleInfo;
  return rolequit_;
}
inline ::CSMsgRoleInfo* CSChatRspParam::release_rolequit() {
  clear_has_rolequit();
  ::CSMsgRoleInfo* temp = rolequit_;
  rolequit_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_rolequit(::CSMsgRoleInfo* rolequit) {
  delete rolequit_;
  rolequit_ = rolequit;
  if (rolequit) {
    set_has_rolequit();
  } else {
    clear_has_rolequit();
  }
}

// optional .CSMsgAskAddFriendRsp AskAddFriendRsp = 4;
inline bool CSChatRspParam::has_askaddfriendrsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSChatRspParam::set_has_askaddfriendrsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSChatRspParam::clear_has_askaddfriendrsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSChatRspParam::clear_askaddfriendrsp() {
  if (askaddfriendrsp_ != NULL) askaddfriendrsp_->::CSMsgAskAddFriendRsp::Clear();
  clear_has_askaddfriendrsp();
}
inline const ::CSMsgAskAddFriendRsp& CSChatRspParam::askaddfriendrsp() const {
  return askaddfriendrsp_ != NULL ? *askaddfriendrsp_ : *default_instance_->askaddfriendrsp_;
}
inline ::CSMsgAskAddFriendRsp* CSChatRspParam::mutable_askaddfriendrsp() {
  set_has_askaddfriendrsp();
  if (askaddfriendrsp_ == NULL) askaddfriendrsp_ = new ::CSMsgAskAddFriendRsp;
  return askaddfriendrsp_;
}
inline ::CSMsgAskAddFriendRsp* CSChatRspParam::release_askaddfriendrsp() {
  clear_has_askaddfriendrsp();
  ::CSMsgAskAddFriendRsp* temp = askaddfriendrsp_;
  askaddfriendrsp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_askaddfriendrsp(::CSMsgAskAddFriendRsp* askaddfriendrsp) {
  delete askaddfriendrsp_;
  askaddfriendrsp_ = askaddfriendrsp;
  if (askaddfriendrsp) {
    set_has_askaddfriendrsp();
  } else {
    clear_has_askaddfriendrsp();
  }
}

// optional .CSMsgSuccessAddFriendRsp SuccessAddFriendRsp = 5;
inline bool CSChatRspParam::has_successaddfriendrsp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSChatRspParam::set_has_successaddfriendrsp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSChatRspParam::clear_has_successaddfriendrsp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSChatRspParam::clear_successaddfriendrsp() {
  if (successaddfriendrsp_ != NULL) successaddfriendrsp_->::CSMsgSuccessAddFriendRsp::Clear();
  clear_has_successaddfriendrsp();
}
inline const ::CSMsgSuccessAddFriendRsp& CSChatRspParam::successaddfriendrsp() const {
  return successaddfriendrsp_ != NULL ? *successaddfriendrsp_ : *default_instance_->successaddfriendrsp_;
}
inline ::CSMsgSuccessAddFriendRsp* CSChatRspParam::mutable_successaddfriendrsp() {
  set_has_successaddfriendrsp();
  if (successaddfriendrsp_ == NULL) successaddfriendrsp_ = new ::CSMsgSuccessAddFriendRsp;
  return successaddfriendrsp_;
}
inline ::CSMsgSuccessAddFriendRsp* CSChatRspParam::release_successaddfriendrsp() {
  clear_has_successaddfriendrsp();
  ::CSMsgSuccessAddFriendRsp* temp = successaddfriendrsp_;
  successaddfriendrsp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_successaddfriendrsp(::CSMsgSuccessAddFriendRsp* successaddfriendrsp) {
  delete successaddfriendrsp_;
  successaddfriendrsp_ = successaddfriendrsp;
  if (successaddfriendrsp) {
    set_has_successaddfriendrsp();
  } else {
    clear_has_successaddfriendrsp();
  }
}

// optional .CSMsgDeleteFriendRsp DeleteFriendRsp = 6;
inline bool CSChatRspParam::has_deletefriendrsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSChatRspParam::set_has_deletefriendrsp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSChatRspParam::clear_has_deletefriendrsp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSChatRspParam::clear_deletefriendrsp() {
  if (deletefriendrsp_ != NULL) deletefriendrsp_->::CSMsgDeleteFriendRsp::Clear();
  clear_has_deletefriendrsp();
}
inline const ::CSMsgDeleteFriendRsp& CSChatRspParam::deletefriendrsp() const {
  return deletefriendrsp_ != NULL ? *deletefriendrsp_ : *default_instance_->deletefriendrsp_;
}
inline ::CSMsgDeleteFriendRsp* CSChatRspParam::mutable_deletefriendrsp() {
  set_has_deletefriendrsp();
  if (deletefriendrsp_ == NULL) deletefriendrsp_ = new ::CSMsgDeleteFriendRsp;
  return deletefriendrsp_;
}
inline ::CSMsgDeleteFriendRsp* CSChatRspParam::release_deletefriendrsp() {
  clear_has_deletefriendrsp();
  ::CSMsgDeleteFriendRsp* temp = deletefriendrsp_;
  deletefriendrsp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_deletefriendrsp(::CSMsgDeleteFriendRsp* deletefriendrsp) {
  delete deletefriendrsp_;
  deletefriendrsp_ = deletefriendrsp;
  if (deletefriendrsp) {
    set_has_deletefriendrsp();
  } else {
    clear_has_deletefriendrsp();
  }
}

// optional .CSMsgSendChatRsp SendChatRsp = 7;
inline bool CSChatRspParam::has_sendchatrsp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSChatRspParam::set_has_sendchatrsp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSChatRspParam::clear_has_sendchatrsp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSChatRspParam::clear_sendchatrsp() {
  if (sendchatrsp_ != NULL) sendchatrsp_->::CSMsgSendChatRsp::Clear();
  clear_has_sendchatrsp();
}
inline const ::CSMsgSendChatRsp& CSChatRspParam::sendchatrsp() const {
  return sendchatrsp_ != NULL ? *sendchatrsp_ : *default_instance_->sendchatrsp_;
}
inline ::CSMsgSendChatRsp* CSChatRspParam::mutable_sendchatrsp() {
  set_has_sendchatrsp();
  if (sendchatrsp_ == NULL) sendchatrsp_ = new ::CSMsgSendChatRsp;
  return sendchatrsp_;
}
inline ::CSMsgSendChatRsp* CSChatRspParam::release_sendchatrsp() {
  clear_has_sendchatrsp();
  ::CSMsgSendChatRsp* temp = sendchatrsp_;
  sendchatrsp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_sendchatrsp(::CSMsgSendChatRsp* sendchatrsp) {
  delete sendchatrsp_;
  sendchatrsp_ = sendchatrsp;
  if (sendchatrsp) {
    set_has_sendchatrsp();
  } else {
    clear_has_sendchatrsp();
  }
}

// optional .CSMsgFindNameRsp FindNameRsp = 8;
inline bool CSChatRspParam::has_findnamersp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSChatRspParam::set_has_findnamersp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSChatRspParam::clear_has_findnamersp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSChatRspParam::clear_findnamersp() {
  if (findnamersp_ != NULL) findnamersp_->::CSMsgFindNameRsp::Clear();
  clear_has_findnamersp();
}
inline const ::CSMsgFindNameRsp& CSChatRspParam::findnamersp() const {
  return findnamersp_ != NULL ? *findnamersp_ : *default_instance_->findnamersp_;
}
inline ::CSMsgFindNameRsp* CSChatRspParam::mutable_findnamersp() {
  set_has_findnamersp();
  if (findnamersp_ == NULL) findnamersp_ = new ::CSMsgFindNameRsp;
  return findnamersp_;
}
inline ::CSMsgFindNameRsp* CSChatRspParam::release_findnamersp() {
  clear_has_findnamersp();
  ::CSMsgFindNameRsp* temp = findnamersp_;
  findnamersp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_findnamersp(::CSMsgFindNameRsp* findnamersp) {
  delete findnamersp_;
  findnamersp_ = findnamersp;
  if (findnamersp) {
    set_has_findnamersp();
  } else {
    clear_has_findnamersp();
  }
}

// optional .CSMsgChangeStatusRsp ChangeStatusRsp = 9;
inline bool CSChatRspParam::has_changestatusrsp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSChatRspParam::set_has_changestatusrsp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSChatRspParam::clear_has_changestatusrsp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSChatRspParam::clear_changestatusrsp() {
  if (changestatusrsp_ != NULL) changestatusrsp_->::CSMsgChangeStatusRsp::Clear();
  clear_has_changestatusrsp();
}
inline const ::CSMsgChangeStatusRsp& CSChatRspParam::changestatusrsp() const {
  return changestatusrsp_ != NULL ? *changestatusrsp_ : *default_instance_->changestatusrsp_;
}
inline ::CSMsgChangeStatusRsp* CSChatRspParam::mutable_changestatusrsp() {
  set_has_changestatusrsp();
  if (changestatusrsp_ == NULL) changestatusrsp_ = new ::CSMsgChangeStatusRsp;
  return changestatusrsp_;
}
inline ::CSMsgChangeStatusRsp* CSChatRspParam::release_changestatusrsp() {
  clear_has_changestatusrsp();
  ::CSMsgChangeStatusRsp* temp = changestatusrsp_;
  changestatusrsp_ = NULL;
  return temp;
}
inline void CSChatRspParam::set_allocated_changestatusrsp(::CSMsgChangeStatusRsp* changestatusrsp) {
  delete changestatusrsp_;
  changestatusrsp_ = changestatusrsp;
  if (changestatusrsp) {
    set_has_changestatusrsp();
  } else {
    clear_has_changestatusrsp();
  }
}

// -------------------------------------------------------------------

// CSChatReq

// required .CSChatCmd cmd = 1;
inline bool CSChatReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChatReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChatReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChatReq::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSChatCmd CSChatReq::cmd() const {
  return static_cast< ::CSChatCmd >(cmd_);
}
inline void CSChatReq::set_cmd(::CSChatCmd value) {
  assert(::CSChatCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSChatReqParam reqParam = 2;
inline bool CSChatReq::has_reqparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChatReq::set_has_reqparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChatReq::clear_has_reqparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChatReq::clear_reqparam() {
  if (reqparam_ != NULL) reqparam_->::CSChatReqParam::Clear();
  clear_has_reqparam();
}
inline const ::CSChatReqParam& CSChatReq::reqparam() const {
  return reqparam_ != NULL ? *reqparam_ : *default_instance_->reqparam_;
}
inline ::CSChatReqParam* CSChatReq::mutable_reqparam() {
  set_has_reqparam();
  if (reqparam_ == NULL) reqparam_ = new ::CSChatReqParam;
  return reqparam_;
}
inline ::CSChatReqParam* CSChatReq::release_reqparam() {
  clear_has_reqparam();
  ::CSChatReqParam* temp = reqparam_;
  reqparam_ = NULL;
  return temp;
}
inline void CSChatReq::set_allocated_reqparam(::CSChatReqParam* reqparam) {
  delete reqparam_;
  reqparam_ = reqparam;
  if (reqparam) {
    set_has_reqparam();
  } else {
    clear_has_reqparam();
  }
}

// -------------------------------------------------------------------

// CSChatRsp

// optional int32 result = 1;
inline bool CSChatRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSChatRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSChatRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSChatRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CSChatRsp::result() const {
  return result_;
}
inline void CSChatRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .CSChatCmd cmd = 2;
inline bool CSChatRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSChatRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSChatRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSChatRsp::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSChatCmd CSChatRsp::cmd() const {
  return static_cast< ::CSChatCmd >(cmd_);
}
inline void CSChatRsp::set_cmd(::CSChatCmd value) {
  assert(::CSChatCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSChatRspParam rspParam = 3;
inline bool CSChatRsp::has_rspparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSChatRsp::set_has_rspparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSChatRsp::clear_has_rspparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSChatRsp::clear_rspparam() {
  if (rspparam_ != NULL) rspparam_->::CSChatRspParam::Clear();
  clear_has_rspparam();
}
inline const ::CSChatRspParam& CSChatRsp::rspparam() const {
  return rspparam_ != NULL ? *rspparam_ : *default_instance_->rspparam_;
}
inline ::CSChatRspParam* CSChatRsp::mutable_rspparam() {
  set_has_rspparam();
  if (rspparam_ == NULL) rspparam_ = new ::CSChatRspParam;
  return rspparam_;
}
inline ::CSChatRspParam* CSChatRsp::release_rspparam() {
  clear_has_rspparam();
  ::CSChatRspParam* temp = rspparam_;
  rspparam_ = NULL;
  return temp;
}
inline void CSChatRsp::set_allocated_rspparam(::CSChatRspParam* rspparam) {
  delete rspparam_;
  rspparam_ = rspparam;
  if (rspparam) {
    set_has_rspparam();
  } else {
    clear_has_rspparam();
  }
}

// -------------------------------------------------------------------

// CSMateFetchReq

// optional uint64 uid = 1;
inline bool CSMateFetchReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMateFetchReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMateFetchReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMateFetchReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMateFetchReq::uid() const {
  return uid_;
}
inline void CSMateFetchReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSQuitMateFetchReq

// optional uint64 uid = 1;
inline bool CSQuitMateFetchReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQuitMateFetchReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQuitMateFetchReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQuitMateFetchReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSQuitMateFetchReq::uid() const {
  return uid_;
}
inline void CSQuitMateFetchReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSNotButtonMateFetchReq

// optional uint64 uid = 1;
inline bool CSNotButtonMateFetchReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotButtonMateFetchReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotButtonMateFetchReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotButtonMateFetchReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSNotButtonMateFetchReq::uid() const {
  return uid_;
}
inline void CSNotButtonMateFetchReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSSuccessButtonMateFetchReq

// optional uint64 uid = 1;
inline bool CSSuccessButtonMateFetchReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSuccessButtonMateFetchReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSuccessButtonMateFetchReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSuccessButtonMateFetchReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSSuccessButtonMateFetchReq::uid() const {
  return uid_;
}
inline void CSSuccessButtonMateFetchReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSShowHeroVipInfo

// optional uint32 VipId = 1;
inline bool CSShowHeroVipInfo::has_vipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowHeroVipInfo::set_has_vipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowHeroVipInfo::clear_has_vipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowHeroVipInfo::clear_vipid() {
  vipid_ = 0u;
  clear_has_vipid();
}
inline ::google::protobuf::uint32 CSShowHeroVipInfo::vipid() const {
  return vipid_;
}
inline void CSShowHeroVipInfo::set_vipid(::google::protobuf::uint32 value) {
  set_has_vipid();
  vipid_ = value;
}

// optional uint32 VipGrade = 2;
inline bool CSShowHeroVipInfo::has_vipgrade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSShowHeroVipInfo::set_has_vipgrade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSShowHeroVipInfo::clear_has_vipgrade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSShowHeroVipInfo::clear_vipgrade() {
  vipgrade_ = 0u;
  clear_has_vipgrade();
}
inline ::google::protobuf::uint32 CSShowHeroVipInfo::vipgrade() const {
  return vipgrade_;
}
inline void CSShowHeroVipInfo::set_vipgrade(::google::protobuf::uint32 value) {
  set_has_vipgrade();
  vipgrade_ = value;
}

// -------------------------------------------------------------------

// CSShowHeroInfo

// optional uint64 uid = 1;
inline bool CSShowHeroInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowHeroInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowHeroInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowHeroInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSShowHeroInfo::uid() const {
  return uid_;
}
inline void CSShowHeroInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 VipID = 2;
inline bool CSShowHeroInfo::has_vipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSShowHeroInfo::set_has_vipid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSShowHeroInfo::clear_has_vipid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSShowHeroInfo::clear_vipid() {
  vipid_ = 0u;
  clear_has_vipid();
}
inline ::google::protobuf::uint32 CSShowHeroInfo::vipid() const {
  return vipid_;
}
inline void CSShowHeroInfo::set_vipid(::google::protobuf::uint32 value) {
  set_has_vipid();
  vipid_ = value;
}

// optional uint32 VipGrade = 3;
inline bool CSShowHeroInfo::has_vipgrade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSShowHeroInfo::set_has_vipgrade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSShowHeroInfo::clear_has_vipgrade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSShowHeroInfo::clear_vipgrade() {
  vipgrade_ = 0u;
  clear_has_vipgrade();
}
inline ::google::protobuf::uint32 CSShowHeroInfo::vipgrade() const {
  return vipgrade_;
}
inline void CSShowHeroInfo::set_vipgrade(::google::protobuf::uint32 value) {
  set_has_vipgrade();
  vipgrade_ = value;
}

// optional uint32 RoleGrade = 4;
inline bool CSShowHeroInfo::has_rolegrade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSShowHeroInfo::set_has_rolegrade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSShowHeroInfo::clear_has_rolegrade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSShowHeroInfo::clear_rolegrade() {
  rolegrade_ = 0u;
  clear_has_rolegrade();
}
inline ::google::protobuf::uint32 CSShowHeroInfo::rolegrade() const {
  return rolegrade_;
}
inline void CSShowHeroInfo::set_rolegrade(::google::protobuf::uint32 value) {
  set_has_rolegrade();
  rolegrade_ = value;
}

// optional uint32 RoleRank = 5;
inline bool CSShowHeroInfo::has_rolerank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSShowHeroInfo::set_has_rolerank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSShowHeroInfo::clear_has_rolerank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSShowHeroInfo::clear_rolerank() {
  rolerank_ = 0u;
  clear_has_rolerank();
}
inline ::google::protobuf::uint32 CSShowHeroInfo::rolerank() const {
  return rolerank_;
}
inline void CSShowHeroInfo::set_rolerank(::google::protobuf::uint32 value) {
  set_has_rolerank();
  rolerank_ = value;
}

// optional uint32 RoleHeadType = 6;
inline bool CSShowHeroInfo::has_roleheadtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSShowHeroInfo::set_has_roleheadtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSShowHeroInfo::clear_has_roleheadtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSShowHeroInfo::clear_roleheadtype() {
  roleheadtype_ = 0u;
  clear_has_roleheadtype();
}
inline ::google::protobuf::uint32 CSShowHeroInfo::roleheadtype() const {
  return roleheadtype_;
}
inline void CSShowHeroInfo::set_roleheadtype(::google::protobuf::uint32 value) {
  set_has_roleheadtype();
  roleheadtype_ = value;
}

// optional string Name = 7;
inline bool CSShowHeroInfo::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSShowHeroInfo::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSShowHeroInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSShowHeroInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSShowHeroInfo::name() const {
  return *name_;
}
inline void CSShowHeroInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSShowHeroInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSShowHeroInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSShowHeroInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSShowHeroInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSShowHeroInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSShowHeroInfoList

// repeated .CSShowHeroInfo HeroInfoList = 1;
inline int CSShowHeroInfoList::heroinfolist_size() const {
  return heroinfolist_.size();
}
inline void CSShowHeroInfoList::clear_heroinfolist() {
  heroinfolist_.Clear();
}
inline const ::CSShowHeroInfo& CSShowHeroInfoList::heroinfolist(int index) const {
  return heroinfolist_.Get(index);
}
inline ::CSShowHeroInfo* CSShowHeroInfoList::mutable_heroinfolist(int index) {
  return heroinfolist_.Mutable(index);
}
inline ::CSShowHeroInfo* CSShowHeroInfoList::add_heroinfolist() {
  return heroinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSShowHeroInfo >&
CSShowHeroInfoList::heroinfolist() const {
  return heroinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSShowHeroInfo >*
CSShowHeroInfoList::mutable_heroinfolist() {
  return &heroinfolist_;
}

// -------------------------------------------------------------------

// CSFeiJiBagList

// repeated uint32 FeiJi = 1;
inline int CSFeiJiBagList::feiji_size() const {
  return feiji_.size();
}
inline void CSFeiJiBagList::clear_feiji() {
  feiji_.Clear();
}
inline ::google::protobuf::uint32 CSFeiJiBagList::feiji(int index) const {
  return feiji_.Get(index);
}
inline void CSFeiJiBagList::set_feiji(int index, ::google::protobuf::uint32 value) {
  feiji_.Set(index, value);
}
inline void CSFeiJiBagList::add_feiji(::google::protobuf::uint32 value) {
  feiji_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFeiJiBagList::feiji() const {
  return feiji_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFeiJiBagList::mutable_feiji() {
  return &feiji_;
}

// -------------------------------------------------------------------

// CSZhaDanBagList

// repeated uint32 ZhaDan = 1;
inline int CSZhaDanBagList::zhadan_size() const {
  return zhadan_.size();
}
inline void CSZhaDanBagList::clear_zhadan() {
  zhadan_.Clear();
}
inline ::google::protobuf::uint32 CSZhaDanBagList::zhadan(int index) const {
  return zhadan_.Get(index);
}
inline void CSZhaDanBagList::set_zhadan(int index, ::google::protobuf::uint32 value) {
  zhadan_.Set(index, value);
}
inline void CSZhaDanBagList::add_zhadan(::google::protobuf::uint32 value) {
  zhadan_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSZhaDanBagList::zhadan() const {
  return zhadan_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSZhaDanBagList::mutable_zhadan() {
  return &zhadan_;
}

// -------------------------------------------------------------------

// CSFeiJiDiPanBagList

// repeated uint32 FeiJiDiPan = 1;
inline int CSFeiJiDiPanBagList::feijidipan_size() const {
  return feijidipan_.size();
}
inline void CSFeiJiDiPanBagList::clear_feijidipan() {
  feijidipan_.Clear();
}
inline ::google::protobuf::uint32 CSFeiJiDiPanBagList::feijidipan(int index) const {
  return feijidipan_.Get(index);
}
inline void CSFeiJiDiPanBagList::set_feijidipan(int index, ::google::protobuf::uint32 value) {
  feijidipan_.Set(index, value);
}
inline void CSFeiJiDiPanBagList::add_feijidipan(::google::protobuf::uint32 value) {
  feijidipan_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFeiJiDiPanBagList::feijidipan() const {
  return feijidipan_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFeiJiDiPanBagList::mutable_feijidipan() {
  return &feijidipan_;
}

// -------------------------------------------------------------------

// CSFeiJiSkillOneBagList

// repeated uint32 FeiJiSkillOne = 1;
inline int CSFeiJiSkillOneBagList::feijiskillone_size() const {
  return feijiskillone_.size();
}
inline void CSFeiJiSkillOneBagList::clear_feijiskillone() {
  feijiskillone_.Clear();
}
inline ::google::protobuf::uint32 CSFeiJiSkillOneBagList::feijiskillone(int index) const {
  return feijiskillone_.Get(index);
}
inline void CSFeiJiSkillOneBagList::set_feijiskillone(int index, ::google::protobuf::uint32 value) {
  feijiskillone_.Set(index, value);
}
inline void CSFeiJiSkillOneBagList::add_feijiskillone(::google::protobuf::uint32 value) {
  feijiskillone_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFeiJiSkillOneBagList::feijiskillone() const {
  return feijiskillone_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFeiJiSkillOneBagList::mutable_feijiskillone() {
  return &feijiskillone_;
}

// -------------------------------------------------------------------

// CSFeiJiSkillTwoBagList

// repeated uint32 FeiJiSkillTwo = 1;
inline int CSFeiJiSkillTwoBagList::feijiskilltwo_size() const {
  return feijiskilltwo_.size();
}
inline void CSFeiJiSkillTwoBagList::clear_feijiskilltwo() {
  feijiskilltwo_.Clear();
}
inline ::google::protobuf::uint32 CSFeiJiSkillTwoBagList::feijiskilltwo(int index) const {
  return feijiskilltwo_.Get(index);
}
inline void CSFeiJiSkillTwoBagList::set_feijiskilltwo(int index, ::google::protobuf::uint32 value) {
  feijiskilltwo_.Set(index, value);
}
inline void CSFeiJiSkillTwoBagList::add_feijiskilltwo(::google::protobuf::uint32 value) {
  feijiskilltwo_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSFeiJiSkillTwoBagList::feijiskilltwo() const {
  return feijiskilltwo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSFeiJiSkillTwoBagList::mutable_feijiskilltwo() {
  return &feijiskilltwo_;
}

// -------------------------------------------------------------------

// CSEnterHeroShowRsp

// optional .CSShowHeroVipInfo ShowHeroVipInfo = 1;
inline bool CSEnterHeroShowRsp::has_showherovipinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_showherovipinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterHeroShowRsp::clear_has_showherovipinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterHeroShowRsp::clear_showherovipinfo() {
  if (showherovipinfo_ != NULL) showherovipinfo_->::CSShowHeroVipInfo::Clear();
  clear_has_showherovipinfo();
}
inline const ::CSShowHeroVipInfo& CSEnterHeroShowRsp::showherovipinfo() const {
  return showherovipinfo_ != NULL ? *showherovipinfo_ : *default_instance_->showherovipinfo_;
}
inline ::CSShowHeroVipInfo* CSEnterHeroShowRsp::mutable_showherovipinfo() {
  set_has_showherovipinfo();
  if (showherovipinfo_ == NULL) showherovipinfo_ = new ::CSShowHeroVipInfo;
  return showherovipinfo_;
}
inline ::CSShowHeroVipInfo* CSEnterHeroShowRsp::release_showherovipinfo() {
  clear_has_showherovipinfo();
  ::CSShowHeroVipInfo* temp = showherovipinfo_;
  showherovipinfo_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_showherovipinfo(::CSShowHeroVipInfo* showherovipinfo) {
  delete showherovipinfo_;
  showherovipinfo_ = showherovipinfo;
  if (showherovipinfo) {
    set_has_showherovipinfo();
  } else {
    clear_has_showherovipinfo();
  }
}

// optional .CSShowHeroInfoList HeroShow = 2;
inline bool CSEnterHeroShowRsp::has_heroshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_heroshow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterHeroShowRsp::clear_has_heroshow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterHeroShowRsp::clear_heroshow() {
  if (heroshow_ != NULL) heroshow_->::CSShowHeroInfoList::Clear();
  clear_has_heroshow();
}
inline const ::CSShowHeroInfoList& CSEnterHeroShowRsp::heroshow() const {
  return heroshow_ != NULL ? *heroshow_ : *default_instance_->heroshow_;
}
inline ::CSShowHeroInfoList* CSEnterHeroShowRsp::mutable_heroshow() {
  set_has_heroshow();
  if (heroshow_ == NULL) heroshow_ = new ::CSShowHeroInfoList;
  return heroshow_;
}
inline ::CSShowHeroInfoList* CSEnterHeroShowRsp::release_heroshow() {
  clear_has_heroshow();
  ::CSShowHeroInfoList* temp = heroshow_;
  heroshow_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_heroshow(::CSShowHeroInfoList* heroshow) {
  delete heroshow_;
  heroshow_ = heroshow;
  if (heroshow) {
    set_has_heroshow();
  } else {
    clear_has_heroshow();
  }
}

// optional .CSFeiJiBagList FeiJiBagList = 3;
inline bool CSEnterHeroShowRsp::has_feijibaglist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_feijibaglist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEnterHeroShowRsp::clear_has_feijibaglist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEnterHeroShowRsp::clear_feijibaglist() {
  if (feijibaglist_ != NULL) feijibaglist_->::CSFeiJiBagList::Clear();
  clear_has_feijibaglist();
}
inline const ::CSFeiJiBagList& CSEnterHeroShowRsp::feijibaglist() const {
  return feijibaglist_ != NULL ? *feijibaglist_ : *default_instance_->feijibaglist_;
}
inline ::CSFeiJiBagList* CSEnterHeroShowRsp::mutable_feijibaglist() {
  set_has_feijibaglist();
  if (feijibaglist_ == NULL) feijibaglist_ = new ::CSFeiJiBagList;
  return feijibaglist_;
}
inline ::CSFeiJiBagList* CSEnterHeroShowRsp::release_feijibaglist() {
  clear_has_feijibaglist();
  ::CSFeiJiBagList* temp = feijibaglist_;
  feijibaglist_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_feijibaglist(::CSFeiJiBagList* feijibaglist) {
  delete feijibaglist_;
  feijibaglist_ = feijibaglist;
  if (feijibaglist) {
    set_has_feijibaglist();
  } else {
    clear_has_feijibaglist();
  }
}

// optional .CSZhaDanBagList ZhaDanBagList = 4;
inline bool CSEnterHeroShowRsp::has_zhadanbaglist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_zhadanbaglist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEnterHeroShowRsp::clear_has_zhadanbaglist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEnterHeroShowRsp::clear_zhadanbaglist() {
  if (zhadanbaglist_ != NULL) zhadanbaglist_->::CSZhaDanBagList::Clear();
  clear_has_zhadanbaglist();
}
inline const ::CSZhaDanBagList& CSEnterHeroShowRsp::zhadanbaglist() const {
  return zhadanbaglist_ != NULL ? *zhadanbaglist_ : *default_instance_->zhadanbaglist_;
}
inline ::CSZhaDanBagList* CSEnterHeroShowRsp::mutable_zhadanbaglist() {
  set_has_zhadanbaglist();
  if (zhadanbaglist_ == NULL) zhadanbaglist_ = new ::CSZhaDanBagList;
  return zhadanbaglist_;
}
inline ::CSZhaDanBagList* CSEnterHeroShowRsp::release_zhadanbaglist() {
  clear_has_zhadanbaglist();
  ::CSZhaDanBagList* temp = zhadanbaglist_;
  zhadanbaglist_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_zhadanbaglist(::CSZhaDanBagList* zhadanbaglist) {
  delete zhadanbaglist_;
  zhadanbaglist_ = zhadanbaglist;
  if (zhadanbaglist) {
    set_has_zhadanbaglist();
  } else {
    clear_has_zhadanbaglist();
  }
}

// optional .CSFeiJiDiPanBagList FeiJiDiPanBagList = 5;
inline bool CSEnterHeroShowRsp::has_feijidipanbaglist() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_feijidipanbaglist() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSEnterHeroShowRsp::clear_has_feijidipanbaglist() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSEnterHeroShowRsp::clear_feijidipanbaglist() {
  if (feijidipanbaglist_ != NULL) feijidipanbaglist_->::CSFeiJiDiPanBagList::Clear();
  clear_has_feijidipanbaglist();
}
inline const ::CSFeiJiDiPanBagList& CSEnterHeroShowRsp::feijidipanbaglist() const {
  return feijidipanbaglist_ != NULL ? *feijidipanbaglist_ : *default_instance_->feijidipanbaglist_;
}
inline ::CSFeiJiDiPanBagList* CSEnterHeroShowRsp::mutable_feijidipanbaglist() {
  set_has_feijidipanbaglist();
  if (feijidipanbaglist_ == NULL) feijidipanbaglist_ = new ::CSFeiJiDiPanBagList;
  return feijidipanbaglist_;
}
inline ::CSFeiJiDiPanBagList* CSEnterHeroShowRsp::release_feijidipanbaglist() {
  clear_has_feijidipanbaglist();
  ::CSFeiJiDiPanBagList* temp = feijidipanbaglist_;
  feijidipanbaglist_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_feijidipanbaglist(::CSFeiJiDiPanBagList* feijidipanbaglist) {
  delete feijidipanbaglist_;
  feijidipanbaglist_ = feijidipanbaglist;
  if (feijidipanbaglist) {
    set_has_feijidipanbaglist();
  } else {
    clear_has_feijidipanbaglist();
  }
}

// optional .CSFeiJiSkillOneBagList FeiJiSkillOneBagList = 6;
inline bool CSEnterHeroShowRsp::has_feijiskillonebaglist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_feijiskillonebaglist() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSEnterHeroShowRsp::clear_has_feijiskillonebaglist() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSEnterHeroShowRsp::clear_feijiskillonebaglist() {
  if (feijiskillonebaglist_ != NULL) feijiskillonebaglist_->::CSFeiJiSkillOneBagList::Clear();
  clear_has_feijiskillonebaglist();
}
inline const ::CSFeiJiSkillOneBagList& CSEnterHeroShowRsp::feijiskillonebaglist() const {
  return feijiskillonebaglist_ != NULL ? *feijiskillonebaglist_ : *default_instance_->feijiskillonebaglist_;
}
inline ::CSFeiJiSkillOneBagList* CSEnterHeroShowRsp::mutable_feijiskillonebaglist() {
  set_has_feijiskillonebaglist();
  if (feijiskillonebaglist_ == NULL) feijiskillonebaglist_ = new ::CSFeiJiSkillOneBagList;
  return feijiskillonebaglist_;
}
inline ::CSFeiJiSkillOneBagList* CSEnterHeroShowRsp::release_feijiskillonebaglist() {
  clear_has_feijiskillonebaglist();
  ::CSFeiJiSkillOneBagList* temp = feijiskillonebaglist_;
  feijiskillonebaglist_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_feijiskillonebaglist(::CSFeiJiSkillOneBagList* feijiskillonebaglist) {
  delete feijiskillonebaglist_;
  feijiskillonebaglist_ = feijiskillonebaglist;
  if (feijiskillonebaglist) {
    set_has_feijiskillonebaglist();
  } else {
    clear_has_feijiskillonebaglist();
  }
}

// optional .CSFeiJiSkillTwoBagList FeiJiSkillTwoBagList = 7;
inline bool CSEnterHeroShowRsp::has_feijiskilltwobaglist() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSEnterHeroShowRsp::set_has_feijiskilltwobaglist() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSEnterHeroShowRsp::clear_has_feijiskilltwobaglist() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSEnterHeroShowRsp::clear_feijiskilltwobaglist() {
  if (feijiskilltwobaglist_ != NULL) feijiskilltwobaglist_->::CSFeiJiSkillTwoBagList::Clear();
  clear_has_feijiskilltwobaglist();
}
inline const ::CSFeiJiSkillTwoBagList& CSEnterHeroShowRsp::feijiskilltwobaglist() const {
  return feijiskilltwobaglist_ != NULL ? *feijiskilltwobaglist_ : *default_instance_->feijiskilltwobaglist_;
}
inline ::CSFeiJiSkillTwoBagList* CSEnterHeroShowRsp::mutable_feijiskilltwobaglist() {
  set_has_feijiskilltwobaglist();
  if (feijiskilltwobaglist_ == NULL) feijiskilltwobaglist_ = new ::CSFeiJiSkillTwoBagList;
  return feijiskilltwobaglist_;
}
inline ::CSFeiJiSkillTwoBagList* CSEnterHeroShowRsp::release_feijiskilltwobaglist() {
  clear_has_feijiskilltwobaglist();
  ::CSFeiJiSkillTwoBagList* temp = feijiskilltwobaglist_;
  feijiskilltwobaglist_ = NULL;
  return temp;
}
inline void CSEnterHeroShowRsp::set_allocated_feijiskilltwobaglist(::CSFeiJiSkillTwoBagList* feijiskilltwobaglist) {
  delete feijiskilltwobaglist_;
  feijiskilltwobaglist_ = feijiskilltwobaglist;
  if (feijiskilltwobaglist) {
    set_has_feijiskilltwobaglist();
  } else {
    clear_has_feijiskilltwobaglist();
  }
}

// -------------------------------------------------------------------

// CSEnterHeroShowBagReq

// optional uint64 Uid = 1;
inline bool CSEnterHeroShowBagReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterHeroShowBagReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterHeroShowBagReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterHeroShowBagReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSEnterHeroShowBagReq::uid() const {
  return uid_;
}
inline void CSEnterHeroShowBagReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 DecorateBagType = 2;
inline bool CSEnterHeroShowBagReq::has_decoratebagtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterHeroShowBagReq::set_has_decoratebagtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterHeroShowBagReq::clear_has_decoratebagtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterHeroShowBagReq::clear_decoratebagtype() {
  decoratebagtype_ = 0u;
  clear_has_decoratebagtype();
}
inline ::google::protobuf::uint32 CSEnterHeroShowBagReq::decoratebagtype() const {
  return decoratebagtype_;
}
inline void CSEnterHeroShowBagReq::set_decoratebagtype(::google::protobuf::uint32 value) {
  set_has_decoratebagtype();
  decoratebagtype_ = value;
}

// optional uint32 Id = 3;
inline bool CSEnterHeroShowBagReq::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEnterHeroShowBagReq::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEnterHeroShowBagReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEnterHeroShowBagReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSEnterHeroShowBagReq::id() const {
  return id_;
}
inline void CSEnterHeroShowBagReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSSendUserHeroShowRsp

// optional uint64 Uid = 1;
inline bool CSSendUserHeroShowRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSendUserHeroShowRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSendUserHeroShowRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSendUserHeroShowRsp::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSSendUserHeroShowRsp::uid() const {
  return uid_;
}
inline void CSSendUserHeroShowRsp::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 ZhadanId = 2;
inline bool CSSendUserHeroShowRsp::has_zhadanid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSendUserHeroShowRsp::set_has_zhadanid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSendUserHeroShowRsp::clear_has_zhadanid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSendUserHeroShowRsp::clear_zhadanid() {
  zhadanid_ = 0u;
  clear_has_zhadanid();
}
inline ::google::protobuf::uint32 CSSendUserHeroShowRsp::zhadanid() const {
  return zhadanid_;
}
inline void CSSendUserHeroShowRsp::set_zhadanid(::google::protobuf::uint32 value) {
  set_has_zhadanid();
  zhadanid_ = value;
}

// -------------------------------------------------------------------

// CSShowZhaDanBagReq

// optional uint64 Uid = 1;
inline bool CSShowZhaDanBagReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowZhaDanBagReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowZhaDanBagReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowZhaDanBagReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSShowZhaDanBagReq::uid() const {
  return uid_;
}
inline void CSShowZhaDanBagReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 ZhadanId = 2;
inline bool CSShowZhaDanBagReq::has_zhadanid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSShowZhaDanBagReq::set_has_zhadanid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSShowZhaDanBagReq::clear_has_zhadanid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSShowZhaDanBagReq::clear_zhadanid() {
  zhadanid_ = 0u;
  clear_has_zhadanid();
}
inline ::google::protobuf::uint32 CSShowZhaDanBagReq::zhadanid() const {
  return zhadanid_;
}
inline void CSShowZhaDanBagReq::set_zhadanid(::google::protobuf::uint32 value) {
  set_has_zhadanid();
  zhadanid_ = value;
}

// -------------------------------------------------------------------

// CSShowZhaDanBagRsp

// optional uint32 ZhadanId = 1;
inline bool CSShowZhaDanBagRsp::has_zhadanid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSShowZhaDanBagRsp::set_has_zhadanid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSShowZhaDanBagRsp::clear_has_zhadanid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSShowZhaDanBagRsp::clear_zhadanid() {
  zhadanid_ = 0u;
  clear_has_zhadanid();
}
inline ::google::protobuf::uint32 CSShowZhaDanBagRsp::zhadanid() const {
  return zhadanid_;
}
inline void CSShowZhaDanBagRsp::set_zhadanid(::google::protobuf::uint32 value) {
  set_has_zhadanid();
  zhadanid_ = value;
}

// -------------------------------------------------------------------

// CSMateReqParam

// optional .CSMateFetchReq MateFetchReq = 1;
inline bool CSMateReqParam::has_matefetchreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMateReqParam::set_has_matefetchreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMateReqParam::clear_has_matefetchreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMateReqParam::clear_matefetchreq() {
  if (matefetchreq_ != NULL) matefetchreq_->::CSMateFetchReq::Clear();
  clear_has_matefetchreq();
}
inline const ::CSMateFetchReq& CSMateReqParam::matefetchreq() const {
  return matefetchreq_ != NULL ? *matefetchreq_ : *default_instance_->matefetchreq_;
}
inline ::CSMateFetchReq* CSMateReqParam::mutable_matefetchreq() {
  set_has_matefetchreq();
  if (matefetchreq_ == NULL) matefetchreq_ = new ::CSMateFetchReq;
  return matefetchreq_;
}
inline ::CSMateFetchReq* CSMateReqParam::release_matefetchreq() {
  clear_has_matefetchreq();
  ::CSMateFetchReq* temp = matefetchreq_;
  matefetchreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_matefetchreq(::CSMateFetchReq* matefetchreq) {
  delete matefetchreq_;
  matefetchreq_ = matefetchreq;
  if (matefetchreq) {
    set_has_matefetchreq();
  } else {
    clear_has_matefetchreq();
  }
}

// optional .CSQuitMateFetchReq QuitMateFetchReq = 2;
inline bool CSMateReqParam::has_quitmatefetchreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMateReqParam::set_has_quitmatefetchreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMateReqParam::clear_has_quitmatefetchreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMateReqParam::clear_quitmatefetchreq() {
  if (quitmatefetchreq_ != NULL) quitmatefetchreq_->::CSQuitMateFetchReq::Clear();
  clear_has_quitmatefetchreq();
}
inline const ::CSQuitMateFetchReq& CSMateReqParam::quitmatefetchreq() const {
  return quitmatefetchreq_ != NULL ? *quitmatefetchreq_ : *default_instance_->quitmatefetchreq_;
}
inline ::CSQuitMateFetchReq* CSMateReqParam::mutable_quitmatefetchreq() {
  set_has_quitmatefetchreq();
  if (quitmatefetchreq_ == NULL) quitmatefetchreq_ = new ::CSQuitMateFetchReq;
  return quitmatefetchreq_;
}
inline ::CSQuitMateFetchReq* CSMateReqParam::release_quitmatefetchreq() {
  clear_has_quitmatefetchreq();
  ::CSQuitMateFetchReq* temp = quitmatefetchreq_;
  quitmatefetchreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_quitmatefetchreq(::CSQuitMateFetchReq* quitmatefetchreq) {
  delete quitmatefetchreq_;
  quitmatefetchreq_ = quitmatefetchreq;
  if (quitmatefetchreq) {
    set_has_quitmatefetchreq();
  } else {
    clear_has_quitmatefetchreq();
  }
}

// optional .CSNotButtonMateFetchReq NotButtonMateFetchReq = 3;
inline bool CSMateReqParam::has_notbuttonmatefetchreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMateReqParam::set_has_notbuttonmatefetchreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMateReqParam::clear_has_notbuttonmatefetchreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMateReqParam::clear_notbuttonmatefetchreq() {
  if (notbuttonmatefetchreq_ != NULL) notbuttonmatefetchreq_->::CSNotButtonMateFetchReq::Clear();
  clear_has_notbuttonmatefetchreq();
}
inline const ::CSNotButtonMateFetchReq& CSMateReqParam::notbuttonmatefetchreq() const {
  return notbuttonmatefetchreq_ != NULL ? *notbuttonmatefetchreq_ : *default_instance_->notbuttonmatefetchreq_;
}
inline ::CSNotButtonMateFetchReq* CSMateReqParam::mutable_notbuttonmatefetchreq() {
  set_has_notbuttonmatefetchreq();
  if (notbuttonmatefetchreq_ == NULL) notbuttonmatefetchreq_ = new ::CSNotButtonMateFetchReq;
  return notbuttonmatefetchreq_;
}
inline ::CSNotButtonMateFetchReq* CSMateReqParam::release_notbuttonmatefetchreq() {
  clear_has_notbuttonmatefetchreq();
  ::CSNotButtonMateFetchReq* temp = notbuttonmatefetchreq_;
  notbuttonmatefetchreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_notbuttonmatefetchreq(::CSNotButtonMateFetchReq* notbuttonmatefetchreq) {
  delete notbuttonmatefetchreq_;
  notbuttonmatefetchreq_ = notbuttonmatefetchreq;
  if (notbuttonmatefetchreq) {
    set_has_notbuttonmatefetchreq();
  } else {
    clear_has_notbuttonmatefetchreq();
  }
}

// optional .CSSuccessButtonMateFetchReq SuccessButtonMateFetchReq = 4;
inline bool CSMateReqParam::has_successbuttonmatefetchreq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMateReqParam::set_has_successbuttonmatefetchreq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMateReqParam::clear_has_successbuttonmatefetchreq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMateReqParam::clear_successbuttonmatefetchreq() {
  if (successbuttonmatefetchreq_ != NULL) successbuttonmatefetchreq_->::CSSuccessButtonMateFetchReq::Clear();
  clear_has_successbuttonmatefetchreq();
}
inline const ::CSSuccessButtonMateFetchReq& CSMateReqParam::successbuttonmatefetchreq() const {
  return successbuttonmatefetchreq_ != NULL ? *successbuttonmatefetchreq_ : *default_instance_->successbuttonmatefetchreq_;
}
inline ::CSSuccessButtonMateFetchReq* CSMateReqParam::mutable_successbuttonmatefetchreq() {
  set_has_successbuttonmatefetchreq();
  if (successbuttonmatefetchreq_ == NULL) successbuttonmatefetchreq_ = new ::CSSuccessButtonMateFetchReq;
  return successbuttonmatefetchreq_;
}
inline ::CSSuccessButtonMateFetchReq* CSMateReqParam::release_successbuttonmatefetchreq() {
  clear_has_successbuttonmatefetchreq();
  ::CSSuccessButtonMateFetchReq* temp = successbuttonmatefetchreq_;
  successbuttonmatefetchreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_successbuttonmatefetchreq(::CSSuccessButtonMateFetchReq* successbuttonmatefetchreq) {
  delete successbuttonmatefetchreq_;
  successbuttonmatefetchreq_ = successbuttonmatefetchreq;
  if (successbuttonmatefetchreq) {
    set_has_successbuttonmatefetchreq();
  } else {
    clear_has_successbuttonmatefetchreq();
  }
}

// optional .CSEnterHeroShowBagReq EnterHeroShowBagReq = 5;
inline bool CSMateReqParam::has_enterheroshowbagreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMateReqParam::set_has_enterheroshowbagreq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMateReqParam::clear_has_enterheroshowbagreq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMateReqParam::clear_enterheroshowbagreq() {
  if (enterheroshowbagreq_ != NULL) enterheroshowbagreq_->::CSEnterHeroShowBagReq::Clear();
  clear_has_enterheroshowbagreq();
}
inline const ::CSEnterHeroShowBagReq& CSMateReqParam::enterheroshowbagreq() const {
  return enterheroshowbagreq_ != NULL ? *enterheroshowbagreq_ : *default_instance_->enterheroshowbagreq_;
}
inline ::CSEnterHeroShowBagReq* CSMateReqParam::mutable_enterheroshowbagreq() {
  set_has_enterheroshowbagreq();
  if (enterheroshowbagreq_ == NULL) enterheroshowbagreq_ = new ::CSEnterHeroShowBagReq;
  return enterheroshowbagreq_;
}
inline ::CSEnterHeroShowBagReq* CSMateReqParam::release_enterheroshowbagreq() {
  clear_has_enterheroshowbagreq();
  ::CSEnterHeroShowBagReq* temp = enterheroshowbagreq_;
  enterheroshowbagreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_enterheroshowbagreq(::CSEnterHeroShowBagReq* enterheroshowbagreq) {
  delete enterheroshowbagreq_;
  enterheroshowbagreq_ = enterheroshowbagreq;
  if (enterheroshowbagreq) {
    set_has_enterheroshowbagreq();
  } else {
    clear_has_enterheroshowbagreq();
  }
}

// optional .CSShowZhaDanBagReq ShowZhaDanBagReq = 6;
inline bool CSMateReqParam::has_showzhadanbagreq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMateReqParam::set_has_showzhadanbagreq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMateReqParam::clear_has_showzhadanbagreq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMateReqParam::clear_showzhadanbagreq() {
  if (showzhadanbagreq_ != NULL) showzhadanbagreq_->::CSShowZhaDanBagReq::Clear();
  clear_has_showzhadanbagreq();
}
inline const ::CSShowZhaDanBagReq& CSMateReqParam::showzhadanbagreq() const {
  return showzhadanbagreq_ != NULL ? *showzhadanbagreq_ : *default_instance_->showzhadanbagreq_;
}
inline ::CSShowZhaDanBagReq* CSMateReqParam::mutable_showzhadanbagreq() {
  set_has_showzhadanbagreq();
  if (showzhadanbagreq_ == NULL) showzhadanbagreq_ = new ::CSShowZhaDanBagReq;
  return showzhadanbagreq_;
}
inline ::CSShowZhaDanBagReq* CSMateReqParam::release_showzhadanbagreq() {
  clear_has_showzhadanbagreq();
  ::CSShowZhaDanBagReq* temp = showzhadanbagreq_;
  showzhadanbagreq_ = NULL;
  return temp;
}
inline void CSMateReqParam::set_allocated_showzhadanbagreq(::CSShowZhaDanBagReq* showzhadanbagreq) {
  delete showzhadanbagreq_;
  showzhadanbagreq_ = showzhadanbagreq;
  if (showzhadanbagreq) {
    set_has_showzhadanbagreq();
  } else {
    clear_has_showzhadanbagreq();
  }
}

// -------------------------------------------------------------------

// CSMateRspParam

// optional .CSEnterHeroShowRsp EnterHeroShowRsp = 1;
inline bool CSMateRspParam::has_enterheroshowrsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMateRspParam::set_has_enterheroshowrsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMateRspParam::clear_has_enterheroshowrsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMateRspParam::clear_enterheroshowrsp() {
  if (enterheroshowrsp_ != NULL) enterheroshowrsp_->::CSEnterHeroShowRsp::Clear();
  clear_has_enterheroshowrsp();
}
inline const ::CSEnterHeroShowRsp& CSMateRspParam::enterheroshowrsp() const {
  return enterheroshowrsp_ != NULL ? *enterheroshowrsp_ : *default_instance_->enterheroshowrsp_;
}
inline ::CSEnterHeroShowRsp* CSMateRspParam::mutable_enterheroshowrsp() {
  set_has_enterheroshowrsp();
  if (enterheroshowrsp_ == NULL) enterheroshowrsp_ = new ::CSEnterHeroShowRsp;
  return enterheroshowrsp_;
}
inline ::CSEnterHeroShowRsp* CSMateRspParam::release_enterheroshowrsp() {
  clear_has_enterheroshowrsp();
  ::CSEnterHeroShowRsp* temp = enterheroshowrsp_;
  enterheroshowrsp_ = NULL;
  return temp;
}
inline void CSMateRspParam::set_allocated_enterheroshowrsp(::CSEnterHeroShowRsp* enterheroshowrsp) {
  delete enterheroshowrsp_;
  enterheroshowrsp_ = enterheroshowrsp;
  if (enterheroshowrsp) {
    set_has_enterheroshowrsp();
  } else {
    clear_has_enterheroshowrsp();
  }
}

// optional .CSSendUserHeroShowRsp SendUserHeroShowRsp = 2;
inline bool CSMateRspParam::has_senduserheroshowrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMateRspParam::set_has_senduserheroshowrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMateRspParam::clear_has_senduserheroshowrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMateRspParam::clear_senduserheroshowrsp() {
  if (senduserheroshowrsp_ != NULL) senduserheroshowrsp_->::CSSendUserHeroShowRsp::Clear();
  clear_has_senduserheroshowrsp();
}
inline const ::CSSendUserHeroShowRsp& CSMateRspParam::senduserheroshowrsp() const {
  return senduserheroshowrsp_ != NULL ? *senduserheroshowrsp_ : *default_instance_->senduserheroshowrsp_;
}
inline ::CSSendUserHeroShowRsp* CSMateRspParam::mutable_senduserheroshowrsp() {
  set_has_senduserheroshowrsp();
  if (senduserheroshowrsp_ == NULL) senduserheroshowrsp_ = new ::CSSendUserHeroShowRsp;
  return senduserheroshowrsp_;
}
inline ::CSSendUserHeroShowRsp* CSMateRspParam::release_senduserheroshowrsp() {
  clear_has_senduserheroshowrsp();
  ::CSSendUserHeroShowRsp* temp = senduserheroshowrsp_;
  senduserheroshowrsp_ = NULL;
  return temp;
}
inline void CSMateRspParam::set_allocated_senduserheroshowrsp(::CSSendUserHeroShowRsp* senduserheroshowrsp) {
  delete senduserheroshowrsp_;
  senduserheroshowrsp_ = senduserheroshowrsp;
  if (senduserheroshowrsp) {
    set_has_senduserheroshowrsp();
  } else {
    clear_has_senduserheroshowrsp();
  }
}

// optional .CSShowZhaDanBagRsp ShowZhaDanBagRsp = 3;
inline bool CSMateRspParam::has_showzhadanbagrsp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMateRspParam::set_has_showzhadanbagrsp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMateRspParam::clear_has_showzhadanbagrsp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMateRspParam::clear_showzhadanbagrsp() {
  if (showzhadanbagrsp_ != NULL) showzhadanbagrsp_->::CSShowZhaDanBagRsp::Clear();
  clear_has_showzhadanbagrsp();
}
inline const ::CSShowZhaDanBagRsp& CSMateRspParam::showzhadanbagrsp() const {
  return showzhadanbagrsp_ != NULL ? *showzhadanbagrsp_ : *default_instance_->showzhadanbagrsp_;
}
inline ::CSShowZhaDanBagRsp* CSMateRspParam::mutable_showzhadanbagrsp() {
  set_has_showzhadanbagrsp();
  if (showzhadanbagrsp_ == NULL) showzhadanbagrsp_ = new ::CSShowZhaDanBagRsp;
  return showzhadanbagrsp_;
}
inline ::CSShowZhaDanBagRsp* CSMateRspParam::release_showzhadanbagrsp() {
  clear_has_showzhadanbagrsp();
  ::CSShowZhaDanBagRsp* temp = showzhadanbagrsp_;
  showzhadanbagrsp_ = NULL;
  return temp;
}
inline void CSMateRspParam::set_allocated_showzhadanbagrsp(::CSShowZhaDanBagRsp* showzhadanbagrsp) {
  delete showzhadanbagrsp_;
  showzhadanbagrsp_ = showzhadanbagrsp;
  if (showzhadanbagrsp) {
    set_has_showzhadanbagrsp();
  } else {
    clear_has_showzhadanbagrsp();
  }
}

// -------------------------------------------------------------------

// CSMateReq

// required .CSMateCmd cmd = 1;
inline bool CSMateReq::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMateReq::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMateReq::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMateReq::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSMateCmd CSMateReq::cmd() const {
  return static_cast< ::CSMateCmd >(cmd_);
}
inline void CSMateReq::set_cmd(::CSMateCmd value) {
  assert(::CSMateCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSMateReqParam reqParam = 2;
inline bool CSMateReq::has_reqparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMateReq::set_has_reqparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMateReq::clear_has_reqparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMateReq::clear_reqparam() {
  if (reqparam_ != NULL) reqparam_->::CSMateReqParam::Clear();
  clear_has_reqparam();
}
inline const ::CSMateReqParam& CSMateReq::reqparam() const {
  return reqparam_ != NULL ? *reqparam_ : *default_instance_->reqparam_;
}
inline ::CSMateReqParam* CSMateReq::mutable_reqparam() {
  set_has_reqparam();
  if (reqparam_ == NULL) reqparam_ = new ::CSMateReqParam;
  return reqparam_;
}
inline ::CSMateReqParam* CSMateReq::release_reqparam() {
  clear_has_reqparam();
  ::CSMateReqParam* temp = reqparam_;
  reqparam_ = NULL;
  return temp;
}
inline void CSMateReq::set_allocated_reqparam(::CSMateReqParam* reqparam) {
  delete reqparam_;
  reqparam_ = reqparam;
  if (reqparam) {
    set_has_reqparam();
  } else {
    clear_has_reqparam();
  }
}

// -------------------------------------------------------------------

// CSMateRsp

// optional int32 result = 1;
inline bool CSMateRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMateRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMateRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMateRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CSMateRsp::result() const {
  return result_;
}
inline void CSMateRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .CSMateCmd cmd = 2;
inline bool CSMateRsp::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMateRsp::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMateRsp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMateRsp::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::CSMateCmd CSMateRsp::cmd() const {
  return static_cast< ::CSMateCmd >(cmd_);
}
inline void CSMateRsp::set_cmd(::CSMateCmd value) {
  assert(::CSMateCmd_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// optional .CSMateRspParam rspParam = 3;
inline bool CSMateRsp::has_rspparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMateRsp::set_has_rspparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMateRsp::clear_has_rspparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMateRsp::clear_rspparam() {
  if (rspparam_ != NULL) rspparam_->::CSMateRspParam::Clear();
  clear_has_rspparam();
}
inline const ::CSMateRspParam& CSMateRsp::rspparam() const {
  return rspparam_ != NULL ? *rspparam_ : *default_instance_->rspparam_;
}
inline ::CSMateRspParam* CSMateRsp::mutable_rspparam() {
  set_has_rspparam();
  if (rspparam_ == NULL) rspparam_ = new ::CSMateRspParam;
  return rspparam_;
}
inline ::CSMateRspParam* CSMateRsp::release_rspparam() {
  clear_has_rspparam();
  ::CSMateRspParam* temp = rspparam_;
  rspparam_ = NULL;
  return temp;
}
inline void CSMateRsp::set_allocated_rspparam(::CSMateRspParam* rspparam) {
  delete rspparam_;
  rspparam_ = rspparam;
  if (rspparam) {
    set_has_rspparam();
  } else {
    clear_has_rspparam();
  }
}

// -------------------------------------------------------------------

// CSMsgBody

// optional .CSRegisterLoginReq RegisterLoginReq = 1;
inline bool CSMsgBody::has_registerloginreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgBody::set_has_registerloginreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgBody::clear_has_registerloginreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgBody::clear_registerloginreq() {
  if (registerloginreq_ != NULL) registerloginreq_->::CSRegisterLoginReq::Clear();
  clear_has_registerloginreq();
}
inline const ::CSRegisterLoginReq& CSMsgBody::registerloginreq() const {
  return registerloginreq_ != NULL ? *registerloginreq_ : *default_instance_->registerloginreq_;
}
inline ::CSRegisterLoginReq* CSMsgBody::mutable_registerloginreq() {
  set_has_registerloginreq();
  if (registerloginreq_ == NULL) registerloginreq_ = new ::CSRegisterLoginReq;
  return registerloginreq_;
}
inline ::CSRegisterLoginReq* CSMsgBody::release_registerloginreq() {
  clear_has_registerloginreq();
  ::CSRegisterLoginReq* temp = registerloginreq_;
  registerloginreq_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_registerloginreq(::CSRegisterLoginReq* registerloginreq) {
  delete registerloginreq_;
  registerloginreq_ = registerloginreq;
  if (registerloginreq) {
    set_has_registerloginreq();
  } else {
    clear_has_registerloginreq();
  }
}

// optional .CSRegisterLoginRsp RegisterLoginRsp = 2;
inline bool CSMsgBody::has_registerloginrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgBody::set_has_registerloginrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgBody::clear_has_registerloginrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgBody::clear_registerloginrsp() {
  if (registerloginrsp_ != NULL) registerloginrsp_->::CSRegisterLoginRsp::Clear();
  clear_has_registerloginrsp();
}
inline const ::CSRegisterLoginRsp& CSMsgBody::registerloginrsp() const {
  return registerloginrsp_ != NULL ? *registerloginrsp_ : *default_instance_->registerloginrsp_;
}
inline ::CSRegisterLoginRsp* CSMsgBody::mutable_registerloginrsp() {
  set_has_registerloginrsp();
  if (registerloginrsp_ == NULL) registerloginrsp_ = new ::CSRegisterLoginRsp;
  return registerloginrsp_;
}
inline ::CSRegisterLoginRsp* CSMsgBody::release_registerloginrsp() {
  clear_has_registerloginrsp();
  ::CSRegisterLoginRsp* temp = registerloginrsp_;
  registerloginrsp_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_registerloginrsp(::CSRegisterLoginRsp* registerloginrsp) {
  delete registerloginrsp_;
  registerloginrsp_ = registerloginrsp;
  if (registerloginrsp) {
    set_has_registerloginrsp();
  } else {
    clear_has_registerloginrsp();
  }
}

// optional .CSBagReq BagReq = 3;
inline bool CSMsgBody::has_bagreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMsgBody::set_has_bagreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMsgBody::clear_has_bagreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMsgBody::clear_bagreq() {
  if (bagreq_ != NULL) bagreq_->::CSBagReq::Clear();
  clear_has_bagreq();
}
inline const ::CSBagReq& CSMsgBody::bagreq() const {
  return bagreq_ != NULL ? *bagreq_ : *default_instance_->bagreq_;
}
inline ::CSBagReq* CSMsgBody::mutable_bagreq() {
  set_has_bagreq();
  if (bagreq_ == NULL) bagreq_ = new ::CSBagReq;
  return bagreq_;
}
inline ::CSBagReq* CSMsgBody::release_bagreq() {
  clear_has_bagreq();
  ::CSBagReq* temp = bagreq_;
  bagreq_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_bagreq(::CSBagReq* bagreq) {
  delete bagreq_;
  bagreq_ = bagreq;
  if (bagreq) {
    set_has_bagreq();
  } else {
    clear_has_bagreq();
  }
}

// optional .CSBagRsp BagRsp = 4;
inline bool CSMsgBody::has_bagrsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMsgBody::set_has_bagrsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMsgBody::clear_has_bagrsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMsgBody::clear_bagrsp() {
  if (bagrsp_ != NULL) bagrsp_->::CSBagRsp::Clear();
  clear_has_bagrsp();
}
inline const ::CSBagRsp& CSMsgBody::bagrsp() const {
  return bagrsp_ != NULL ? *bagrsp_ : *default_instance_->bagrsp_;
}
inline ::CSBagRsp* CSMsgBody::mutable_bagrsp() {
  set_has_bagrsp();
  if (bagrsp_ == NULL) bagrsp_ = new ::CSBagRsp;
  return bagrsp_;
}
inline ::CSBagRsp* CSMsgBody::release_bagrsp() {
  clear_has_bagrsp();
  ::CSBagRsp* temp = bagrsp_;
  bagrsp_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_bagrsp(::CSBagRsp* bagrsp) {
  delete bagrsp_;
  bagrsp_ = bagrsp;
  if (bagrsp) {
    set_has_bagrsp();
  } else {
    clear_has_bagrsp();
  }
}

// optional .CSDecorateBagReq DecorateBagReq = 5;
inline bool CSMsgBody::has_decoratebagreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMsgBody::set_has_decoratebagreq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMsgBody::clear_has_decoratebagreq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMsgBody::clear_decoratebagreq() {
  if (decoratebagreq_ != NULL) decoratebagreq_->::CSDecorateBagReq::Clear();
  clear_has_decoratebagreq();
}
inline const ::CSDecorateBagReq& CSMsgBody::decoratebagreq() const {
  return decoratebagreq_ != NULL ? *decoratebagreq_ : *default_instance_->decoratebagreq_;
}
inline ::CSDecorateBagReq* CSMsgBody::mutable_decoratebagreq() {
  set_has_decoratebagreq();
  if (decoratebagreq_ == NULL) decoratebagreq_ = new ::CSDecorateBagReq;
  return decoratebagreq_;
}
inline ::CSDecorateBagReq* CSMsgBody::release_decoratebagreq() {
  clear_has_decoratebagreq();
  ::CSDecorateBagReq* temp = decoratebagreq_;
  decoratebagreq_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_decoratebagreq(::CSDecorateBagReq* decoratebagreq) {
  delete decoratebagreq_;
  decoratebagreq_ = decoratebagreq;
  if (decoratebagreq) {
    set_has_decoratebagreq();
  } else {
    clear_has_decoratebagreq();
  }
}

// optional .CSDecorateBagRsp DecorateBagRsp = 6;
inline bool CSMsgBody::has_decoratebagrsp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMsgBody::set_has_decoratebagrsp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMsgBody::clear_has_decoratebagrsp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMsgBody::clear_decoratebagrsp() {
  if (decoratebagrsp_ != NULL) decoratebagrsp_->::CSDecorateBagRsp::Clear();
  clear_has_decoratebagrsp();
}
inline const ::CSDecorateBagRsp& CSMsgBody::decoratebagrsp() const {
  return decoratebagrsp_ != NULL ? *decoratebagrsp_ : *default_instance_->decoratebagrsp_;
}
inline ::CSDecorateBagRsp* CSMsgBody::mutable_decoratebagrsp() {
  set_has_decoratebagrsp();
  if (decoratebagrsp_ == NULL) decoratebagrsp_ = new ::CSDecorateBagRsp;
  return decoratebagrsp_;
}
inline ::CSDecorateBagRsp* CSMsgBody::release_decoratebagrsp() {
  clear_has_decoratebagrsp();
  ::CSDecorateBagRsp* temp = decoratebagrsp_;
  decoratebagrsp_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_decoratebagrsp(::CSDecorateBagRsp* decoratebagrsp) {
  delete decoratebagrsp_;
  decoratebagrsp_ = decoratebagrsp;
  if (decoratebagrsp) {
    set_has_decoratebagrsp();
  } else {
    clear_has_decoratebagrsp();
  }
}

// optional .CSChatReq ChatReq = 7;
inline bool CSMsgBody::has_chatreq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMsgBody::set_has_chatreq() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMsgBody::clear_has_chatreq() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMsgBody::clear_chatreq() {
  if (chatreq_ != NULL) chatreq_->::CSChatReq::Clear();
  clear_has_chatreq();
}
inline const ::CSChatReq& CSMsgBody::chatreq() const {
  return chatreq_ != NULL ? *chatreq_ : *default_instance_->chatreq_;
}
inline ::CSChatReq* CSMsgBody::mutable_chatreq() {
  set_has_chatreq();
  if (chatreq_ == NULL) chatreq_ = new ::CSChatReq;
  return chatreq_;
}
inline ::CSChatReq* CSMsgBody::release_chatreq() {
  clear_has_chatreq();
  ::CSChatReq* temp = chatreq_;
  chatreq_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_chatreq(::CSChatReq* chatreq) {
  delete chatreq_;
  chatreq_ = chatreq;
  if (chatreq) {
    set_has_chatreq();
  } else {
    clear_has_chatreq();
  }
}

// optional .CSChatRsp ChatRsp = 8;
inline bool CSMsgBody::has_chatrsp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSMsgBody::set_has_chatrsp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSMsgBody::clear_has_chatrsp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSMsgBody::clear_chatrsp() {
  if (chatrsp_ != NULL) chatrsp_->::CSChatRsp::Clear();
  clear_has_chatrsp();
}
inline const ::CSChatRsp& CSMsgBody::chatrsp() const {
  return chatrsp_ != NULL ? *chatrsp_ : *default_instance_->chatrsp_;
}
inline ::CSChatRsp* CSMsgBody::mutable_chatrsp() {
  set_has_chatrsp();
  if (chatrsp_ == NULL) chatrsp_ = new ::CSChatRsp;
  return chatrsp_;
}
inline ::CSChatRsp* CSMsgBody::release_chatrsp() {
  clear_has_chatrsp();
  ::CSChatRsp* temp = chatrsp_;
  chatrsp_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_chatrsp(::CSChatRsp* chatrsp) {
  delete chatrsp_;
  chatrsp_ = chatrsp;
  if (chatrsp) {
    set_has_chatrsp();
  } else {
    clear_has_chatrsp();
  }
}

// optional .CSMateReq MateReq = 9;
inline bool CSMsgBody::has_matereq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSMsgBody::set_has_matereq() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSMsgBody::clear_has_matereq() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSMsgBody::clear_matereq() {
  if (matereq_ != NULL) matereq_->::CSMateReq::Clear();
  clear_has_matereq();
}
inline const ::CSMateReq& CSMsgBody::matereq() const {
  return matereq_ != NULL ? *matereq_ : *default_instance_->matereq_;
}
inline ::CSMateReq* CSMsgBody::mutable_matereq() {
  set_has_matereq();
  if (matereq_ == NULL) matereq_ = new ::CSMateReq;
  return matereq_;
}
inline ::CSMateReq* CSMsgBody::release_matereq() {
  clear_has_matereq();
  ::CSMateReq* temp = matereq_;
  matereq_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_matereq(::CSMateReq* matereq) {
  delete matereq_;
  matereq_ = matereq;
  if (matereq) {
    set_has_matereq();
  } else {
    clear_has_matereq();
  }
}

// optional .CSMateRsp Matersp = 10;
inline bool CSMsgBody::has_matersp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSMsgBody::set_has_matersp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSMsgBody::clear_has_matersp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSMsgBody::clear_matersp() {
  if (matersp_ != NULL) matersp_->::CSMateRsp::Clear();
  clear_has_matersp();
}
inline const ::CSMateRsp& CSMsgBody::matersp() const {
  return matersp_ != NULL ? *matersp_ : *default_instance_->matersp_;
}
inline ::CSMateRsp* CSMsgBody::mutable_matersp() {
  set_has_matersp();
  if (matersp_ == NULL) matersp_ = new ::CSMateRsp;
  return matersp_;
}
inline ::CSMateRsp* CSMsgBody::release_matersp() {
  clear_has_matersp();
  ::CSMateRsp* temp = matersp_;
  matersp_ = NULL;
  return temp;
}
inline void CSMsgBody::set_allocated_matersp(::CSMateRsp* matersp) {
  delete matersp_;
  matersp_ = matersp;
  if (matersp) {
    set_has_matersp();
  } else {
    clear_has_matersp();
  }
}

// -------------------------------------------------------------------

// CSMsgHead

// required uint64 uid = 1;
inline bool CSMsgHead::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsgHead::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsgHead::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsgHead::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 CSMsgHead::uid() const {
  return uid_;
}
inline void CSMsgHead::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required .CSMsgID msgID = 2;
inline bool CSMsgHead::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsgHead::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsgHead::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsgHead::clear_msgid() {
  msgid_ = 0;
  clear_has_msgid();
}
inline ::CSMsgID CSMsgHead::msgid() const {
  return static_cast< ::CSMsgID >(msgid_);
}
inline void CSMsgHead::set_msgid(::CSMsgID value) {
  assert(::CSMsgID_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// CSMsg

// required .CSMsgHead head = 1;
inline bool CSMsg::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMsg::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMsg::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMsg::clear_head() {
  if (head_ != NULL) head_->::CSMsgHead::Clear();
  clear_has_head();
}
inline const ::CSMsgHead& CSMsg::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::CSMsgHead* CSMsg::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::CSMsgHead;
  return head_;
}
inline ::CSMsgHead* CSMsg::release_head() {
  clear_has_head();
  ::CSMsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void CSMsg::set_allocated_head(::CSMsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// required .CSMsgBody body = 2;
inline bool CSMsg::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMsg::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMsg::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMsg::clear_body() {
  if (body_ != NULL) body_->::CSMsgBody::Clear();
  clear_has_body();
}
inline const ::CSMsgBody& CSMsg::body() const {
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
inline ::CSMsgBody* CSMsg::mutable_body() {
  set_has_body();
  if (body_ == NULL) body_ = new ::CSMsgBody;
  return body_;
}
inline ::CSMsgBody* CSMsg::release_body() {
  clear_has_body();
  ::CSMsgBody* temp = body_;
  body_ = NULL;
  return temp;
}
inline void CSMsg::set_allocated_body(::CSMsgBody* body) {
  delete body_;
  body_ = body;
  if (body) {
    set_has_body();
  } else {
    clear_has_body();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSRegisterLoginCmd>() {
  return ::CSRegisterLoginCmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSBagCmd>() {
  return ::CSBagCmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSDecorateBagCmd>() {
  return ::CSDecorateBagCmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSChatCmd>() {
  return ::CSChatCmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSMateCmd>() {
  return ::CSMateCmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSMsgID>() {
  return ::CSMsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSmsg_2eproto__INCLUDED
